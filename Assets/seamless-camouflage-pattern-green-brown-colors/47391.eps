%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.2
%%For: (\700\753\745\752\761\745\751 \705\743\756\760\756\742) ()
%%Title: (Camouflage pattern.eps)
%%CreationDate: 3/2/2012 12:40 PM
%%Canvassize: 16383
%%BoundingBox: 0 -450 450 0
%%HiResBoundingBox: 0 -450 450 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 225.5 -225.5 225.5 -225.5
%AI3_TileBox: -72.48 -646.0205 522.4805 195.8999
%AI3_DocumentPreview: Header
%AI5_ArtSize: 450 450
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -376 241 1 1202 911 18 0 0 540 116 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:-81 -621
%AI7_GridSettings: 50 5 50 5 0 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.6
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS5) (FILTERiT4 Live Trail ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS5) (FILTERiT4 Live Tiling ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS5) (FILTERiT4 Live Shadow ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS5) (FILTERiT4 Live Reflections ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS5) (FILTERiT4 Live Neon ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS5) (FILTERiT4 Live Generation ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS5) (FILTERiT4 Live Galaxy ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS5) (FILTERiT4 Live Frame ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS5) (FILTERiT4 Live Explosion ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS5) (FILTERiT4 Live Emboss ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS5) (FILTERiT4 Live Cutout ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS5) (FILTERiT4 Live Circle ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS5) (FILTERiT4 Live Border ver4.2 for Win AICS5) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0
0
0
1
0
0
0
4 %_Br
[
0 0 0 1 0 0 0 2 50 100 %_BS
%_0 0 0 1 0 0 0 2 50 100 Bs
0 0 0 1 0 0 0 2 25 0 %_BS
%_0 0 0 1 0 0 0 2 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Yellow, Orange)
(Green, Yellow, Orange) 0 7 Bd
[
<
04050606070808090A0B0B0C0D0D0E0F10101112131314151616171819191A1B1C1D1D1E1F202021
22232324252626272828292A2B2B2C2D2D2E2F303031323233343435363637373838393A3A3B3B3C
3C3D3E3E3F3F40404142424343444445454647474849494A4B4B4C4D4D4E4F4F5051515253535455
55565758585A5C5E5F61636466686A6B6D6F7072747577797A7D7E7F8283858688898B8C8D8F9092
93959698999B9C9D9FA0A1A3A4A6A7A8AAABACAEAFB0B2B3B4B5B7B8B9BBBCBDBEBFC1C2C3C4C5C6
C7C8CACBCCCDCECFD0D2D3D4D6D7D8D9DA
>
<
BFBFBEBEBEBDBDBDBCBBBBBABABAB9B9B9B7B7B6B6B6B4B4B4B3B3B2B1B1B1AFAFAFADADADACABAB
AAAAA9A8A8A8A6A6A6A4A4A4A2A2A1A0A09F9E9E9C9C9C9A9A9A9898979695959393939190908E8E
8D8C8B8B89898886868584838181807E7E7D7B7B7A7877777574747171706E6D6D6B6A6967676664
636260605F5D5D5C5C5B5A5A5A5858585656565554545352525151504F4F4E4D4D4C4B4B4A494948
47464545444343424141403F3F3E3D3D3C3B3A3A38373735353433323230302F2E2D2D2B2B2A2928
2726262424232221201F1E1E1C1B1B1918
>
<
E9EAEAEAEAEAEBEBEBEBECECECECEDEDEDEEEEEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F5F6F6F5F6F5
F5F5F5F4F4F4F3F3F3F2F2F2F2F2F2F1F1F0F0F0EFEFEFEFEEEDEDEDECECEBEBEBEBEAE9E9E9E9E9
E8E8E7E7E7E6E6E6E6E6E6E5E5E5E5E5E4E4E5E5E5E4E4E4E4E5E4E4E4E4E5E4E4E4E5E5E4E4E5E5
E5E5E5E5E6E6E5E6E6E7E7E8E6E7E8E8E9E7E8E9E9E9E9E9E9EAEAE9EAEAEBEBEAEAEBEBEBEAEBEB
EBECEBEBEBECECEDECECECEDEEECEDEDEEEEEDEDEEEEEEEEEEEEEFEFEEEFEFEFF0EFEFF0F0F0F0F0
F1F1F1F2F1F1F2F2F2F2F2F3F3F3F3F4F4
>
<
00000101010101010101010102020202020202020303030303030404040404040505050506060607
07070808080909090A0A0B0B0B0C0C0C0D0D0E0E0F0F0F1010111112121313141515161717181919
1A1A1B1C1C1D1E1E1F2020212223232425252627272829292A2B2B2C2D2D2E2F2F30313132323334
343535363736363434343232323030302E2E2E2C2C2B2A2A29282827262525242423222221202020
1E1E1D1D1C1B1B1A1919191717171615151414131212121110100F0F0F0E0E0D0C0C0C0B0B0A0A09
0808080707070606060505050505050404
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827
>
<
404041414142424243434344444445454546464747474848484949494A4A4A4B4B4B4C4C4C4D4D4D
4E4E4E4F4F4F50505051515152525353535454545555555656565757575858585959595A5A5A5B5B
5B5C5C5C5D5D5D5E5E5E5F5F60606061616162626263636364646465656566666667676768686869
69696A6A6A6B6B6C6C6C6D6D6D6E6E6E6F6F6F707070717171727272737373747474757575767676
77777878787979797A7A7A7B7B7B7C7C7C7D7D7D7E7E7E7F7F7F8080808181818282828383838484
8585858686868787878888888989898A8A
>
<
00000001010101010202020202030303030303040404040405050505050606060606070707070708
0808080809090909090A0A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F0F
10101010101111111111111212121212131313131314141414141515151515161616161617171717
1718181818181919191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E1E1E1E1F1F1F
1F1F2020202020202121212121222222222223232323232424242424252525252526262626262727
27272727282828282829292929292A2A2A
>
4 %_Br
<
07070707070707070707070706060606050504040303020202020203030404050506060606070707
07070707070707070606060605050404040404040404040505050606060607070707070707070707
07070606060605050505050505050505050505060606060607070707070707070707070606060606
05050505050505050505050505050506060606060707070707070707070706060606060605050505
04040404040404
>
<
161718191A1B1C1D1E1F2021222324252728292A2C2D2E2F30313233343435363738393A3A3B3C3D
3E3F4041424344454748494A4B4C4D4E4F505153545556575758595A5B5C5D5E5F60616263646566
6768696A6B6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F
909192939495969798999A9B9C9D9E9FA0A1A2A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8
B9BABBBCBDBEBF
>
<
E8E8E8E9E9E9EAEAEAEBEBEBEBECECECECEDEDEDEDEDEDEDEEEEEEEEEFEFEFEFEFEFEFEFEFF0F0F0
F0F1F1F1F1F1F2F2F3F3F3F3F4F4F4F4F3F3F3F3F3F2F2F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEEEE
EDEDEDEDEDECECECECECECECECEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9
>
<
00000101010101010101010101010000000000000000000000000000000000000001010101010101
01010101010101010101010101000000000000000000000000000000000101010101010101010101
01010100000000000000000000000000000000000000000000000000010101000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000
>
1
<
E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897
969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F
6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847
46454443424140
>
<
1010101010100F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A090909090909090909090808
08080808080808080807070707070707070707060606060606060606060505050505050505050505
04040404040404040404030303030303030303030302020202020202020202010101010101010101
01000000000000
>
4 %_Br
<
DAD9D9D8D7D6D5D4D3D2D1D0CECDCCCBCAC8C7C6C5C4C2C1C0BFBEBDBCBBBAB9B8B7B6B5B3B3B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737270706E6E6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1919181716151414131211
11100F0E0E0D0C0C0B0B0A090908080707
>
<
18191819181818181918191819181819181918191818191819181818181918181818191818181817
18181818171817181817181718171718171817171717181717171716171817171717161718171717
17171718171817181818181818181819181918181818191818181818181918181818181819181818
18171818181818181718181818171817181817181718181818171817181818181718171818181818
18181818181818181818181818181818181818181818181818181818181818181818181818181818
1817181817181717171717161716161616
>
<
F4F4F4F3F3F4F4F4F3F4F3F3F3F4F4F4F4F4F4F4F4F5F5F5F5F6F6F6F6F6F8F7F8F8F7F8F8F8F9FA
FAF9F9F8F8F7F7F6F5F5F4F4F3F3F2F2F2F1F1F1F0F0EFF0F0EFEFEFEFEEEEEFEFEFEFEFEFEFEFEF
EFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1F1F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F3F3F2F1F1F0
F0EFEFEEEEEDEDEDECECECECEBEBEBEAEAEAEAEAEAEAE9E9E9E9EAEAE9E9E9E9E9E9EAEAEAEAEAEB
EBEBEBECECECECEDEDEDEDEEEEEFEFEFEFF0F0F1F2F2F2F2F2F3F3F4F4F5F4F4F4F3F3F3F3F2F2F1
F1F0EFEFEEEDEDECEBEBEBEAEAE9E9E8E8
>
<
04040404040404040404040404030404030303030303030303030303030303030303030303030303
03030303030303030403040304030404040404040404040404040403040404040303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303040303030303030403030303040303030303030303030303030303030303
03030303030303030303030303030303030303030303030303020202020202020202020202010101
0101010101010101010101010101010100
>
<
2728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E
4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F70717273747576
7778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEE
EFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
8A8A8B8B8C8C8D8D8D8E8E8F8F9090909191929293939394949595969696979798989899999A9A9B
9B9B9C9C9D9D9E9E9E9F9FA0A0A1A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A7A8A8A9A9AAAAAAABABAC
ACADADADAEAEAFAFAFB0B0B1B1B2B2B2B3B3B4B4B5B5B5B6B6B7B7B8B8B8B9B9BABABBBBBBBCBCBD
BDBEBEBEBFBFC0C0C1C1C1C2C2C3C3C4C4C4C5C5C6C6C6C7C7C8C8C9C9C9CACACBCBCCCCCCCDCDCE
CECFCFCFD0D0D1D1D2D2D2D3D3D4D4D5D5D5D6D6D7D7D8D8D8D9D9DADADBDBDBDCDCDDDDDDDEDEDF
DFE0E0E0E1E1E2E2E3E3E3E4E4E5E5E6E6
>
<
2A2A2A2A2A2929292929292929282828282828282827272727272727272726262626262626262525
25252525252524242424242424242423232323232323232222222222222222212121212121212120
20202020202020201F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C
1C1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A19191919191919191818181818181818171717171717
17171716161616161616161515151515151515141414141414141413131313131313131312121212
1212121211111111111111111010101010
>
4 %_Br
<
04050606070808090A0B0B0C0D0D0E0F10101112131314151616171819191A1B1C1D1D1E1F202021
22232324252626272828292A2B2B2C2D2D2E2F303031323233343435363637373838393A3A3B3B3C
3C3D3E3E3F3F40404142424343444445454647474849494A4B4B4C4D4D4E4F4F5051515253535455
55565758585A5C5E5F61636466686A6B6D6F7072747577797A7D7E7F8283858688898B8C8D8F9092
93959698999B9C9D9FA0A1A3A4A6A7A8AAABACAEAFB0B2B3B4B5B7B8B9BBBCBDBEBFC1C2C3C4C5C6
C7C8CACBCCCDCECFD0D2D3D4D6D7D8D9DA
>
<
BFBFBEBEBEBDBDBDBCBBBBBABABAB9B9B9B7B7B6B6B6B4B4B4B3B3B2B1B1B1AFAFAFADADADACABAB
AAAAA9A8A8A8A6A6A6A4A4A4A2A2A1A0A09F9E9E9C9C9C9A9A9A9898979695959393939190908E8E
8D8C8B8B89898886868584838181807E7E7D7B7B7A7877777574747171706E6D6D6B6A6967676664
636260605F5D5D5C5C5B5A5A5A5858585656565554545352525151504F4F4E4D4D4C4B4B4A494948
47464545444343424141403F3F3E3D3D3C3B3A3A38373735353433323230302F2E2D2D2B2B2A2928
2726262424232221201F1E1E1C1B1B1918
>
<
E9EAEAEAEAEAEBEBEBEBECECECECEDEDEDEEEEEEEFEFF0F0F1F1F2F2F3F3F4F4F5F5F5F6F6F5F6F5
F5F5F5F4F4F4F3F3F3F2F2F2F2F2F2F1F1F0F0F0EFEFEFEFEEEDEDEDECECEBEBEBEBEAE9E9E9E9E9
E8E8E7E7E7E6E6E6E6E6E6E5E5E5E5E5E4E4E5E5E5E4E4E4E4E5E4E4E4E4E5E4E4E4E5E5E4E4E5E5
E5E5E5E5E6E6E5E6E6E7E7E8E6E7E8E8E9E7E8E9E9E9E9E9E9EAEAE9EAEAEBEBEAEAEBEBEBEAEBEB
EBECEBEBEBECECEDECECECEDEEECEDEDEEEEEDEDEEEEEEEEEEEEEFEFEEEFEFEFF0EFEFF0F0F0F0F0
F1F1F1F2F1F1F2F2F2F2F2F3F3F3F3F4F4
>
<
00000101010101010101010102020202020202020303030303030404040404040505050506060607
07070808080909090A0A0B0B0B0C0C0C0D0D0E0E0F0F0F1010111112121313141515161717181919
1A1A1B1C1C1D1E1E1F2020212223232425252627272829292A2B2B2C2D2D2E2F2F30313132323334
343535363736363434343232323030302E2E2E2C2C2B2A2A29282827262525242423222221202020
1E1E1D1D1C1B1B1A1919191717171615151414131212121110100F0F0F0E0E0D0C0C0C0B0B0A0A09
0808080707070606060505050505050404
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827
>
<
404041414142424243434344444445454546464747474848484949494A4A4A4B4B4B4C4C4C4D4D4D
4E4E4E4F4F4F50505051515152525353535454545555555656565757575858585959595A5A5A5B5B
5B5C5C5C5D5D5D5E5E5E5F5F60606061616162626263636364646465656566666667676768686869
69696A6A6A6B6B6C6C6C6D6D6D6E6E6E6F6F6F707070717171727272737373747474757575767676
77777878787979797A7A7A7B7B7B7C7C7C7D7D7D7E7E7E7F7F7F8080808181818282828383838484
8585858686868787878888888989898A8A
>
<
00000001010101010202020202030303030303040404040405050505050606060606070707070708
0808080809090909090A0A0A0A0A0A0B0B0B0B0B0C0C0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F0F
10101010101111111111111212121212131313131314141414141515151515161616161617171717
1718181818181919191919191A1A1A1A1A1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D1E1E1E1E1E1F1F1F
1F1F2020202020202121212121222222222223232323232424242424252525252526262626262727
27272727282828282829292929292A2A2A
>
4 %_Br
<
07070707070707070707070706060606050504040303020202020203030404050506060606070707
07070707070707070606060605050404040404040404040505050606060607070707070707070707
07070606060605050505050505050505050505060606060607070707070707070707070606060606
05050505050505050505050505050506060606060707070707070707070706060606060605050505
04040404040404
>
<
161718191A1B1C1D1E1F2021222324252728292A2C2D2E2F30313233343435363738393A3A3B3C3D
3E3F4041424344454748494A4B4C4D4E4F505153545556575758595A5B5C5D5E5F60616263646566
6768696A6B6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F
909192939495969798999A9B9C9D9E9FA0A1A2A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8
B9BABBBCBDBEBF
>
<
E8E8E8E9E9E9EAEAEAEBEBEBEBECECECECEDEDEDEDEDEDEDEEEEEEEEEFEFEFEFEFEFEFEFEFF0F0F0
F0F1F1F1F1F1F2F2F3F3F3F3F4F4F4F4F3F3F3F3F3F2F2F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEEEE
EDEDEDEDEDECECECECECECECECEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9
>
<
00000101010101010101010101010000000000000000000000000000000000000001010101010101
01010101010101010101010101000000000000000000000000000000000101010101010101010101
01010100000000000000000000000000000000000000000000000000010101000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000
>
1
<
E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897
969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F
6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847
46454443424140
>
<
1010101010100F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A090909090909090909090808
08080808080808080807070707070707070707060606060606060606060505050505050505050505
04040404040404040404030303030303030303030302020202020202020202010101010101010101
01000000000000
>
4 %_Br
<
DAD9D9D8D7D6D5D4D3D2D1D0CECDCCCBCAC8C7C6C5C5C4C3C1C0BFBEBDBCBBBAB9B8B7B6B6B5B3B3
B1B0AFAEADACABABAAA9A8A7A6A5A4A4A3A2A1A09F9E9E9D9C9B9A9999989796959494939291908F
8F8E8D8C8B8B8A898887878685848483828180807F7E7D7D7C7B7A7A797877777675757473727270
70706E6E6C6C6B6A6A69686867666565646363626161605F5F5E5D5D5C5C5B5A5A59585857565655
5554535352525150504F4E4E4D4D4C4C4B4A4A4949484847464645454444434242414140403F3F3E
3E3D3D3C3C3B3B3A3A39393838373736363535343433333232313130302F2F2E2E2E2D2D2C2C2B2B
2A2A2A2929282827272726262525252424232323222221212120201F1F1F1E1E1E1D1D1D1C1C1B1B
1B1A1A1A191919191919181818171717161616161515151414141414131313131313121212111111
1111111111101010100F0F0F0F0E0E0E0E0E0E0E0E0E0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0B0B0B
0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A090909090909090909090909090909080808080808080808
08080808080808080808080807070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707
>
<
18191819181818181918191819191819181918191918181818191818181819181818181917181818
18171818181817171817181817181717181717181718181717171718161717171718161718171718
17171617181617171717171717181717181718181718181818181918181918181918181818181819
18181818181818181819181818181818181818191818181818181917181818181818181818181718
18181818181817181818181818181717181817181818171818181717181817181818171818181817
17181817171818181718181817181818181818181818171818181818181818191818181818171818
18181818181818191818181818181718181818181818181818181818181818181718181818181918
18181818191918181818181818181818181818181818181818181818171718181818181818181818
18181818181817171718181818181818171717171717181818181817171717171717171717181817
17171717171717171717171717161616161616161616161717171717171717161616161616161616
16161616161616161616161616161616161616161616161616161616161616161616161616161616
16161616161616161616161616161616
>
<
F4F4F4F3F3F4F4F4F3F4F3F3F3F4F4F4F4F4F4F4F4F4F5F6F5F5F6F6F6F6F6F8F7F8F8F7F8F8F8F8
F9FAFAF9F9F8F8F8F7F7F6F5F5F4F4F4F3F3F3F2F2F1F1F1F1F0F0EFF0F0F0EFEFEFEFEFEEEEEFEF
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F1F1F1F2F2F2F2F2F2F2
F2F2F3F3F3F3F3F3F3F3F3F3F3F3F4F4F3F3F3F2F1F1F1F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECEC
ECECECECEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9EAEAEAE9E9E9EAE9E9E9E9E9
E9E9E9EAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEE
EEEEEEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F4
F4F4F4F4F4F4F5F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1
F1F1F1F1F1F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDECECECECECECECEB
EBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAE9E9E9EAEAEAEAEAE9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8E8
>
<
04040404040404040404040404040404030303030303030303030303030303030303030303030303
03030303030303030303030403040303040304040404040404040404030404040404030404040404
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303040303
03040303030303030304030304040303030403030304030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030303030303030303
03030303030303030303030303030303030303030303030303030303030303030202020202020202
02020202020202020202020202020202020202020202020202020202020201010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010100000000000000000000
00000000000000000000000000000000
>
<
2728292A2B2C2D2E2F303132333435363738393A3B3B3C3D3E3F40414243444546474849494A4B4C
4D4E4F50515253535455565758595A5A5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F
6F7071727373747576777778797A7A7B7C7D7E7E7F80818182838484858687878889898A8B8C8C8D
8E8E8F90919192939394959596979898999A9A9B9C9C9D9E9E9FA0A0A1A1A2A3A3A4A5A5A6A7A7A8
A8A9AAAAABABACADADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B7B7B8B8B9B9BABBBBBCBCBDBDBEBEBF
BFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACBCBCCCCCDCDCECECFCFCFD0D0D1D1D2D2
D3D3D3D4D4D5D5D6D6D6D7D7D8D8D8D9D9DADADADBDBDCDCDCDDDDDEDEDEDFDFDFE0E0E0E1E1E2E2
E2E3E3E3E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E8E9E9E9EAEAEAEBEBEBEBECECECECEDEDEDEEEEEE
EEEFEFEFEFF0F0F0F0F1F1F1F1F2F2F2F2F2F3F3F3F3F4F4F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7
F7F7F7F8F8F8F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFC
FCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
8A8A8B8B8C8C8D8D8D8E8E8F8F8F909091919292929393949494959596969697979898989999999A
9A9B9B9B9C9C9D9D9D9E9E9E9F9FA0A0A0A1A1A1A2A2A2A3A3A4A4A4A5A5A5A6A6A6A7A7A7A8A8A8
A9A9AAAAAAABABABACACACADADADAEAEAEAFAFAFB0B0B0B0B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B5
B6B6B6B7B7B7B8B8B8B8B9B9B9BABABABBBBBBBBBCBCBCBDBDBDBDBEBEBEBEBFBFBFC0C0C0C0C1C1
C1C1C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACACACB
CBCBCBCCCCCCCCCCCDCDCDCDCECECECECECFCFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3
D3D3D3D4D4D4D4D4D5D5D5D5D5D5D6D6D6D6D6D6D7D7D7D7D7D7D8D8D8D8D8D8D9D9D9D9D9D9D9DA
DADADADADADADBDBDBDBDBDBDBDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDEDEDEDEDEDEDEDEDEDFDFDF
DFDFDFDFDFDFE0E0E0E0E0E0E0E0E0E0E1E1E1E1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E2E2E2E3
E3E3E3E3E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5
E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6E6
>
<
2A2A2A2A2A2929292929292929282828282828282828272727272727272727262626262626262626
25252525252525252524242424242424242423232323232323232323222222222222222222222121
212121212121212121202020202020202020201F1F1F1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E
1E1E1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1A
1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919191919191919181818181818181818181818
18181817171717171717171717171717171717171616161616161616161616161616161616161515
15151515151515151515151515151515151414141414141414141414141414141414141414141414
13131313131313131313131313131313131313131313131313131212121212121212121212121212
12121212121212121212121212121212121211111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111010101010101010101010101010
10101010101010101010101010101010101010101010101010101010101010101010101010101010
10101010101010101010101010101010
>
4 %_Br
[
0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 2 50 100 %_BS
%_0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 2 50 100 Bs
0.016724 0.74963 0.915312 0.001556 1 0.25098 0 2 50 80.117 %_BS
%_0.016724 0.74963 0.915312 0.001556 1 0.25098 0 2 50 80.117 Bs
0.026703 0.085451 0.909056 0.001862 1 0.901961 0.062745 2 50 64 %_BS
%_0.026703 0.085451 0.909056 0.001862 1 0.901961 0.062745 2 50 64 Bs
0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 2 50 47 %_BS
%_0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 2 50 47 Bs
0.016724 0.74963 0.915312 0.001556 1 0.25098 0 2 50 30 %_BS
%_0.016724 0.74963 0.915312 0.001556 1 0.25098 0 2 50 30 Bs
0.026703 0.085451 0.909056 0.001862 1 0.901961 0.062745 2 50 15 %_BS
%_0.026703 0.085451 0.909056 0.001862 1 0.901961 0.062745 2 50 15 Bs
0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 2 28 0 %_BS
%_0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 2 28 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple Radial)
(Purple Radial) 1 2 Bd
[
<
000102020304050506070809090A0B0B0C0D0D0E0E0F101011111112121313141515161617171718
18191A1A1B1B1B1B1C1D1D1E1E1F1E1F202021212222232324252526262727282829292A2B2B2C2C
2D2D2E2E2E2E2F2F3030313132323333343435353636373738393A3A3B3B3C3C3D3D3E3E3F3F4040
414142424343444445454546464747484849494A4A4A4B4B4C4C4D4D4E4E4E4F4F50505151515252
5353545454565557575758585959595A5A5B5B5B5C5C5D5D5D5E5E5F5F5F60606061616262626363
6364646565656666666767676868686969696A6A6B6B6B6C6C6C6E6E6E6F6F6F6F70707071717172
727273737374747575767676777777787878787979797A7A7A7A7B7B7B7B7C7C7C7E7E7D7E7F7F7F
7F808080808181818182828282838383838585858585868686868787878787888888888889898989
898A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8C8D8D8D8D8D8F8F8E8E8E8E8F9090909090909191919191
91919292929292929293939393939393939394949494949494949495959595959595959595979797
97979797979696969697989898989898989898989898989898989898999999999999999999999999
99999999999999999999999999
>
<
0001010202030404050606070809090A0B0C0D0E0F0F1010111213141516171718191A1B1C1C1D1D
1E1F202121222324252626262828292A2B2C2D2D2D2E2F303132333334343536373838393A3B3C3D
3C3D3E3F40414142434445454647484948494A4B4C4C4D4E4F505051525353545556575758595A5A
5A5C5C5C5D5E5F5F60616162636464656666676869696A6B6B6C6D6E6D6F706F7171717273737476
757677777879797A7B7B7C7C7D7E7E7F8180818382848385868587868889898A8A8B8C8C8D8D8E8F
8F909091919293939494959596969899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A3A3A4A4A5A5A6A6
A6A7A7A8A8A9A9ABABACACADADAEAEAFAFB0B0B0B1B1B2B2B4B4B5B5B5B6B6B7B7B7B8B8B9B9BABA
BABBBBBDBDBCBEBEBFBFBFC0C0C0C1C1C2C2C2C3C3C3C4C4C4C6C6C6C7C7C7C8C8C8C9C9C9CACACA
CCCCCCCDCDCDCECECECED0D0D0D1D1D1D1D2D2D2D4D4D4D4D5D5D5D5D7D7D7D7D8D8D8D8DADADADA
D9DBDBDBDBDCDCDCDCDCDEDEDEDEDEDFDFDFDFDFDFE0E0E0E0E0E0E1E1E1E1E1E1E2E2E2E2E2E2E2
E3E3E3E3E3E3E3E3E3E4E4E4E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6
E6E6E6E6E6E6E6E6E6E6E6E6E6
>
<
00000101020202030303030404040505050505060606060606070707070707070808080808080909
0909090909090A090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A090A0909090A09090908
09080908080808080708070707070706070605060506050404030403030303030202020203020203
03030404040404040505050505050506060606060606060607070707070808080808090909090909
0A0A0A0A0A0A0A0A0A0B0A0A0B0A0A0B0B0B0B0B0B0B0B0B0B0B0A0A0B0A0A0B0B0A0A0A0A0B0A09
090A0A090A0909090909080908080808080808080807080707080707070707060506060605060505
05050504040404030303030303040404040505050505060606060606060607070707070807080808
08080808080908080808090909090909090909090909090909090A0A0A0A0A0B0B0B0A0A0A0B0B0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A
0B0B0B0B0B0A0A0A0A0B0A0A0A0A0A0A0A0A0A0B0B0A0A0A0A0A0A0A0A0A0A0B0B0A0A0A0A0A0A0A
0A0A0A0A0A0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0A0A0A0A0A0A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101000000000000000000000000
00000000000000000000000000000000000000000000000000000000010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010100000000000000000000000000000000000000000000000000000001010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
02010101010101010102010101010101010102020202020202020202020202020202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202
>
<
FFFEFEFDFCFCFBFBFAF9F9F8F7F7F6F6F5F4F4F3F3F2F1F1F0F0EFEEEEEDEDECEBEBEAEAE9E8E8E7
E7E6E5E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDBDADAD9D8D8D7D7D6D6D5D5D4D4D3D2D2D1D1
D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBD
BCBCBBBBBABAB9B9B8B8B8B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0AFAFAFAEAEADADACACACABAB
AAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F9F9F9E9E9E9D9D9C9C9C9B9B
9B9A9A9999999898989797979696969595959494939393929292919191909090908F8F8F8E8E8E8D
8D8D8C8C8C8B8B8B8B8A8A8A89898988888888878787868686868585858584848483838383828282
8281818181808080807F7F7F7F7E7E7E7E7D7D7D7D7D7C7C7C7C7B7B7B7B7B7A7A7A7A7A79797979
79787878787877777777777676767676767575757575747474747474747373737373737272727272
7272717171717171717070707070707070706F6F6F6F6F6F6F6F6F6E6E6E6E6E6E6E6E6E6E6D6D6D
6D6D6D6D6D6D6D6D6D6D6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6B6B6B6B6B6B6B6B6B6B6B6B
6B6B6B6B6B6B6B6B6B6B6B6B6B
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDADA
D9D8D7D6D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C8C7C6C5C4C3C2C1C1C0BFBEBDBCBBBBBAB9B8B7B6
B6B5B4B3B2B1B1B0AFAEADADACABAAA9A9A8A7A6A5A5A4A3A2A1A1A09F9E9E9D9C9B9A9A99989797
9695949493929191908F8F8E8D8C8C8B8A8A89888787868585848382828180807F7E7E7D7C7C7B7A
7A7978787776767574747373727171706F6F6E6D6D6C6C6B6A6A6969686767666665646463636261
6160605F5F5E5D5D5C5C5B5B5A5A5958585757565655555454535352525151504F4F4E4E4D4D4C4C
4C4B4B4A4A4949484847474646454544444343434242414140403F3F3F3E3E3D3D3D3C3C3B3B3A3A
3A3939383838373736363635353534343333333232323131313030302F2F2F2E2E2E2D2D2D2C2C2C
2B2B2B2A2A2A29292929282828272727272626262525252524242424232323232222222221212121
21202020201F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A1A
19191919191919191918181818181818181818171717171717171717171717171716161616161616
16161616161616161616161616
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECEC
EBEBEAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E2E2E2E1E1E0E0DFDFDEDEDEDDDDDCDCDBDBDADADA
D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCCCCCCCBCBCACACAC9
C9C8C8C8C7C7C7C6C6C5C5C5C4C4C4C3C3C2C2C2C1C1C1C0C0C0BFBFBFBEBEBDBDBDBCBCBCBBBBBB
BABABAB9B9B9B8B8B8B7B7B7B6B6B6B5B5B5B4B4B4B3B3B3B2B2B2B2B1B1B1B0B0B0AFAFAFAEAEAE
AEADADADACACACACABABABAAAAAAAAA9A9A9A8A8A8A8A7A7A7A6A6A6A6A5A5A5A5A4A4A4A4A3A3A3
A3A2A2A2A2A1A1A1A1A0A0A0A09F9F9F9F9E9E9E9E9D9D9D9D9D9C9C9C9C9B9B9B9B9B9A9A9A9A9A
99999999999898989898979797979796969696969595959595959494949494939393939393929292
92929291919191919191909090909090908F8F8F8F8F8F8F8E8E8E8E8E8E8E8E8D8D8D8D8D8D8D8D
8C8C8C8C8C8C8C8C8C8B8B8B8B8B8B8B8B8B8B8A8A8A8A8A8A8A8A8A8A8A8A898989898989898989
89898989898888888888888888888888888888888888888888888787878787878787878787878787
87878787878787878787878787
>
4 %_Br
[
0.000092 0 0.000031 0 1 1 1 2 30 63.1579 %_BS
%_0.000092 0 0.000031 0 1 1 1 2 30 63.1579 Bs
0.599145 0.901762 0.040986 0.007385 0.419608 0.086275 0.529412 2 50 100 %_BS
%_0.599145 0.901762 0.040986 0.007385 0.419608 0.086275 0.529412 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0
0
0
1
0
0
0
4 %_Br
0
0
0
1
0
0
0
4 %_Br
[
0 0 0 1 0 0 0 2 56.0729 57.4443 %_BS
%_0 0 0 1 0 0 0 2 56.0729 57.4443 Bs
0 0 0 1 0 0 0 2 31.8603 79.7713 %_BS
%_0 0 0 1 0 0 0 2 31.8603 79.7713 Bs
0 0 0 1 0 0 0 2 50 100 %_BS
%_0 0 0 1 0 0 0 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0.013123 0.959808 0.914061 0.001068 1 0 0 Xa
 0.013123 0.959808 0.914061 0.001068 1 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.599145 0.901762 0.040986 0.007385 0.419608 0.086275 0.529412 Xa
 0.599145 0.901762 0.040986 0.007385 0.419608 0.086275 0.529412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 Xa
 0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.599145 0.901762 0.040986 0.007385 0.419608 0.086275 0.529412 Xa
 0.599145 0.901762 0.040986 0.007385 0.419608 0.086275 0.529412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.013123 0.959808 0.914061 0.001068 1 0 0 Xa
 0.013123 0.959808 0.914061 0.001068 1 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7966 7966 m
-7966 7907.0254 L
-7950.4902 7907.0254 L
-7950.4902 7966 L
-7966 7966 L
n
0 O
0 0 0 1 0 0 0 Xa
10 M-7966 7917.0586 m
-7966 7916.5742 L
-7950.4878 7916.5742 L
-7950.4878 7917.0586 L
-7966 7917.0586 L
f
-7966 7934.3838 m
-7966 7933.8965 L
-7950.4878 7933.8965 L
-7950.4878 7934.3838 L
-7966 7934.3838 L
f
-7965.9995 7919.3682 m
-7965.9995 7918.6494 L
-7950.4878 7918.6494 L
-7950.4878 7919.3682 L
-7965.9995 7919.3682 L
f
-7965.9995 7929.6328 m
-7965.9995 7928.9121 L
-7950.4878 7928.9121 L
-7950.4878 7929.6328 L
-7965.9995 7929.6328 L
f
-7965.9995 7927.4951 m
-7965.9995 7926.4141 L
-7950.4878 7926.4141 L
-7950.4878 7927.4951 L
-7965.9995 7927.4951 L
f
-7965.9995 7921.9395 m
-7965.9995 7920.8594 L
-7950.4878 7920.8594 L
-7950.4878 7921.9395 L
-7965.9995 7921.9395 L
f
-7965.9995 7924.9854 m
-7965.9995 7923.3345 L
-7950.4878 7923.3345 L
-7950.4878 7924.9854 L
-7965.9995 7924.9854 L
f
*u
1 D
-7950.4888 7933.1455 m
-7965.9995 7933.1455 L
-7965.9995 7932.6816 L
-7965.6514 7932.6816 L
-7965.6514 7931.4844 L
-7965.9995 7931.4844 L
-7965.9995 7931.0215 L
-7950.4888 7931.0215 L
-7950.4888 7931.4844 L
-7950.8408 7931.4844 L
-7950.8408 7932.6846 L
-7950.4888 7932.6846 L
-7950.4888 7933.1455 L
f
0 D
-7962.1255 7932.6846 m
-7961.4199 7932.6846 L
-7961.4199 7931.4844 L
-7962.1255 7931.4844 L
-7962.1255 7932.6846 L
f
-7962.8306 7931.4844 m
-7963.5361 7931.4844 L
-7963.5361 7932.6846 L
-7962.8306 7932.6846 L
-7962.8306 7931.4844 L
f
-7960.7144 7932.6846 m
-7960.0098 7932.6846 L
-7960.0098 7931.4844 L
-7960.7144 7931.4844 L
-7960.7144 7932.6846 L
f
-7959.3042 7932.6846 m
-7958.5986 7932.6846 L
-7958.5986 7931.4844 L
-7959.3042 7931.4844 L
-7959.3042 7932.6846 L
f
-7957.8936 7932.6846 m
-7957.1885 7932.6846 L
-7957.1885 7931.4844 L
-7957.8936 7931.4844 L
-7957.8936 7932.6846 L
f
-7956.4834 7932.6846 m
-7955.7778 7932.6846 L
-7955.7778 7931.4844 L
-7956.4834 7931.4844 L
-7956.4834 7932.6846 L
f
-7955.0718 7932.6846 m
-7954.3672 7932.6846 L
-7954.3672 7931.4844 L
-7955.0718 7931.4844 L
-7955.0718 7932.6846 L
f
-7953.6616 7932.6846 m
-7952.9575 7932.6846 L
-7952.9575 7931.4844 L
-7953.6616 7931.4844 L
-7953.6616 7932.6846 L
f
-7952.2515 7932.6846 m
-7951.5454 7932.6846 L
-7951.5454 7931.4844 L
-7952.2515 7931.4844 L
-7952.2515 7932.6846 L
f
-7964.9463 7932.6846 m
-7964.2407 7932.6846 L
-7964.2407 7931.4844 L
-7964.9463 7931.4844 L
-7964.9463 7932.6846 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7966 7965.9985 m
-7966 7907.0225 L
-7907.0254 7907.0225 L
-7907.0254 7965.9985 L
-7966 7965.9985 L
n
*u
1 D
0 O
0 0 0 1 0 0 0 Xa
10 M-7939.4902 7925.4453 m
-7937.9678 7926.9678 -7938.5166 7929.9834 -7940.7153 7932.1836 c
-7942.9146 7934.3809 -7945.9302 7934.9297 -7947.4526 7933.4082 c
-7948.9751 7931.8857 -7948.4263 7928.8682 -7946.2271 7926.6709 c
-7944.0288 7924.4717 -7941.0127 7923.9238 -7939.4902 7925.4453 c
f
0 D
-7940.1519 7926.0781 m
-7941.5728 7924.6582 -7944.2241 7925.0059 -7946.0728 7926.8545 c
-7947.9214 7928.7031 -7948.2695 7931.3545 -7946.8486 7932.7754 c
-7945.4282 7934.1953 -7942.7769 7933.8486 -7940.9282 7932 c
-7939.0786 7930.1504 -7938.7314 7927.5 -7940.1519 7926.0781 c
f
*U
-7957.5327 7916.2607 m
-7956.7969 7916.1309 l
-7956.71 7915.4385 l
-7951.9458 7920.981 l
-7957.5327 7916.2607 l
f
-7946.9409 7913.3145 m
-7947.1235 7911.7266 L
-7946.7002 7911.4512 -7946.3184 7911.1309 -7945.9346 7910.8145 C
-7945.6841 7913.9185 L
-7945.3535 7913.9453 L
-7945.4678 7910.4395 L
-7945.0503 7910.1162 -7944.6089 7909.8213 -7944.0913 7909.6152 C
-7944.1235 7914.7266 L
-7943.9063 7914.7734 L
-7943.5938 7909.4517 L
-7943.2007 7909.3516 -7942.7632 7909.3008 -7942.2642 7909.3213 C
-7943.0376 7918.4463 L
-7941.7666 7909.3594 L
-7941.3359 7909.4063 -7940.96 7909.4746 -7940.6289 7909.5625 C
-7941.4551 7916.3345 L
-7941.2998 7916.2109 L
-7940.1465 7909.7148 L
-7939.7471 7909.8633 -7939.4238 7910.0449 -7939.1528 7910.25 C
-7939.7334 7915.0762 L
-7939.4688 7914.9414 L
-7938.7114 7910.6426 L
-7938.2256 7911.1494 -7937.9194 7911.7344 -7937.5127 7912.2822 C
-7938.0713 7914.3496 L
-7937.6001 7914.1709 L
-7937.1338 7912.7383 L
-7936.8096 7913.0825 -7936.4063 7913.3945 -7935.8394 7913.6406 c
-7935.8506 7913.6357 -7934.7393 7913.6826 -7934.7466 7913.6533 c
-7934.7959 7913.4375 -7935.6655 7913.2998 -7935.6455 7913.3101 c
-7938.2974 7911.8965 -7937.3232 7909.3301 -7941.8735 7908.8735 c
-7945.4072 7908.5176 -7946.2515 7911.75 -7949.0962 7912.0615 c
-7949.1152 7912.0625 -7949.7632 7912.3174 -7949.8442 7912.4502 C
-7949.8486 7912.6255 -7949.4595 7912.5186 -7949.2417 7912.4766 c
-7948.6001 7912.3477 -7948.0498 7912.2402 -7947.5728 7911.9912 C
-7947.4023 7913.1914 L
-7946.9409 7913.3145 L
f
-7959.6626 7925.9463 m
-7961.2495 7925.7637 L
-7961.5254 7926.1865 -7961.8462 7926.5693 -7962.1626 7926.9517 C
-7959.0576 7927.2031 L
-7959.0322 7927.5352 L
-7962.5376 7927.4185 L
-7962.8608 7927.8369 -7963.1558 7928.2783 -7963.3618 7928.7959 C
-7958.2505 7928.7637 L
-7958.2031 7928.981 L
-7963.5249 7929.2935 L
-7963.6265 7929.6865 -7963.6758 7930.1255 -7963.6558 7930.6235 C
-7954.5298 7929.8496 L
-7963.6177 7931.1201 L
-7963.5713 7931.5498 -7963.5024 7931.9277 -7963.4146 7932.2578 C
-7956.6426 7931.4316 L
-7956.7656 7931.5869 L
-7963.2622 7932.7402 L
-7963.1138 7933.1406 -7962.9312 7933.4629 -7962.7271 7933.7344 C
-7957.9014 7933.1533 L
-7958.0352 7933.4185 L
-7962.3335 7934.1768 L
-7961.8271 7934.6621 -7961.2417 7934.9688 -7960.6943 7935.3755 C
-7958.6274 7934.8145 L
-7958.8066 7935.2871 L
-7960.2383 7935.7524 L
-7959.8945 7936.0762 -7959.5825 7936.481 -7959.3359 7937.0479 c
-7959.3408 7937.0361 -7959.2935 7938.1484 -7959.3242 7938.1416 c
-7959.54 7938.0908 -7959.6768 7937.2227 -7959.6675 7937.2412 c
-7961.0806 7934.5894 -7963.6475 7935.5645 -7964.1045 7931.0127 c
-7964.4595 7927.4805 -7961.2271 7926.6367 -7960.9165 7923.7915 c
-7960.9136 7923.7725 -7960.6602 7923.1255 -7960.5273 7923.0435 C
-7960.3535 7923.0381 -7960.4575 7923.4277 -7960.5015 7923.6455 c
-7960.6294 7924.2871 -7960.7368 7924.8369 -7960.9858 7925.3145 C
-7959.7842 7925.4854 L
-7959.6626 7925.9463 L
f
-7930.0127 7924.2285 m
-7925.2495 7925.6348 -7923.9502 7927.9209 -7923.9746 7929.5654 C
-7923.5366 7926.4595 -7921.6558 7928.8652 -7921.1313 7930.0029 C
-7922.0498 7926.4165 -7919.4463 7929.5435 -7919.2715 7929.8496 C
-7920.2593 7926.4063 -7927.3955 7923.9404 -7930.0127 7924.2285 C
f
-7935.9775 7923.2197 m
-7939.3242 7917.1738 -7936.4233 7915.5703 -7935.7354 7915.3774 c
-7935.9233 7915.4287 -7936.3135 7916.2949 -7936.2026 7916.6367 C
-7935.9482 7916.0928 -7935.4111 7915.8193 -7934.8994 7915.6094 C
-7936.1626 7916.6094 -7936.6943 7919.4111 -7935.9082 7922.9512 c
-7935.9775 7923.2197 l
f
-7938.2222 7923.5254 m
-7940.6035 7921.1016 -7942.0474 7920.2773 -7940.1035 7917.6685 c
-7940.2202 7917.8262 -7940.3838 7918.7168 -7940.1758 7919.0117 C
-7940.0942 7918.4185 -7939.6626 7917.9985 -7939.2358 7917.6455 C
-7940.9395 7921.0732 -7938.2222 7923.5254 y
f
-7930.6577 7922.4199 m
-7930.9897 7920.5615 -7929.4922 7919.4688 -7927.8662 7918.8496 C
-7928.4194 7918.8662 -7929.0176 7918.9307 -7929.4482 7919.3496 C
-7929.4302 7918.9893 -7928.7598 7918.3184 -7928.5654 7918.3359 c
-7929.2778 7918.2744 -7931.4951 7917.8447 -7930.8408 7922.6191 c
-7930.6577 7922.4199 l
f
-7927.5576 7923.1133 m
-7927.1538 7921.7266 -7924.9502 7921.4595 V
-7925.5342 7921.2871 -7926.2314 7921.3662 -7926.6626 7921.7852 C
-7926.6455 7921.4258 -7925.8408 7920.7178 -7925.6479 7920.7568 c
-7927.3921 7920.4141 -7927.6782 7922.9072 y
-7927.5576 7923.1133 l
f
-7924.1152 7924.3213 m
-7923.8408 7923.6274 -7923.0942 7923.1201 -7922.2646 7923 C
-7922.6475 7922.8975 -7923.0854 7922.9873 -7923.4297 7923.3242 C
-7923.4175 7923.0352 -7922.7744 7922.4863 -7922.6182 7922.5024 c
-7924.2729 7922.3496 -7924.1152 7924.3213 Y
f
-7933.5562 7922.4629 m
-7933.6504 7919.1309 -7932.4175 7917.4541 -7930.9761 7916.6514 C
-7931.5264 7916.7148 -7932.1162 7916.8267 -7932.5103 7917.2793 C
-7932.5249 7916.9185 -7931.9087 7916.1953 -7931.7134 7916.1973 c
-7932.4287 7916.1943 -7935.0034 7916.0898 -7933.7866 7922.7109 c
-7933.5562 7922.4629 l
f
-7948.7944 7943.0137 m
-7947.3882 7947.7754 -7945.1006 7949.0762 -7943.4575 7949.0518 C
-7946.5635 7949.4893 -7944.1567 7951.3701 -7943.0195 7951.8945 C
-7946.6074 7950.9766 -7943.4795 7953.5791 -7943.1729 7953.7549 C
-7946.6162 7952.7676 -7949.0825 7945.6309 -7948.7944 7943.0137 C
f
-7949.8022 7937.0488 m
-7955.8481 7933.7002 -7957.4521 7936.6025 -7957.6465 7937.2915 c
-7957.5938 7937.1025 -7956.7295 7936.7119 -7956.3857 7936.8242 C
-7956.9297 7937.0781 -7957.2017 7937.6152 -7957.4126 7938.1274 C
-7956.4126 7936.8633 -7953.6113 7936.3345 -7950.0703 7937.1182 c
-7949.8022 7937.0488 l
f
-7949.4966 7934.8037 m
-7951.9214 7932.4229 -7952.7446 7930.9805 -7955.3535 7932.9229 c
-7955.1968 7932.8066 -7954.3057 7932.6426 -7954.0112 7932.8496 C
-7954.6064 7932.9307 -7955.0239 7933.3633 -7955.3774 7933.79 C
-7951.9487 7932.0879 -7949.4966 7934.8037 y
f
-7950.6025 7942.3682 m
-7952.4614 7942.0361 -7953.5537 7943.5342 -7954.1729 7945.1602 C
-7954.1558 7944.6074 -7954.0918 7944.0098 -7953.6719 7943.5791 C
-7954.0327 7943.5957 -7954.7041 7944.2656 -7954.6865 7944.4609 c
-7954.7485 7943.75 -7955.1777 7941.5313 -7950.4038 7942.1846 c
-7950.6025 7942.3682 l
f
-7949.9087 7945.4688 m
-7951.2959 7945.8735 -7951.5649 7948.0762 V
-7951.7354 7947.4922 -7951.6558 7946.7949 -7951.2368 7946.3633 C
-7951.5967 7946.3809 -7952.3042 7947.1865 -7952.2666 7947.3789 c
-7952.6079 7945.6348 -7950.1152 7945.3477 y
-7949.9087 7945.4688 l
f
-7948.7007 7948.9111 m
-7949.3955 7949.1846 -7949.9009 7949.9307 -7950.0234 7950.7617 C
-7950.1265 7950.3789 -7950.0337 7949.9404 -7949.6982 7949.5967 C
-7949.9873 7949.6104 -7950.5361 7950.2524 -7950.5215 7950.4082 c
-7950.6729 7948.7529 -7948.7007 7948.9111 Y
f
-7950.5591 7939.4697 m
-7953.8921 7939.3774 -7955.5679 7940.6094 -7956.3696 7942.0508 C
-7956.3081 7941.5024 -7956.1953 7940.9102 -7955.7422 7940.5142 C
-7956.1035 7940.5029 -7956.8262 7941.1162 -7956.8257 7941.3135 c
-7956.8286 7940.5967 -7956.9321 7938.0234 -7950.3115 7939.2402 c
-7950.5591 7939.4697 l
f
u
u
-7960.0234 7915.7095 m
-7960.2856 7915.1953 -7960.0479 7914.6685 -7958.2905 7914.6504 C
-7959.0322 7913.9082 L
-7960.9927 7913.9941 -7961.3423 7915.1777 -7961.1665 7915.7578 c
-7960.9736 7916.3906 -7960.5488 7916.9023 -7960.2085 7917.25 C
-7961.2031 7917.6113 -7961.2505 7918.3916 -7961.0479 7918.79 c
-7960.7729 7919.3345 -7960.2998 7919.7524 -7959.9487 7920.0176 C
-7960.9448 7920.3774 -7960.8623 7921.1133 -7960.6074 7921.4575 c
-7960.2856 7921.8906 -7959.8174 7922.2031 -7959.4751 7922.4023 C
-7960.4585 7922.8301 -7960.3022 7923.5234 -7960.0239 7923.8154 c
-7959.6929 7924.1665 -7959.2466 7924.3916 -7958.9199 7924.5322 C
-7959.7695 7925.0225 -7959.5537 7925.6318 -7959.2715 7925.8633 c
-7958.9458 7926.1318 -7958.5342 7926.2842 -7958.23 7926.3774 C
-7958.9395 7926.9082 -7958.6802 7927.4297 -7958.4014 7927.6074 c
-7958.0698 7927.8174 -7957.6714 7927.9082 -7957.3857 7927.9541 C
-7957.9673 7928.5098 -7957.6768 7928.9482 -7957.4097 7929.0762 c
-7956.9326 7929.3037 -7956.3511 7929.2764 -7956.1768 7929.2813 c
-7955.6343 7929.2959 -7954.8838 7929.1255 -7954.4272 7929.0703 c
-7953.3442 7928.9434 -7949.5718 7928.2754 -7947.9023 7928.4385 C
-7948.1704 7928.2285 -7948.1714 7928.2285 v
-7950.1304 7928.0415 -7953.0479 7928.4678 -7954.1294 7928.5957 c
-7954.9839 7928.6953 -7956.1182 7928.9951 -7956.9951 7928.7295 c
-7957.2593 7928.6494 -7957.3696 7928.4453 -7956.8906 7928.0215 C
-7956.3135 7928.0732 -7955.5737 7928.0024 -7955.1118 7928.0039 c
-7953.9009 7928.0098 -7949.6504 7927.7832 -7947.8311 7928.1895 C
-7948.0986 7927.9209 -7948.0986 7927.9199 v
-7950.2344 7927.4492 -7953.5098 7927.5254 -7954.7202 7927.5186 c
-7955.6758 7927.5137 -7956.9673 7927.6914 -7957.8984 7927.2783 c
-7958.1777 7927.1563 -7958.2729 7926.9185 -7957.6953 7926.5166 C
-7957.0615 7926.6602 -7956.2153 7926.6816 -7955.6968 7926.7471 c
-7954.3623 7926.9185 -7949.6431 7927.2441 -7947.6929 7927.9375 C
-7947.9502 7927.606 -7947.9512 7927.606 v
-7950.2422 7926.7969 -7953.8647 7926.4375 -7955.1992 7926.2656 c
-7956.2529 7926.1309 -7957.7007 7926.1504 -7958.6719 7925.5703 c
-7958.9624 7925.3975 -7959.0352 7925.1235 -7958.3481 7924.7578 C
-7957.6704 7924.9985 -7956.7578 7925.1328 -7956.2026 7925.2754 c
-7954.7534 7925.6445 -7949.5938 7926.6426 -7947.5361 7927.6685 C
-7947.7754 7927.2695 -7947.7759 7927.2695 v
-7950.1934 7926.0664 -7954.1392 7925.1797 -7955.5879 7924.8101 c
-7956.7314 7924.5186 -7958.3311 7924.3457 -7959.3242 7923.5723 c
-7959.6182 7923.3457 -7959.6626 7923.0352 -7958.8745 7922.7305 C
-7958.1606 7923.0825 -7957.1802 7923.3535 -7956.5889 7923.5845 c
-7955.0415 7924.1865 -7949.4863 7925.9863 -7947.3564 7927.3984 C
-7947.5654 7926.9258 -7947.5674 7926.9248 v
-7950.0698 7925.2695 -7954.3018 7923.7578 -7955.8486 7923.1543 c
-7957.0703 7922.6777 -7958.8115 7922.2695 -7959.8018 7921.2842 c
-7960.0786 7921.0098 -7960.1006 7920.6846 -7959.3384 7920.4551 C
-7958.5942 7920.9404 -7957.5234 7921.3584 -7956.8926 7921.6895 c
-7955.2446 7922.5518 -7949.2441 7925.2246 -7947.1055 7927.0957 C
-7947.2407 7926.5186 -7947.2417 7926.5186 v
-7949.7559 7924.3281 -7954.2954 7922.1274 -7955.9438 7921.2617 c
-7957.2456 7920.5801 -7959.1602 7919.9248 -7960.0815 7918.6709 c
-7960.3135 7918.3555 -7960.2974 7918.0127 -7959.6118 7917.8101 C
-7958.8594 7918.4668 -7957.6641 7919.0762 -7956.9888 7919.5322 c
-7955.27 7920.6953 -7948.9126 7924.3774 -7946.8442 7926.7637 C
-7947.1377 7925.9902 -7947.1382 7925.9893 v
-7949.5718 7923.1934 -7954.0825 7920.2842 -7955.8018 7919.1221 c
-7957.1582 7918.2031 -7959.2295 7917.2607 -7960.0234 7915.7095 c
f
U
u
-7957.2329 7912.9185 m
-7957.7446 7912.6543 -7958.2715 7912.8926 -7958.2905 7914.6504 C
-7959.0313 7913.9082 L
-7958.9473 7911.9473 -7957.7622 7911.5977 -7957.1826 7911.7754 c
-7956.5503 7911.9658 -7956.0386 7912.3916 -7955.6919 7912.7324 C
-7955.3306 7911.7373 -7954.5498 7911.6904 -7954.1504 7911.8906 c
-7953.6064 7912.1685 -7953.1895 7912.6406 -7952.9224 7912.9922 C
-7952.5649 7911.9951 -7951.8281 7912.0781 -7951.4834 7912.3345 c
-7951.0498 7912.6543 -7950.7368 7913.1235 -7950.5376 7913.4648 C
-7950.1113 7912.4824 -7949.4175 7912.6387 -7949.1255 7912.9185 c
-7948.7759 7913.2485 -7948.5488 7913.6943 -7948.4082 7914.0215 C
-7947.9185 7913.1719 -7947.3086 7913.3877 -7947.0767 7913.6685 c
-7946.8086 7913.9951 -7946.6553 7914.4053 -7946.5649 7914.7109 C
-7946.0327 7914.0024 -7945.5103 7914.2607 -7945.3345 7914.5391 c
-7945.1235 7914.8701 -7945.0322 7915.2695 -7944.9858 7915.5537 C
-7944.4312 7914.9727 -7943.9912 7915.2637 -7943.8638 7915.5313 c
-7943.6367 7916.0078 -7943.6655 7916.5898 -7943.6592 7916.7637 c
-7943.6431 7917.3066 -7943.8159 7918.0566 -7943.8696 7918.5137 c
-7943.9966 7919.5957 -7944.6655 7923.3682 -7944.5034 7925.0381 C
-7944.7129 7924.7695 l
-7944.8999 7922.8101 -7944.4727 7919.8926 -7944.3457 7918.8101 c
-7944.2446 7917.9575 -7943.9458 7916.8223 -7944.2114 7915.9453 c
-7944.2915 7915.6816 -7944.4946 7915.5703 -7944.9199 7916.0508 C
-7944.8682 7916.6279 -7944.9395 7917.3662 -7944.9375 7917.8281 c
-7944.9302 7919.04 -7945.1567 7923.29 -7944.7524 7925.1094 C
-7945.0195 7924.8428 -7945.0195 7924.8418 v
-7945.4922 7922.7061 -7945.4155 7919.4316 -7945.4214 7918.2207 c
-7945.4272 7917.2642 -7945.25 7915.9736 -7945.6616 7915.0435 c
-7945.7847 7914.7637 -7946.0234 7914.6685 -7946.4238 7915.2461 C
-7946.2798 7915.8789 -7946.2593 7916.7246 -7946.1929 7917.2441 c
-7946.0225 7918.5781 -7945.6958 7923.2959 -7945.0034 7925.2485 C
-7945.3345 7924.9902 -7945.3354 7924.9893 v
-7946.1455 7922.6982 -7946.5039 7919.0762 -7946.6753 7917.7402 c
-7946.8096 7916.6885 -7946.79 7915.2402 -7947.3706 7914.2695 c
-7947.5435 7913.9785 -7947.8174 7913.9053 -7948.1816 7914.5938 C
-7947.9434 7915.2695 -7947.8081 7916.1836 -7947.6665 7916.7383 c
-7947.2969 7918.1865 -7946.2993 7923.3477 -7945.27 7925.4053 C
-7945.6704 7925.1665 -7945.6714 7925.1665 v
-7946.8745 7922.7471 -7947.7607 7918.8008 -7948.1294 7917.3535 c
-7948.4214 7916.2095 -7948.5962 7914.6094 -7949.3662 7913.6172 c
-7949.5962 7913.3232 -7949.9058 7913.2783 -7950.2114 7914.0664 C
-7949.8594 7914.7793 -7949.5874 7915.7617 -7949.3574 7916.3516 c
-7948.7534 7917.8984 -7946.9546 7923.4541 -7945.5415 7925.5854 C
-7946.0161 7925.3755 l
-7947.6704 7922.8711 -7949.1826 7918.6387 -7949.7866 7917.0918 c
-7950.2622 7915.8701 -7950.6714 7914.1289 -7951.6558 7913.1387 c
-7951.9312 7912.8623 -7952.2559 7912.8398 -7952.4858 7913.6016 C
-7952.0015 7914.3457 -7951.5825 7915.4185 -7951.2529 7916.0469 c
-7950.3887 7917.6953 -7947.7158 7923.6973 -7945.8447 7925.8359 C
-7946.4209 7925.6992 -7946.4214 7925.6992 v
-7948.6128 7923.1846 -7950.8145 7918.6455 -7951.6782 7916.9961 c
-7952.3599 7915.6943 -7953.0161 7913.7793 -7954.2695 7912.8594 c
-7954.5854 7912.6274 -7954.9272 7912.6426 -7955.1313 7913.3281 C
-7954.4736 7914.0825 -7953.8638 7915.2764 -7953.4072 7915.9512 c
-7952.2441 7917.6709 -7948.5635 7924.0273 -7946.1768 7926.0967 C
-7946.9502 7925.8037 -7946.9512 7925.8018 v
-7949.7471 7923.3682 -7952.6558 7918.8584 -7953.8184 7917.1387 c
-7954.7368 7915.7822 -7955.6802 7913.7119 -7957.2329 7912.9185 c
f
U
U
*u
1 D
-7907.0264 7917.0566 m
-7913.5264 7917.0566 L
-7913.1826 7917.4185 -7912.7622 7917.7578 -7912.1777 7918.0332 c
-7912.1978 7918.0234 -7911.3994 7918.1563 -7911.2622 7918.3325 c
-7911.0967 7918.5415 -7912.7886 7918.5825 -7913.6929 7917.5342 C
-7914.3486 7920.7095 L
-7914.8135 7921.0273 L
-7914.0918 7917.0977 L
-7914.5249 7916.5703 -7914.8594 7916.0024 -7915.3687 7915.5186 C
-7916.0337 7921.6289 L
-7916.29 7921.7754 L
-7915.8286 7915.1475 L
-7916.1104 7914.9575 -7916.4424 7914.7915 -7916.8486 7914.6621 C
-7917.7119 7922.0225 L
-7917.9482 7922.0078 L
-7917.3369 7914.5322 L
-7917.6729 7914.4609 -7918.0518 7914.4111 -7918.4834 7914.3857 C
-7919.0303 7921.9541 L
-7919.1992 7921.9517 L
-7918.9814 7914.3711 L
-7919.4814 7914.3774 -7919.9175 7914.4473 -7920.3042 7914.5674 C
-7920.4155 7921.7061 L
-7920.6338 7921.6685 L
-7920.7935 7914.7549 L
-7921.2998 7914.9863 -7921.7266 7915.3018 -7922.1279 7915.6455 C
-7922.0454 7921.2412 L
-7922.3774 7921.0273 L
-7922.5752 7916.0435 L
-7922.9434 7916.3774 -7923.3096 7916.7168 -7923.7178 7917.0127 C
-7923.7217 7920.3389 L
-7924.1455 7920.0645 L
-7924.1553 7917.2988 L
-7924.6191 7917.5693 -7925.5854 7918.0098 -7926.4014 7917.8672 C
-7925.1714 7917.5435 -7924.7925 7917.3301 -7924.5034 7917.0566 C
-7927.7295 7917.0566 L
-7923.8955 7921.4512 -7917.3394 7925.6865 -7912.3018 7919.0225 C
-7912.1807 7918.8838 -7911.8174 7918.5625 -7911.1255 7918.6475 C
-7907.0264 7918.6475 L
-7907.0264 7919.3672 L
-7910.4834 7919.3672 L
-7910.1318 7919.6777 -7909.8223 7920.4863 -7910.0386 7920.8574 C
-7907.0264 7920.8574 L
-7907.0264 7921.9385 L
-7910.1689 7921.9385 L
-7910.2935 7922.4492 -7910.5439 7922.8857 -7910.8218 7923.3311 C
-7907.0264 7923.3311 L
-7907.0264 7924.9873 L
-7911.7354 7924.9873 L
-7911.9424 7925.4453 -7912.1016 7925.9082 -7912.1768 7926.4121 C
-7907.0264 7926.4121 L
-7907.0264 7927.4922 L
-7912.1714 7927.4922 L
-7912.1074 7927.9834 -7911.9614 7928.4668 -7911.7378 7928.9111 C
-7907.0264 7928.9111 L
-7907.0264 7929.6309 L
-7911.2744 7929.6309 L
-7910.9375 7930.0039 -7909.8535 7930.5938 -7909.9375 7931.0225 C
-7907.0239 7931.0225 L
-7907.0239 7931.4824 L
-7907.3721 7931.4824 L
-7907.3721 7932.6826 L
-7907.0239 7932.6826 L
-7907.0239 7933.1426 L
-7914.9736 7933.1426 L
-7915.4082 7933.4375 -7916.2192 7933.4517 -7916.9897 7933.1426 C
-7920.8564 7933.1426 L
-7921.1162 7933.4609 -7922.1807 7933.5693 -7922.6846 7933.1426 C
-7923.8232 7933.1426 L
-7924.0439 7933.3994 -7924.3174 7933.6387 -7924.6782 7933.8975 C
-7907.0264 7933.8975 L
-7907.0264 7934.3809 L
-7925.8394 7934.3809 L
-7926.1982 7934.5615 -7927.2417 7934.8389 -7928.3774 7934.3809 C
-7938.6406 7934.3809 L
-7938.6406 7944.6494 L
-7938.1826 7945.7861 -7938.4614 7946.8281 -7938.6455 7947.1895 C
-7938.6455 7966 L
-7939.1279 7966 L
-7939.1279 7948.3477 L
-7939.3838 7948.7095 -7939.6235 7948.9824 -7939.8794 7949.2031 C
-7939.8794 7950.3418 L
-7939.4536 7950.8457 -7939.5615 7951.9082 -7939.8794 7952.1685 C
-7939.8794 7956.0361 L
-7939.5698 7956.8076 -7939.5854 7957.6182 -7939.8833 7958.0518 C
-7939.8833 7965.9985 L
-7940.3394 7965.9985 L
-7940.3394 7965.6543 L
-7941.5435 7965.6543 L
-7941.5435 7965.9985 L
-7942.0039 7965.9985 L
-7942.0039 7963.0879 L
-7942.4287 7963.1738 -7943.0186 7962.0894 -7943.3955 7961.7524 C
-7943.3955 7965.9951 L
-7944.1113 7965.9951 L
-7944.1113 7961.2891 L
-7944.5552 7961.0654 -7945.0376 7960.9185 -7945.5298 7960.8555 C
-7945.5298 7965.9951 L
-7946.6138 7965.9951 L
-7946.6138 7960.8496 L
-7947.1143 7960.9248 -7947.5767 7961.0854 -7948.0391 7961.29 C
-7948.0391 7965.9951 L
-7949.6958 7965.9951 L
-7949.6958 7962.2041 L
-7950.1362 7962.4824 -7950.5728 7962.7324 -7951.0854 7962.8555 C
-7951.0854 7965.9951 L
-7952.1689 7965.9951 L
-7952.1689 7962.9893 L
-7952.5552 7963.1289 -7953.3486 7962.8945 -7953.6543 7962.5435 C
-7953.6543 7965.9951 L
-7954.3794 7965.9951 L
-7954.3794 7961.9014 L
-7954.4634 7961.2095 -7954.1382 7960.8457 -7954.0015 7960.7227 C
-7947.3359 7955.6885 -7951.5713 7949.1309 -7955.9658 7945.2959 C
-7955.9658 7948.5244 L
-7955.6919 7948.2344 -7955.48 7947.8555 -7955.1558 7946.6255 C
-7955.0127 7947.4414 -7955.4526 7948.4082 -7955.7246 7948.8711 C
-7952.9575 7948.8828 L
-7952.6831 7949.3047 L
-7956.0103 7949.3066 L
-7956.3066 7949.7168 -7956.6455 7950.0845 -7956.98 7950.4512 C
-7951.9951 7950.6475 L
-7951.7817 7950.981 L
-7957.3774 7950.8984 L
-7957.7202 7951.2998 -7958.0361 7951.7266 -7958.2681 7952.231 C
-7951.3535 7952.3926 L
-7951.3169 7952.6113 L
-7958.4546 7952.7227 L
-7958.5742 7953.1094 -7958.6465 7953.5435 -7958.6514 7954.0449 C
-7951.0688 7953.8262 L
-7951.0688 7953.9951 L
-7958.6362 7954.5435 L
-7958.6113 7954.9746 -7958.5615 7955.3545 -7958.4888 7955.6895 C
-7951.0142 7955.0781 L
-7950.9995 7955.3145 L
-7958.3599 7956.1777 L
-7958.2314 7956.5854 -7958.0654 7956.9165 -7957.8755 7957.1973 C
-7951.2485 7956.7354 L
-7951.3945 7956.9932 L
-7957.5034 7957.6572 L
-7957.0215 7958.1685 -7956.4521 7958.5024 -7955.9238 7958.9336 C
-7951.9946 7958.2139 L
-7952.3135 7958.6768 L
-7955.4878 7959.3345 L
-7954.4409 7960.2373 -7954.4814 7961.9297 -7954.6914 7961.7637 c
-7954.8657 7961.6274 -7954.9985 7960.8281 -7954.9897 7960.8486 c
-7955.2656 7960.2637 -7955.6035 7959.8438 -7955.9697 7959.5024 C
-7955.9697 7966 L
-7956.4536 7966 L
-7956.4536 7959.0854 L
-7957.6582 7958.1377 -7958.9551 7957.5674 -7959.1167 7954.4111 c
-7959.25 7951.8311 -7957.5562 7950.7656 -7956.4497 7949.2871 C
-7956.4497 7944.7441 L
-7957.5767 7943.4185 -7958.5225 7941.9912 -7958.9614 7940.1455 C
-7959.8809 7935.3662 -7956.7568 7929.8545 -7951.7959 7929.4863 C
-7951.7183 7929.6133 L
-7956.1494 7930.5352 -7958.8442 7935.6641 -7957.9814 7940.1455 C
-7957.0635 7944.0029 -7953.9395 7946.0234 -7951.5503 7949.1475 C
-7949.8975 7951.5361 -7949.3457 7954.1094 -7950.0806 7956.8652 c
-7950.8545 7959.6133 -7953.25 7960.5977 -7953.5649 7961.5303 c
-7953.8506 7962.3755 -7952.6689 7962.7002 -7951.6968 7962.6348 C
-7949.5454 7962.4395 -7948.1602 7959.4922 -7944.3184 7960.7559 c
-7943.2222 7961.1162 -7942.5913 7961.9375 -7942.3042 7962.5469 c
-7942.1104 7962.9575 -7940.7241 7962.4395 -7941.9165 7960.2207 C
-7944.8774 7960.0879 -7944.4521 7958.0645 -7944.2026 7958.2109 c
-7942.5015 7959.2095 -7941.1826 7957.3047 -7942.1055 7956.2959 c
-7944.2129 7953.9902 -7945.8481 7954.2861 -7947.9248 7950.3174 c
-7950.2095 7945.9517 -7951.2695 7940.0723 -7948.7959 7935.9082 C
-7948.7954 7935.1387 L
-7949.0479 7934.5435 -7949.0249 7934.0854 -7949.2134 7933.1685 c
-7949.3818 7932.3535 -7949.6689 7932.0854 -7949.9575 7931.9121 C
-7950.1304 7931.7969 -7950.5015 7931.9053 -7950.5054 7932.1445 c
-7950.52 7932.7461 -7949.7842 7932.5225 -7949.8271 7932.5845 c
-7950.1895 7933.0869 -7950.7329 7932.7295 -7950.8345 7932.3774 c
-7950.9648 7931.9287 -7950.6606 7931.5762 -7950.3145 7931.4902 C
-7949.6655 7931.3594 -7949.1968 7931.9277 -7948.9575 7932.4575 c
-7948.4365 7933.6074 -7948.4746 7935.2524 -7947.2607 7935.8574 c
-7946.4385 7936.2471 -7945.5537 7935.9277 -7944.7271 7935.6328 c
-7941.8296 7934.6016 -7938.3096 7931.0825 -7937.2783 7928.1836 c
-7936.9834 7927.3574 -7936.6641 7926.4727 -7937.0537 7925.6494 c
-7937.6606 7924.4375 -7939.3042 7924.4746 -7940.4546 7923.9541 c
-7940.9834 7923.7148 -7941.5513 7923.2461 -7941.4214 7922.5967 C
-7941.3345 7922.25 -7940.9824 7921.9473 -7940.5327 7922.0762 c
-7940.1826 7922.1797 -7939.8242 7922.7227 -7940.3281 7923.0845 c
-7940.3882 7923.1274 -7940.1655 7922.3906 -7940.7681 7922.4053 c
-7941.0054 7922.4111 -7941.1143 7922.7813 -7940.9995 7922.9541 C
-7940.8257 7923.2422 -7940.5591 7923.5293 -7939.7422 7923.6973 c
-7938.7085 7923.9102 -7938.2578 7923.8535 -7937.5386 7924.2266 C
-7937.1167 7924.2266 L
-7932.9546 7921.7529 -7927.0674 7922.8008 -7922.7095 7925.0977 c
-7922.0527 7925.4551 -7921.4834 7925.8008 -7920.9126 7926.1475 c
-7919.5488 7926.9766 -7917.5542 7929.8857 Y
-7917.1782 7930.3325 -7916.9521 7930.7979 -7916.5225 7931.0625 c
-7915.3569 7931.7783 -7913.8184 7930.5215 -7914.8154 7928.8193 c
-7914.9614 7928.5703 -7912.9385 7928.1455 -7912.8057 7931.106 C
-7910.5874 7932.2988 -7910.0698 7930.9121 -7910.4795 7930.7178 c
-7911.0889 7930.4316 -7911.9087 7929.7998 -7912.2705 7928.7041 c
-7913.5342 7924.8623 -7910.3599 7923.0234 -7910.4463 7921.3262 C
-7910.3008 7920.5322 -7910.6514 7919.1719 -7911.4961 7919.4595 c
-7912.4282 7919.7725 -7913.4126 7922.1685 -7916.1606 7922.9414 c
-7918.9175 7923.6768 -7921.4897 7923.1255 -7923.8774 7921.4717 C
-7927.0034 7919.0845 -7929.0234 7915.9595 -7932.8818 7915.0415 C
-7937.3623 7914.1777 -7942.4902 7916.8735 -7943.4126 7921.3037 C
-7943.5391 7921.2266 L
-7943.1729 7916.2656 -7937.6592 7913.1426 -7932.8818 7914.0615 C
-7931.0361 7914.5024 -7929.6104 7915.4453 -7928.2822 7916.5723 C
-7923.7393 7916.5723 L
-7922.2607 7915.4668 -7921.1943 7913.7725 -7918.6143 7913.9053 c
-7915.4585 7914.0664 -7914.8882 7915.3633 -7913.9409 7916.5723 C
-7907.0264 7916.5723 L
-7907.0264 7917.0566 L
f
0 D
-7936.1362 7926.4121 m
-7928.5166 7926.4121 L
-7929.5635 7925.8301 -7930.5435 7925.3184 -7931.8057 7924.9873 C
-7936.6079 7924.9873 L
-7936.2998 7925.3809 -7936.1055 7925.8701 -7936.1362 7926.4121 C
f
-7937.0591 7928.9111 m
-7925.5254 7928.9111 L
-7925.6338 7928.6201 -7926.0063 7927.9404 -7926.8042 7927.4922 C
-7936.4321 7927.4922 L
-7936.6118 7927.9727 -7936.8232 7928.4463 -7937.0591 7928.9111 C
f
-7925.8096 7931.0225 m
-7925.3174 7930.4395 -7925.2568 7930.2207 -7925.3857 7929.6309 C
-7937.4521 7929.6309 L
-7937.7295 7930.1074 -7938.0322 7930.5723 -7938.3599 7931.0225 C
-7930.2568 7931.0225 L
-7929.9111 7930.2041 -7929.1665 7930.3711 -7928.8218 7931.0225 C
-7925.8096 7931.0225 L
f
-7927.1201 7931.4824 m
-7927.1201 7931.8242 L
-7926.5664 7931.7861 -7926.4995 7931.7524 -7926.1982 7931.4824 C
-7927.1201 7931.4824 L
f
-7928.4863 7931.4824 m
-7928.3311 7931.6719 -7928.0264 7931.8154 -7927.8257 7931.8457 C
-7927.8257 7931.4824 L
-7928.4863 7931.4824 L
f
-7931.3535 7931.4824 m
-7931.3535 7932.6826 L
-7930.6465 7932.6826 L
-7930.6465 7931.4824 L
-7931.3535 7931.4824 L
f
-7932.7622 7931.4824 m
-7932.7622 7932.6826 L
-7932.0576 7932.6826 L
-7932.0576 7931.4824 L
-7932.7622 7931.4824 L
f
-7934.1729 7931.4824 m
-7934.1729 7932.6826 L
-7933.4678 7932.6826 L
-7933.4678 7931.4824 L
-7934.1729 7931.4824 L
f
-7935.5835 7931.4824 m
-7935.5835 7932.6826 L
-7934.8774 7932.6826 L
-7934.8774 7931.4824 L
-7935.5835 7931.4824 L
f
-7936.9946 7931.4824 m
-7936.9946 7932.6826 L
-7936.2886 7932.6826 L
-7936.2886 7931.4824 L
-7936.9946 7931.4824 L
f
-7942 7942.7695 m
-7942 7934.6504 L
-7942.4497 7934.9756 -7942.9146 7935.2754 -7943.3911 7935.5449 C
-7943.3911 7947.6406 L
-7942.8018 7947.7695 -7942.5825 7947.7095 -7942 7947.2158 C
-7942 7944.2041 L
-7942.6514 7943.8613 -7942.8169 7943.1152 -7942 7942.7695 C
f
-7941.5391 7942.3799 m
-7940.3394 7942.3799 L
-7940.3394 7941.6748 L
-7941.5391 7941.6748 L
-7941.5391 7942.3799 L
f
-7940.3394 7940.9688 m
-7940.3394 7940.2637 L
-7941.5391 7940.2637 L
-7941.5391 7940.9688 L
-7940.3394 7940.9688 L
f
-7940.3394 7939.5586 m
-7940.3394 7938.8535 L
-7941.5391 7938.8535 L
-7941.5391 7939.5586 L
-7940.3394 7939.5586 L
f
-7940.3394 7938.1484 m
-7940.3394 7937.4434 L
-7941.5391 7937.4434 L
-7941.5391 7938.1484 L
-7940.3394 7938.1484 L
f
-7940.3394 7936.7373 m
-7940.3394 7936.0313 L
-7941.5391 7936.0313 L
-7941.5391 7936.7373 L
-7940.3394 7936.7373 L
f
-7940.3394 7935.3262 m
-7940.3394 7934.6201 L
-7941.5391 7934.6201 L
-7941.5391 7935.3262 L
-7940.3394 7935.3262 L
f
-7940.3394 7933.9185 m
-7940.3394 7933.2725 L
-7940.5728 7933.4941 -7940.8135 7933.7095 -7941.0591 7933.9185 C
-7940.3394 7933.9185 L
f
-7938.4058 7932.6826 m
-7937.6992 7932.6826 L
-7937.6992 7931.4824 L
-7938.4058 7931.4824 L
-7938.4058 7932.6826 L
f
-7939.7495 7932.6826 m
-7939.1094 7932.6826 L
-7939.1094 7931.9746 L
-7939.3159 7932.2158 -7939.5288 7932.4517 -7939.7495 7932.6826 C
f
-7945.5298 7936.5269 m
-7945.5298 7946.2227 L
-7945.0815 7947.0186 -7944.4014 7947.3926 -7944.1113 7947.5024 C
-7944.1113 7935.9258 L
-7944.5762 7936.1563 -7945.0488 7936.356 -7945.5298 7936.5269 C
f
-7948.0352 7936.2095 m
-7948.0352 7941.2207 L
-7947.7041 7942.4844 -7947.1929 7943.4629 -7946.6094 7944.5098 C
-7946.6094 7936.7725 L
-7947.1606 7936.7705 -7947.6494 7936.5435 -7948.0352 7936.2095 C
f
-7940.3394 7964.2441 m
-7941.5391 7964.2441 L
-7941.5391 7964.9482 L
-7940.3394 7964.9482 L
-7940.3394 7964.2441 L
f
-7940.3394 7962.8345 m
-7941.3896 7962.8345 L
-7941.4375 7962.8838 -7941.4878 7962.9297 -7941.5391 7962.9678 C
-7941.5391 7963.5381 L
-7940.3394 7963.5381 L
-7940.3394 7962.8345 L
f
-7940.3394 7961.4209 m
-7941.0039 7961.4209 L
-7940.9702 7961.6475 -7940.9595 7961.9121 -7941.0137 7962.1279 C
-7940.3394 7962.1279 L
-7940.3394 7961.4209 L
f
-7940.3394 7960.0117 m
-7941.5015 7960.0117 L
-7941.3872 7960.2461 -7941.2798 7960.481 -7941.1919 7960.7168 C
-7940.3394 7960.7168 L
-7940.3394 7960.0117 L
f
-7940.3394 7958.9033 m
-7940.4614 7959.0625 -7940.5938 7959.2197 -7940.6753 7959.3066 C
-7940.3394 7959.3066 L
-7940.3394 7958.9033 L
f
-7940.4399 7943.4395 m
-7940.6968 7943.2891 -7942.0845 7942.8135 -7942.0737 7943.5381 c
-7942.0674 7943.9502 -7941.4512 7944.2412 -7941.2495 7944.4473 c
-7940.6338 7945.0703 -7940.1885 7946.5254 -7941.2974 7947.4238 c
-7943.6328 7949.3145 -7945.1865 7947.5879 Y
-7949.1118 7943.7324 -7949.1104 7938.1113 Y
-7950.2295 7942.3345 -7948.9663 7947.3936 -7947.4048 7950.1426 c
-7944.8818 7954.5845 -7943.9575 7953.0566 -7941.6113 7955.9482 c
-7940.8047 7956.9434 -7941.1294 7959.3818 -7943.9546 7958.75 c
-7944.2026 7958.6934 -7943.7759 7959.2949 -7943.2681 7959.5498 c
-7941.1104 7960.6406 -7939.8618 7958.1631 -7940.1338 7956.8594 c
-7940.4761 7955.2109 -7941.0986 7954.3662 -7943.1616 7953.2246 C
-7942.8311 7953.2373 -7941.2134 7953.5415 -7940.2295 7952.0088 c
-7940.0195 7951.6826 -7939.8745 7950.7578 -7940.3042 7950.8774 c
-7940.3906 7950.9019 -7940.6416 7951.1973 -7940.9414 7951.3613 c
-7942.9321 7952.3945 -7943.7075 7950.0137 Y
-7941.4165 7949.8418 -7940.7515 7949.7637 -7939.2559 7947.7637 c
-7939.0542 7947.4941 -7938.1162 7944.8047 -7940.4399 7943.4395 c
f
-7941.5391 7950.1367 m
-7941.5391 7951.0225 L
-7941.2993 7950.9985 -7940.9302 7950.9575 -7940.3394 7950.4033 C
-7940.3394 7950.1367 L
-7941.5391 7950.1367 L
f
-7942.9946 7950.2305 m
-7942.8042 7950.7031 -7942.4185 7950.9473 -7942 7951.0127 C
-7942 7950.1709 L
-7942.3857 7950.2354 -7942.9946 7950.2305 Y
f
-7940.3394 7953.6665 m
-7940.3394 7952.9595 L
-7940.6382 7952.9595 L
-7940.9136 7953.1475 -7941.2246 7953.2935 -7941.5391 7953.3818 C
-7941.5391 7953.6665 L
-7940.3394 7953.6665 L
f
-7940.9897 7954.3682 m
-7940.7935 7954.5342 -7940.5576 7954.7813 -7940.3394 7955.1084 C
-7940.3394 7954.3682 L
-7940.9897 7954.3682 L
f
-7942.2495 7953.4746 m
-7942.1914 7953.5269 -7942.1025 7953.5967 -7942 7953.6719 C
-7942 7953.4668 L
-7942.0835 7953.4746 -7942.1675 7953.4785 -7942.2495 7953.4746 C
f
-7941.5391 7945.9063 m
-7941.5391 7946.8262 L
-7941.2715 7946.5269 -7941.2358 7946.46 -7941.1982 7945.9063 C
-7941.5391 7945.9063 L
f
-7941.1758 7945.2012 m
-7941.2065 7945.0024 -7941.3506 7944.6943 -7941.5391 7944.54 C
-7941.5391 7945.2012 L
-7941.1758 7945.2012 L
f
-7929.1865 7933.8975 m
-7929.4233 7933.6943 -7929.6401 7933.4463 -7929.8271 7933.1426 C
-7939.8794 7933.1426 L
-7939.8794 7943.1992 L
-7939.5762 7943.3857 -7939.3271 7943.6025 -7939.1255 7943.8408 C
-7939.1265 7933.8975 L
-7929.1865 7933.8975 L
f
-7922.6226 7932.6826 m
-7922.0698 7932.0928 -7922.0298 7931.7227 -7922.0034 7931.4824 C
-7922.8887 7931.4824 L
-7922.8887 7932.6826 L
-7922.6226 7932.6826 L
f
-7922.8564 7931.0225 m
-7922.0127 7931.0225 L
-7922.0791 7930.6045 -7922.3232 7930.2188 -7922.7959 7930.0273 C
-7922.7915 7930.6367 -7922.8564 7931.0225 V
f
-7919.3623 7931.4824 m
-7919.6455 7931.4824 L
-7919.7334 7931.7979 -7919.8799 7932.1084 -7920.0674 7932.3838 C
-7920.0674 7932.6826 L
-7919.3623 7932.6826 L
-7919.3623 7931.4824 L
f
-7919.3545 7931.0225 m
-7919.4302 7930.9199 -7919.4995 7930.8311 -7919.5518 7930.7734 C
-7919.5479 7930.8555 -7919.5518 7930.9395 -7919.5601 7931.0225 C
-7919.3545 7931.0225 L
f
-7917.9185 7932.6826 m
-7918.2446 7932.4644 -7918.4912 7932.2305 -7918.6577 7932.0332 C
-7918.6577 7932.6826 L
-7917.9185 7932.6826 L
f
-7913.7202 7932.3477 m
-7913.8066 7932.4287 -7913.9639 7932.5615 -7914.1226 7932.6826 C
-7913.7202 7932.6826 L
-7913.7202 7932.3477 L
f
-7913.4751 7929.7549 m
-7913.7329 7929.2461 -7914.0913 7928.8945 -7914.2778 7929.0684 c
-7914.4248 7929.2041 -7913.4424 7930.9434 -7914.9009 7931.7725 c
-7915.7158 7932.2354 -7916.8721 7931.8735 -7917.2842 7931.3066 c
-7919.5615 7928.1836 -7919.4746 7927.5586 -7922.8848 7925.6172 c
-7925.6318 7924.0537 -7930.6943 7922.7935 -7934.9155 7923.9121 C
-7929.2935 7923.9102 -7925.4385 7927.8359 V
-7923.7119 7929.3906 -7925.6025 7931.7246 v
-7926.5015 7932.8345 -7927.9551 7932.3887 -7928.5791 7931.7734 c
-7928.7842 7931.5703 -7929.0752 7930.9551 -7929.4873 7930.9482 c
-7930.2134 7930.9385 -7929.7378 7932.3242 -7929.5874 7932.5825 c
-7928.2217 7934.9063 -7925.5322 7933.9678 -7925.2622 7933.7656 c
-7923.2622 7932.2705 -7923.1846 7931.606 -7923.0127 7929.3145 C
-7920.6328 7930.0898 -7921.6655 7932.0801 v
-7921.8286 7932.3809 -7922.1245 7932.6318 -7922.1489 7932.7178 c
-7922.2695 7933.1475 -7921.3423 7933.0029 -7921.0176 7932.7949 c
-7919.4858 7931.8086 -7919.7881 7930.1914 -7919.8018 7929.8613 C
-7918.6602 7931.9248 -7917.8154 7932.5469 -7916.1675 7932.8887 c
-7914.8633 7933.1602 -7912.3857 7931.9121 -7913.4751 7929.7549 c
f
-7912.3096 7931.8301 m
-7912.5454 7931.7422 -7912.7817 7931.6357 -7913.0142 7931.5215 C
-7913.0142 7932.6826 L
-7912.3096 7932.6826 L
-7912.3096 7931.8301 L
f
-7910.8994 7932.0088 m
-7911.1143 7932.0625 -7911.3794 7932.0518 -7911.6055 7932.0186 C
-7911.6055 7932.6826 L
-7910.8994 7932.6826 L
-7910.8994 7932.0088 L
f
-7908.7822 7932.6826 m
-7908.0767 7932.6826 L
-7908.0767 7931.4824 L
-7908.7822 7931.4824 L
-7908.7822 7932.6826 L
f
-7910.1934 7932.6826 m
-7909.4878 7932.6826 L
-7909.4878 7931.4824 L
-7910.0586 7931.4824 L
-7910.0967 7931.5342 -7910.1426 7931.5854 -7910.1934 7931.6328 C
-7910.1934 7932.6826 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4093.5 4093.2913 m
-3994.5696 4093.2913 L
-3994.5696 4076.927 L
-4093.5 4076.927 L
-4093.5 4093.2913 L
n
u
u
0 O
0 0 0 1 0 0 0 Xa
-3997.0071 4082.6094 m
-3996.7832 4082.5537 -3996.5879 4082.8643 -3996.6721 4083.0039 C
-3996.2161 4082.6272 -3996.2063 4083.0557 -3996.1472 4082.3262 C
-3995.8545 4081.9683 -3995.5422 4082.4639 -3995.8752 4082.7598 C
-3995.0313 4082.3135 L
-3995.5359 4082.1997 L
-3995.3984 4081.5933 -3994.7295 4082.3809 -3994.5696 4081.6743 C
-3995.4832 4081.7334 L
-3995.4375 4081.5313 L
-3995.6455 4081.7493 -3996.0496 4081.6582 -3996.1904 4081.573 C
-3996.1682 4081.4734 -3996.1824 4081.3113 -3996.0212 4081.2935 C
-3997.1243 4081.2471 -3996.3184 4082.3545 -3997.2336 4082.5557 C
-3997.1763 4082.5413 -3997.1052 4082.5493 -3997.0071 4082.6094 C
f
-3997.9441 4081.1252 m
-3998.3289 4081.8853 L
-3998.9744 4081.6895 L
-3998.9817 4081.9517 -3999.4519 4082.1641 -3999.1335 4082.3955 C
-3999.0713 4082.3545 -3998.9482 4082.2759 -3998.8489 4082.2998 C
-3998.9209 4082.8672 -3999.7073 4082.5833 -3999.5176 4083.157 C
-3999.0071 4083.0066 -3998.9287 4083.1316 -3998.6145 4082.6709 C
-3998.1465 4082.7234 -3997.8057 4082.8545 -3997.5872 4083.0613 C
-3997.4482 4082.9751 -3997.4287 4082.6272 -3997.2522 4082.5576 C
-3997.2913 4082.5664 -3997.3271 4082.5752 -3997.3721 4082.5796 C
-3997.3911 4081.7261 L
-3997.5383 4081.9063 -3997.6775 4081.8213 -3997.8408 4081.8389 C
-3997.0852 4080.8423 L
-3997.3289 4080.0435 -3998.0713 4080.5127 -3998.3679 4080.1807 C
-3998 4080.8982 -3998.6609 4080.5376 -3997.9441 4081.1252 C
f
-3997.2522 4082.5576 m
-3997.2473 4082.5576 -3997.2393 4082.5564 -3997.2336 4082.5557 C
-3997.2393 4082.5564 -3997.2473 4082.5564 -3997.2522 4082.5576 C
f
-4053.7073 4087.5225 m
-4053.8679 4087.5376 -4053.9153 4087.7393 -4053.9385 4087.8406 C
-4052.1296 4087.8247 L
-4052.1863 4087.6006 -4052.7073 4087.323 -4052.3591 4087.1895 C
-4052.5144 4086.9414 -4052.9873 4087.1531 -4053.0559 4087.4561 C
-4052.9248 4087.1143 L
-4053.3416 4087.5518 -4053.6262 4086.6919 -4053.3545 4086.4336 C
-4053.3896 4086.4385 L
-4054.5439 4088.1233 L
-4054.1201 4088.2212 -4054.2175 4087.5435 -4053.7073 4087.5225 C
f
-4090.8567 4086.6653 m
-4090.6223 4086.5869 -4090.5935 4086.5059 -4090.6201 4086.4229 C
-4090.7041 4086.4854 -4090.7839 4086.5576 -4090.8567 4086.6653 C
f
-4054.8137 4088.5181 m
-4055.1753 4089.0454 L
-4055.0305 4088.9031 -4054.9033 4088.7139 -4054.8137 4088.5181 C
f
-4052.3088 4080.4993 m
-4052.3081 4080.4712 -4052.3042 4080.4463 -4052.3137 4080.4087 C
-4052.4761 4080.678 L
-4052.4736 4080.678 -4052.4729 4080.678 -4052.4719 4080.678 C
-4052.4121 4080.6187 -4052.3584 4080.5591 -4052.3088 4080.4993 C
f
-4063.0212 4090.4993 m
-4063.0601 4090.5127 -4063.0935 4090.5181 -4063.1399 4090.5354 C
-4063.0967 4090.5313 -4063.0576 4090.5176 -4063.0212 4090.4993 C
f
-4047.4087 4077.4854 m
-4048.2129 4077.9927 L
-4048.1057 4077.7522 -4048.4937 4077.8247 -4048.3242 4077.5447 C
-4048.3855 4077.5833 -4048.6729 4077.678 -4048.5945 4077.8013 C
-4048.4304 4077.7854 L
-4048.8545 4078.4854 -4048.5977 4078.7544 -4049.3008 4079.2871 C
-4048.8643 4079.7017 -4048.6729 4079.3223 -4048.4417 4079.0039 C
-4048.3633 4078.9551 -4048.2976 4078.9336 -4048.2312 4078.907 C
-4047.5625 4077.9292 L
-4047.4087 4077.4854 L
f
-4079.6504 4082.6934 m
-4079.6416 4082.6392 L
-4079.6497 4082.6582 -4079.6511 4082.6763 -4079.6504 4082.6934 C
f
-4079.6064 4082.4153 m
-4079.6416 4082.6392 L
-4079.5984 4082.5269 -4079.4329 4082.4197 -4079.6064 4082.4153 C
f
-4054.6809 4088.0652 m
-4054.6919 4088.1953 -4054.7383 4088.3545 -4054.8137 4088.5181 C
-4054.5439 4088.1233 L
-4054.5823 4088.115 -4054.6328 4088.0879 -4054.6809 4088.0652 C
f
-4054.0671 4086.5376 m
-4053.3896 4086.4385 L
-4053.1399 4086.0752 L
-4053.3992 4086.2124 -4053.7024 4086.3062 -4054.0671 4086.5376 C
f
-4061.9512 4090.9102 m
-4063.3545 4091.0176 -4061.6064 4090.0869 -4062.2512 4089.8887 C
-4062.6409 4089.9854 -4062.7783 4090.3765 -4063.0212 4090.4993 C
-4061.9082 4090.1653 -4063.1721 4091.7854 -4062.0496 4091.5791 C
-4062.2092 4092.2854 -4062.8591 4092.3496 -4063.24 4092.1582 C
-4063.6711 4091.4771 -4062.8633 4091.6592 -4062.7656 4090.9912 C
-4063.2161 4091.1021 -4063.1367 4091.2261 -4063.3279 4091.6062 C
-4064.0352 4091.4478 -4064.7913 4092.4429 -4065.2136 4091.4993 C
-4065.7256 4091.6494 -4065.6919 4091.9751 -4065.9863 4092.3342 C
-4066.0449 4093.0632 -4065.2249 4092.7168 -4065.0352 4093.2913 C
-4065.0745 4093.2295 -4065.1511 4093.1062 -4065.1289 4093.0039 C
-4064.6863 4093.157 L
-4065.1064 4092.9031 -4064.6279 4092.4287 -4064.4033 4092.3716 C
-4064.24 4092.3562 -4063.9153 4092.323 -4063.96 4092.5254 C
-4064.2073 4092.6814 L
-4063.8889 4092.9126 -4063.5049 4092.1504 -4063.1687 4092.5454 C
-4063.1511 4092.7092 -4063.2783 4092.7854 -4063.2976 4092.8877 C
-4062.9209 4092.3894 -4062.5576 4092.4185 -4062 4092.0664 C
-4062.3232 4092.7896 L
-4061.8772 4091.9893 -4060.8672 4092.2168 -4060.1672 4092.6392 C
-4060.2449 4092.5166 -4060.3848 4092.4307 -4060.3008 4092.2913 C
-4059.8896 4092.1182 -4059.5791 4092.6143 -4059.7695 4092.9951 C
-4059.3679 4092.3955 -4058.2393 4093.5 -4057.6919 4092.7207 C
-4055.1753 4089.0454 L
-4055.2695 4089.1377 -4055.3704 4089.2124 -4055.4744 4089.2437 C
-4055.7031 4088.6094 -4055.8264 4088.6863 -4055.4255 4088.0879 C
-4055.8191 4088.4236 -4055.6687 4088.9336 -4056.26 4088.96 C
-4056.0281 4088.6404 -4055.9695 4087.9121 -4056.5359 4087.8369 C
-4057.9519 4088.4712 -4058.8904 4090.2759 -4060.2129 4091.198 C
-4060.2617 4090.7092 -4061.3 4090.8462 -4061.8047 4090.7312 C
-4061.6121 4090.2061 -4061.2375 4090.0564 -4060.8489 4089.9502 C
-4061.0928 4089.9172 -4061.5127 4089.9031 -4061.8242 4089.8799 C
-4061.9512 4090.9102 L
f
-4058.6631 4089.2661 m
-4058.6985 4089.2227 -4058.7351 4089.198 -4058.7727 4089.1753 C
-4058.7527 4089.2156 -4058.72 4089.2471 -4058.6631 4089.2661 C
f
-4060.7305 4089.9646 m
-4060.7256 4089.9473 -4060.7273 4089.9326 -4060.7256 4089.9126 C
-4060.7664 4089.9236 -4060.8071 4089.9385 -4060.8489 4089.9502 C
-4060.8071 4089.9541 -4060.76 4089.96 -4060.7305 4089.9646 C
f
-4055.0127 4086.9602 m
-4054.9287 4086.8213 -4054.8665 4086.782 -4054.7825 4086.6416 C
-4054.8342 4086.6895 -4054.8992 4086.7271 -4054.9617 4086.7693 C
-4055.0212 4086.8352 -4055.0496 4086.9014 -4055.0127 4086.9602 C
f
-4054.7295 4087.8213 m
-4054.7744 4088.0225 L
-4054.7383 4088.0447 -4054.7129 4088.0493 -4054.6809 4088.0652 C
-4054.6711 4087.9573 -4054.6816 4087.8662 -4054.7295 4087.8213 C
f
-4067.3137 4086.4873 m
-4067.4482 4086.5933 L
-4067.3672 4086.5852 -4067.3323 4086.5422 -4067.3137 4086.4873 C
f
-4063.5144 4090.0796 m
-4063.0264 4090.0313 -4063.4561 4089.3496 -4062.7656 4089.3462 C
-4062.9683 4089.3013 L
-4062.4729 4088.9893 -4061.6023 4089.1328 -4061.0137 4089.1062 C
-4061.0801 4089.3982 -4060.6567 4089.4602 -4060.7256 4089.9126 C
-4060.3232 4089.8062 -4059.9248 4089.7061 -4059.7175 4089.2393 C
-4059.4683 4089.3926 -4059.0896 4088.9822 -4058.7727 4089.1753 C
-4058.9065 4088.9019 -4058.3215 4088.2515 -4059.0928 4088.5852 C
-4059.0305 4088.5479 -4059.0696 4088.4854 -4059.0081 4088.4473 C
-4059.5049 4088.0664 -4059.7041 4088.7124 -4060.1321 4088.7212 C
-4060.3879 4088.4517 -4059.7136 4088.2854 -4059.9551 4088.178 C
-4060.4895 4088.4292 -4061.6321 4087.8535 -4061.5967 4088.8677 C
-4061.9856 4088.9395 -4062.0393 4088.7156 -4062.1553 4088.5303 C
-4062.7705 4089.6106 -4064.4385 4088.0664 -4064.4329 4089.4478 C
-4064.2083 4089.3936 -4063.8423 4089.4229 -4063.5127 4089.1272 C
-4063.5144 4090.0796 L
f
-4055.8323 4087.0313 m
-4055.8623 4087.0254 -4055.9023 4087.0303 -4055.9272 4087.0181 C
-4055.8992 4087.0254 -4055.8643 4087.0303 -4055.8323 4087.0313 C
f
*u
1 D
-4049.6736 4091.0354 m
-4049.8777 4091.9395 L
-4051.0398 4092.1553 -4051.46 4091.9014 -4052.4761 4091.9375 C
-4052.5537 4091.8135 -4052.4304 4091.7349 -4052.3679 4091.6953 C
-4053.0823 4091.7998 -4054.1511 4091.6104 -4054.6711 4092.0254 C
-4054.8984 4092.0181 -4055.4951 4091.7312 -4055.2693 4091.4646 C
-4055.3799 4091.5454 -4055.5063 4091.6233 -4055.6335 4091.594 C
-4055.6672 4091.2693 -4055.3489 4091.5015 -4055.3416 4091.2349 C
-4055.4424 4091.2134 -4055.4817 4091.1504 -4055.5049 4091.2522 C
-4055.3352 4090.9734 -4055.6809 4090.1509 -4054.8896 4090.1719 C
-4054.5833 4090.9307 -4055.4385 4090.2598 -4055.2576 4091.0967 C
-4054.9951 4091.1021 -4055.0256 4090.7781 -4055.0032 4090.6763 C
-4054.6687 4090.6953 -4054.6775 4090.9053 -4054.6953 4091.0967 C
-4054.5671 4090.8369 -4054.1465 4091.198 -4053.9695 4090.8037 C
-4053.3191 4090.7393 -4054.0049 4091.4326 -4053.5801 4091.4229 C
-4053.3352 4090.5752 L
-4052.6289 4090.7349 L
-4051.6064 4090.4375 -4052.7751 4089.2705 -4051.6064 4088.7913 C
-4051.76 4089.2334 -4051.2913 4089.9766 -4050.7473 4090.1531 C
-4051.0728 4090.1846 -4051.6743 4090.7373 -4052.0945 4090.4854 C
-4051.5022 4091.1494 -4052.9097 4090.5652 -4052.6023 4091.3252 C
-4052.3096 4090.9646 -4051.8215 4090.9172 -4051.4409 4091.1106 C
-4051.5657 4091.1895 L
-4051.1609 4091.2793 -4050.8545 4090.3926 -4050.2959 4090.7312 C
-4050.0183 4090.7041 -4050.0703 4090.9429 -4050.1191 4091.1416 C
-4049.8843 4091.0142 -4049.6743 4090.8484 -4049.6736 4091.0354 C
f
0 D
-4050.2783 4091.2134 m
-4050.6497 4091.1294 L
-4050.5615 4091.2693 -4050.4231 4091.2644 -4050.2783 4091.2134 C
f
*U
-4003.1377 4081.2349 m
-4003.1008 4081.2571 -4003.0583 4081.2803 -4003.0249 4081.3037 C
-4003.0496 4081.2644 -4003.0923 4081.2471 -4003.1377 4081.2349 C
f
-4036.0967 4080.9102 m
-4035.8816 4080.9385 L
-4035.9656 4080.9092 -4036.0344 4080.9053 -4036.0967 4080.9102 C
f
-4031.2693 4078.1104 m
-4030.9551 4077.9126 L
-4031.0791 4077.9253 -4031.1763 4078.0039 -4031.2693 4078.1104 C
f
-4005.7024 4081.1768 m
-4005.7129 4081.1709 L
-4005.7305 4081.1846 -4005.7439 4081.2041 -4005.7625 4081.2156 C
-4005.7024 4081.1768 L
f
-4021.5872 4080.0933 m
-4021.5393 4080.1653 -4021.4856 4080.23 -4021.4121 4080.2803 C
-4021.4209 4080.1963 -4021.4863 4080.1353 -4021.5872 4080.0933 C
f
-4031.3271 4078.1475 m
-4031.3191 4078.1553 -4031.3145 4078.157 -4031.3081 4078.1631 C
-4031.2959 4078.1455 -4031.2825 4078.1265 -4031.2693 4078.1104 C
-4031.3271 4078.1475 L
f
-4038.2231 4078.4385 m
-4038.2693 4078.4646 -4038.3113 4078.4854 -4038.3608 4078.5225 C
-4038.2959 4078.5059 -4038.2561 4078.4739 -4038.2231 4078.4385 C
f
-4037.9199 4080.8406 m
-4037.9695 4080.8623 -4038.0168 4080.8887 -4038.0537 4080.9253 C
-4037.9199 4080.8406 L
f
-4045.3577 4079.1934 m
-4045.6472 4079.3145 L
-4045.5049 4079.3013 -4045.4199 4079.2544 -4045.3577 4079.1934 C
f
-4038.6863 4080.2854 m
-4038.7031 4080.3252 -4038.72 4080.3633 -4038.7312 4080.4014 C
-4038.6912 4080.3752 -4038.6721 4080.3252 -4038.6863 4080.2854 C
f
-4001.2976 4083.7617 m
-4001.3042 4083.7617 -4001.3113 4083.7644 -4001.3152 4083.7644 C
-4001.3225 4083.8633 L
-4001.2976 4083.7617 L
f
-4000.5935 4082.5269 m
-4000.5105 4082.5015 -4000.4241 4082.4792 -4000.3391 4082.4573 C
-4000.4336 4082.4517 -4000.5256 4082.4785 -4000.5935 4082.5269 C
f
-4017.3809 4081.4573 m
-4017.3042 4081.5796 -4017.1243 4081.7261 -4017.2083 4081.8662 C
-4017.0615 4081.6895 -4017.0713 4081.2603 -4017.3809 4081.4573 C
f
-4002.7092 4089.0664 m
-4002.6631 4088.9517 -4002.6057 4088.8643 -4002.5481 4088.7781 C
-4002.6553 4088.9019 -4002.7493 4089.0039 -4002.7092 4089.0664 C
f
-4002.5481 4088.7781 m
-4002.4951 4088.7173 -4002.4385 4088.6531 -4002.3911 4088.5869 C
-4002.4463 4088.6416 -4002.4993 4088.7061 -4002.5481 4088.7781 C
f
-4019.3313 4088.4912 m
-4019.3503 4088.4336 -4019.3799 4088.3853 -4019.4199 4088.3701 C
-4019.4082 4088.4854 -4019.3762 4088.5103 -4019.3313 4088.4912 C
f
-4000.1335 4082.5928 m
-4000.0879 4082.3911 -3998.9817 4081.9517 -3999.9121 4081.8484 C
-3999.8762 4081.219 -3999.3152 4081.5576 -3999.0671 4081.4019 C
-3999.2473 4081.2544 -3998.9775 4080.9983 -3999.0322 4080.7732 C
-3999.1553 4080.8496 -3999.3015 4081.0303 -3999.5049 4080.9854 C
-3999.5984 4080.698 -3999.2898 4080.5022 -3999.0488 4080.6104 C
-3999.3457 4080.2781 -3998.6721 4080.1118 -3999.0923 4079.8572 C
-3999.9905 4080.0791 -4000.6252 4080.3076 -4001.2568 4081.2261 C
-4000.7449 4081.0752 -4000.1721 4080.8877 -3999.7522 4081.1404 C
-3999.9287 4081.6846 L
-4000.4033 4081.2061 -4000.6963 4081.5632 -4001.1631 4081.5127 C
-4000.1145 4081.8013 L
-3999.6233 4082.2544 -3999.9519 4082.3584 -4000.3391 4082.4573 C
-4000.2439 4082.4639 -4000.1577 4082.4966 -4000.1335 4082.5928 C
f
-4000.8401 4087.3662 m
-4000.8225 4087.3809 L
-4000.8071 4087.3623 -4000.7881 4087.3496 -4000.7783 4087.3267 C
-4000.8401 4087.3662 L
f
-4045.3042 4090.2017 m
-4045.3943 4090.4077 L
-4045.3191 4090.3145 -4045.2959 4090.2515 -4045.3042 4090.2017 C
f
-4001.4656 4084.7312 m
-4001.4648 4084.7312 L
-4001.4719 4084.7373 -4001.4736 4084.7373 -4001.4656 4084.7312 C
f
-4043.0632 4090.2437 m
-4043.0664 4090.2583 -4043.0696 4090.2744 -4043.0752 4090.2913 C
-4043.0671 4090.2744 -4043.0671 4090.2583 -4043.0632 4090.2437 C
f
-4042.4641 4078.5142 m
-4042.4683 4078.4893 -4042.4695 4078.4646 -4042.4792 4078.4402 C
-4042.5271 4078.4712 -4042.5039 4078.4966 -4042.4641 4078.5142 C
f
-4043.0615 4090.1934 m
-4043.0615 4090.21 -4043.0601 4090.2261 -4043.0632 4090.2437 C
-4043.0615 4090.2261 -4043.0576 4090.2092 -4043.0615 4090.1934 C
f
-4032.1641 4088.1963 m
-4032.1985 4088.1021 -4032.2527 4088.0127 V
-4032.2737 4088.0632 -4032.2527 4088.1221 -4032.1641 4088.1963 C
f
-4034.3152 4087.3911 m
-4034.3152 4087.3911 L
-4034.3289 4087.3711 -4034.3369 4087.3535 -4034.3545 4087.3311 C
-4034.3152 4087.3911 L
f
-4017.8896 4079.0066 m
-4017.9961 4078.9993 -4018.0759 4079.0127 -4018.1433 4079.0354 C
-4018.0657 4079.0493 -4017.9817 4079.0479 -4017.8896 4079.0066 C
f
-4043.0752 4090.2913 m
-4043.0977 4090.3484 -4043.1296 4090.4077 -4043.1824 4090.4812 c
-4043.1243 4090.4031 -4043.0935 4090.3433 -4043.0752 4090.2913 C
f
-4028.8843 4085.4478 m
-4028.9072 4085.469 -4028.9287 4085.4893 -4028.9504 4085.5078 C
-4028.9373 4085.5181 -4028.9241 4085.5225 -4028.9111 4085.5352 C
-4028.8843 4085.4478 L
f
-4027.7617 4085.8484 m
-4027.8 4085.9102 -4027.8176 4085.9739 -4027.8391 4086.0303 C
-4027.4385 4085.8037 -4026.7024 4086.0493 -4026.6152 4085.4712 C
-4026.7512 4085.4854 -4027.4561 4085.1455 -4027.3359 4084.8062 C
-4027.6152 4084.9512 -4028.0281 4084.5454 -4028.1785 4084.6404 C
-4027.72 4084.9573 -4028.1289 4085.1289 -4028.4385 4085.323 C
-4028.72 4085.1553 -4028.3855 4084.8584 -4028.6279 4084.7515 C
-4029.2793 4084.8145 L
-4028.7119 4084.8916 L
-4028.8843 4085.4478 L
-4028.8633 4085.4292 -4028.8489 4085.4172 -4028.8264 4085.3955 C
-4027.8665 4085.1353 -4028.7449 4086.21 -4027.7617 4085.8484 C
f
-4027.8391 4086.0303 m
-4027.8992 4086.0652 -4027.9519 4086.1079 -4027.9929 4086.1672 C
-4027.9023 4086.1582 -4027.8672 4086.1016 -4027.8391 4086.0303 C
f
-4023.9172 4086.9478 m
-4023.8679 4086.9292 -4023.8145 4086.9031 -4023.7473 4086.8599 c
-4023.7793 4086.8809 -4023.8535 4086.9077 -4023.9172 4086.9478 C
f
-4052.6584 4086.1672 m
-4052.6416 4086.3311 -4052.0823 4086.6685 -4052.0923 4086.2405 C
-4052.0923 4086.2405 L
-4052.2583 4086.198 -4052.4255 4086.1531 -4052.5935 4086.1062 C
-4052.6584 4086.1672 L
f
-4013.2336 4084.4602 m
-4013.2959 4084.4478 -4013.3584 4084.4429 -4013.4209 4084.4502 C
-4013.4343 4084.4712 -4013.4473 4084.4951 -4013.4573 4084.5166 C
-4013.4192 4084.5796 -4013.2959 4084.5015 -4013.2336 4084.4602 C
f
-4027.1631 4084.6052 m
-4027.2656 4084.6709 -4027.3113 4084.7383 -4027.3359 4084.8062 C
-4027.2695 4084.7725 -4027.2083 4084.7173 -4027.1631 4084.6052 C
f
-4013.1985 4085.4785 m
-4013.1191 4085.6006 -4013.0022 4085.7871 -4012.9856 4085.9502 C
-4012.8232 4085.9541 -4012.7092 4085.7295 -4012.5439 4085.6494 C
-4012.7305 4085.7119 -4012.9463 4085.6685 -4013.1985 4085.4785 C
f
-4012.5305 4085.6416 m
-4012.5352 4085.6455 -4012.5398 4085.6475 -4012.5439 4085.6494 C
-4012.5393 4085.6494 -4012.5352 4085.6443 -4012.5305 4085.6416 C
f
*u
1 D
-4052.9912 4085.9854 m
-4053.0393 4086.0181 -4053.0889 4086.0479 -4053.1399 4086.0752 C
-4053.0625 4085.9602 L
-4053.1912 4085.9185 -4053.3191 4085.8772 -4053.4473 4085.8311 C
-4053.4937 4085.8584 -4053.5439 4085.8843 -4053.6057 4085.8982 C
-4053.5808 4085.8843 -4053.5615 4085.8389 -4053.5496 4085.7922 C
-4053.5913 4085.7764 -4053.6321 4085.7593 -4053.6729 4085.7422 C
-4053.9792 4086.1851 -4054.7417 4086.5088 -4054.9617 4086.7693 C
-4055.2527 4086.9592 -4055.6089 4087.0664 -4055.8323 4087.0313 C
-4055.6252 4087.0413 -4055.3503 4086.9517 -4055.4329 4086.7073 C
-4055.8533 4086.4517 -4056.0576 4085.7173 -4056.7832 4086.3484 C
-4056.3577 4086.3389 L
-4057.3145 4087.2896 L
-4057.6497 4086.8955 -4056.8369 4086.8145 -4056.7041 4086.4727 C
-4057.4482 4086.9414 -4058.0671 4085.6895 -4058.4121 4086.5127 C
-4058.4607 4086.0244 -4058.5422 4085.21 -4059.0305 4085.2583 C
-4058.6785 4085.8145 -4059.3232 4085.6155 -4059.0344 4086.2119 C
-4059.2031 4086.4912 -4059.5791 4086.0354 -4059.6072 4086.4014 C
-4059.5615 4086.1992 L
-4060.3953 4085.4263 -4060.6682 4086.6377 -4061.0249 4087.0354 C
-4062.0232 4087.2349 -4062.4817 4086.9185 -4063.2959 4087.0015 C
-4063.3279 4086.6743 -4063.5496 4085.7744 -4063.8762 4085.8086 C
-4064.0281 4086.2515 -4064.7649 4086.4561 -4064.8401 4087.0225 C
-4064.2561 4087.2598 -4064.3623 4086.5479 -4064.0127 4086.4153 C
-4063.7217 4087.0093 -4063.9863 4087.0022 -4063.5889 4087.3584 C
-4063.9097 4087.1272 -4065.0383 4087.6685 -4065.3896 4087.1104 C
-4065.2656 4087.0313 L
-4065.8264 4086.6934 -4065.9336 4085.2913 -4066.8679 4086.1394 C
-4067.3137 4086.4873 L
-4067.2922 4086.4307 -4067.2898 4086.3643 -4067.2783 4086.3135 C
-4068.0081 4086.2544 -4067.8088 4085.6094 -4068.6145 4086.1182 c
-4068.5522 4086.0791 -4068.5913 4086.0166 -4068.5281 4085.9785 C
-4068.9873 4085.6597 -4069.4504 4086.2998 -4069.7976 4086.4336 C
-4070.0095 4085.9602 -4069.7473 4085.9683 -4069.6162 4085.6265 C
-4070.4241 4085.4429 -4071.2959 4086.2544 -4071.7976 4086.8311 C
-4072.3184 4086.5537 L
-4072.0095 4086.3584 -4071.6321 4085.8599 -4071.7263 4085.5742 C
-4072.0127 4085.6685 -4071.9573 4085.8926 -4072.3623 4085.8013 C
-4072.2932 4085.4993 -4072.1233 4085.2173 -4071.9329 4084.8369 C
-4072.7705 4084.3311 -4072.1201 4085.9092 -4072.7063 4084.9812 C
-4072.9695 4084.9751 -4073.1223 4085.4172 -4073.1511 4085.782 C
-4073.6279 4085.3037 L
-4073.6809 4085.7693 -4074.2695 4085.7959 -4074.6553 4085.8662 C
-4074.7024 4086.0664 -4074.3447 4086.3623 -4074.1985 4086.1814 C
-4074.2273 4086.5479 -4074.6377 4086.719 -4074.9016 4086.7124 C
-4074.9983 4085.7373 -4076.6296 4086.8535 -4076.3176 4085.7041 C
-4077.5032 4086.0212 -4079.1687 4086.1201 -4079.9512 4086.5269 C
-4080.2092 4086.2571 -4080.7351 4086.2437 -4080.4199 4085.7854 C
-4081.3743 4085.782 -4081.8665 4086.7832 -4082.8137 4086.5166 C
-4082.8921 4086.3943 -4082.3855 4086.5078 -4082.4192 4086.1814 C
-4083.0383 4086.573 -4083.5457 4085.7693 -4084.5063 4086.0303 C
-4084.3447 4086.0127 -4084.2976 4085.8113 -4084.2751 4085.71 C
-4084.2583 4085.8716 -4084.6687 4086.0454 -4084.9172 4086.2017 C
-4085.0569 4086.1182 -4084.7312 4086.0852 -4084.8096 4085.9602 C
-4086.6653 4085.4873 -4088.0791 4086.8135 -4089.9248 4086.7693 c
-4089.3977 4086.782 -4089.1985 4086.1353 -4089.1929 4085.8716 C
-4089.7092 4085.8599 L
-4089.9082 4086.1814 -4090.2959 4086.1814 -4090.6201 4086.4229 C
-4090.6599 4086.3013 -4090.8176 4086.1709 -4090.6567 4086.0181 C
-4091.6768 4085.3643 -4092.25 4087.198 -4093.5 4086.8623 C
-4091.9863 4085.5591 L
-4092.3608 4085.1052 L
-4091.6953 4084.5127 L
-4092.0928 4084.1553 -4092.4385 4084.9812 -4092.4863 4084.4912 C
-4092.4023 4084.3535 -4092.2 4084.3975 -4092.1936 4084.1328 C
-4092.5752 4083.9414 -4092.6052 4084.3062 -4092.8921 4084.4014 C
-4092.1362 4083.4053 -4090.6543 4083.4209 -4089.8567 4083.1768 C
-4089.7312 4083.0977 -4089.9641 4083.4172 -4089.9863 4083.5181 C
-4089.6609 4083.4854 -4089.4656 4083.7959 -4089.0559 4083.6233 C
-4088.8015 4083.2017 -4089.25 4083.3135 -4089.4519 4083.2693 C
-4089.4241 4082.9031 -4089.3225 4082.9253 -4089.0977 4082.8701 C
-4089.0488 4083.3584 -4087.8633 4083.0435 -4087.5735 4083.6392 C
-4086.3721 4083.4854 -4087.7656 4082.3752 -4086.5928 4082.5869 C
-4086.2424 4083.1455 L
-4085.5615 4082.7139 -4084.6809 4082.3311 -4083.9104 4082.4502 C
-4084.0728 4082.4683 L
-4084.1809 4082.7073 -4084.0022 4082.8545 -4083.9231 4082.9766 C
-4083.3408 4083.2156 -4082.8176 4082.5376 -4082.4648 4083.0967 C
-4081.8008 4082.5022 -4080.6936 4082.0632 -4079.9343 4081.7566 C
-4079.7295 4082.4932 -4080.9248 4082.3809 -4081.2407 4082.8413 C
-4080.5496 4082.8389 L
-4080.9768 4082.8484 -4081.1455 4083.1289 -4081.4016 4083.5479 C
-4080.7959 4083.6846 -4080.5967 4083.0398 -4080.0225 4082.8535 C
-4080.0671 4083.0537 -4079.9905 4083.1768 -4079.7256 4083.1814 C
-4079.6504 4082.6934 L
-4079.6455 4082.7334 -4079.6162 4082.7705 -4079.5344 4082.8013 C
-4078.5127 4082.5022 L
-4078.7295 4082.2935 -4078.74 4081.8677 -4079.0039 4081.8623 C
-4078.9097 4082.1475 -4079.1335 4082.2041 -4079.3977 4082.1963 C
-4079.1663 4081.8772 -4079.6553 4081.927 -4079.6497 4081.6631 C
-4079.1201 4081.6763 -4078.4695 4081.6104 -4078.1223 4081.4766 C
-4078.0095 4081.927 L
-4077.5049 4082.0413 -4076.9719 4081.7896 -4076.6296 4081.9209 C
-4076.7375 4082.1597 L
-4076.1321 4082.2979 -4075.5359 4082.0078 -4074.9983 4082.4473 C
-4074.4583 4081.9326 -4073.7783 4081.5039 -4073.3369 4080.9646 C
-4073.1008 4080.3843 -4071.7522 4081.6953 -4071.1433 4080.8772 C
-4071.1023 4080.9395 -4071.5615 4081.3145 -4071.7693 4081.5342 C
-4071.3643 4081.6243 -4071.0422 4080.9014 -4070.9153 4081.5132 C
-4071.8242 4081.3076 -4070.8665 4082.0015 -4071.2759 4082.1753 C
-4070.8503 4082.1641 -4070.4016 4082.0537 -4070.1929 4081.8352 C
-4070.8816 4081.8396 -4069.9482 4080.9893 -4070.6455 4081.2559 C
-4070.1052 4080.7412 -4069.3679 4080.5354 -4068.7241 4080.7349 C
-4068.7305 4080.9993 -4068.6511 4081.1221 -4068.4111 4081.2312 C
-4068.2175 4080.8484 L
-4067.9163 4080.9185 -4068.8 4081.3013 -4068.1936 4081.4385 C
-4067.5696 4080.7832 -4066.3145 4081.8096 -4066.0413 4080.5977 C
-4065.5657 4081.0767 -4066.9463 4081.0833 -4066.2295 4081.6685 C
-4066.6465 4082.1062 -4067.2217 4081.6052 -4067.3591 4082.21 C
-4066.9504 4082.0376 -4067.21 4082.7212 -4066.9463 4082.7271 C
-4066.4905 4082.3545 L
-4066.5913 4082.3311 L
-4065.8264 4081.7603 -4064.6145 4082.0342 -4063.6377 4081.9375 C
-4062.8103 4081.3279 -4062.2407 4080.4478 -4061.2483 4080.5142 C
-4061.5413 4080.8716 -4060.4241 4080.8584 -4061.0488 4081.5132 C
-4060.5896 4081.8286 -4060.1362 4081.4551 -4060.1272 4081.1909 C
-4060.5313 4081.1006 -4060.2693 4081.1062 -4060.6096 4080.9766 C
-4060.3799 4080.6563 -4059.8503 4080.6709 -4059.6328 4080.8799 C
-4059.7336 4080.8562 -4059.6953 4080.9185 -4059.7175 4081.0181 C
-4059.2351 4081.2334 -4059.4863 4080.6997 -4059.1377 4080.5664 C
-4059.0271 4081.0142 -4058.3679 4080.6863 -4058.0496 4080.9185 C
-4057.5879 4080.2793 L
-4057.8416 4080.6992 -4057.1455 4080.4326 -4057.0728 4080.8186 C
-4056.7417 4080.5225 -4056.4641 4080.0022 -4055.96 4080.1155 C
-4056.1682 4080.3352 -4055.5 4080.4326 -4055.4912 4080.8584 C
-4054.6279 4081.2661 -4054.0615 4079.6963 -4053.2439 4080.3062 C
-4053.2693 4080.4063 -4053.4343 4080.6863 -4053.1953 4080.7935 C
-4053.0071 4080.6743 -4052.6775 4080.7246 -4052.4761 4080.678 C
-4052.4824 4080.6902 L
-4052.4785 4080.6863 -4052.4761 4080.6814 -4052.4719 4080.678 C
-4052.3733 4080.6553 -4052.3113 4080.6021 -4052.3088 4080.4993 C
-4051.9641 4080.0823 -4051.7864 4079.6553 -4051.1079 4079.3013 C
-4051.1577 4078.8135 -4051.7305 4079.0022 -4051.9785 4079.1597 C
-4052.1929 4079.6416 L
-4052.3977 4078.9053 -4052.8047 4079.7693 -4052.9607 4079.5212 C
-4052.5537 4078.6582 -4051.3816 4078.8701 -4050.6785 4078.3396 C
-4051.1072 4077.6597 -4052.0398 4077.5537 -4052.8535 4077.6353 C
-4052.4951 4077.9287 L
-4052.9209 4077.9385 L
-4052.5088 4078.4573 L
-4052.9121 4078.3662 -4053.2607 4078.4993 -4053.6252 4078.469 C
-4053.1985 4078.46 -4053.0322 4079.1328 -4053.2737 4079.0264 C
-4053.7493 4078.5479 -4053.7693 4079.3389 -4054.1328 4079.3096 C
-4053.9304 4079.3545 -4053.6672 4079.3623 -4053.8369 4079.6416 C
-4054.5537 4079.0557 -4054.7473 4079.4375 -4055.3992 4078.8113 C
-4055.3184 4079.6252 -4056.2136 4078.8926 -4056.3113 4079.5591 C
-4056.0088 4079.6272 L
-4056.6504 4080.1187 L
-4057.2424 4079.4561 -4056.1262 4079.4429 -4057.0271 4078.9739 C
-4057.8584 4078.8926 -4057.8369 4079.7471 -4058.4905 4079.8101 C
-4058.2751 4079.3286 -4057.7568 4078.9153 -4057.2295 4078.9287 C
-4057.5488 4078.6963 L
-4057.3799 4078.4172 -4056.6504 4078.4756 -4056.2864 4078.5044 C
-4056.8879 4079.0576 -4056.0049 4078.6743 -4055.7312 4079.1062 C
-4055.6809 4078.6404 -4056.0671 4078.7139 -4055.6111 4078.3396 C
-4056.0383 4078.3484 -4056.1008 4078.3877 -4056.6443 4078.2119 C
-4055.4695 4078.4236 -4055.5879 4076.5933 -4054.5625 4076.9854 C
-4055.0352 4077.1963 -4054.3977 4077.6582 -4054.3408 4077.8843 C
-4054.1184 4077.8279 -4053.6672 4077.7173 -4053.4817 4077.6006 C
-4053.6497 4076.927 L
-4053.0522 4076.6353 -4052.8447 4078.0625 -4052.1553 4077.3677 C
-4052.0657 4076.9646 -4052.7617 4077.2312 -4052.6377 4077.1531 C
-4051.6943 4076.73 -4051.3545 4077.8145 -4050.5168 4078.3223 C
-4050.4695 4078.1201 -4050.4792 4077.6934 -4050.1863 4077.3369 C
-4050.2783 4077.7412 -4050.0615 4077.9478 -4050.3911 4078.2437 C
-4050.1111 4078.4153 -4049.7793 4078.1182 -4049.5322 4077.9602 C
-4050.1152 4077.7234 -4049.2937 4077.3799 -4049.1863 4077.1377 C
-4048.8843 4077.2061 -4049.2783 4077.5413 -4049.4641 4077.6582 C
-4049.2217 4077.7661 -4048.9336 4078.3623 -4048.7959 4077.7566 C
-4048.7864 4078.1814 -4049.4736 4078.8772 -4049.9231 4078.9873 C
-4049.6201 4079.0557 L
-4049.8289 4079.2732 -4049.8679 4079.2119 -4050.1687 4079.1455 C
-4049.8743 4079.4756 -4049.9033 4079.8396 -4049.9719 4080.1431 C
-4050.0105 4080.0811 -4049.9504 4080.0422 -4049.9873 4079.9812 C
-4050.2295 4079.8733 -4050.4153 4079.9893 -4050.3591 4080.2156 C
-4050.5769 4080.7876 -4050.0232 4080.573 -4049.8591 4080.8584 C
-4049.7351 4080.8213 -4049.6111 4080.782 -4049.4895 4080.7437 C
-4048.2312 4078.907 L
-4047.6936 4078.6934 -4047.4519 4079.1328 -4047.0481 4079.4102 C
-4046.9373 4078.9185 L
-4046.4695 4078.969 -4046.0281 4079.1252 -4046.3279 4079.7471 C
-4046.3447 4079.5833 -4046.4065 4079.6221 -4046.5081 4079.5977 C
-4046.5215 4079.6653 -4046.5449 4079.7124 -4046.5745 4079.7515 C
-4046.5842 4079.7803 -4046.5896 4079.8086 -4046.5977 4079.8369 C
-4046.0967 4079.678 -4045.7839 4079.5752 -4045.7551 4079.5564 C
-4046.6057 4080.2693 -4045.7976 4080.4478 -4045.9399 4081.3186 C
-4045.0808 4081.0352 L
-4045.6016 4080.7593 -4045.0903 4080.6094 -4044.9055 4080.4912 C
-4044.8545 4080.9812 -4044.2136 4080.4873 -4043.9121 4080.5557 C
-4043.9343 4080.6563 L
-4043.6553 4080.8262 -4043.1663 4080.7781 -4042.8184 4080.6455 C
-4042.8342 4080.4812 -4042.3879 4079.6807 -4042.1736 4079.198 C
-4042.7705 4079.0142 -4042.4163 4078.8184 -4042.4641 4078.5142 C
-4042.4023 4078.5422 -4042.2913 4078.5479 -4042.2783 4078.4854 C
-4042.1929 4078.3462 -4042.3943 4078.2998 -4042.4111 4078.1377 C
-4043.0457 4078.3662 -4043.6985 4078.4307 -4043.9573 4079.1143 C
-4043.7625 4079.4236 -4043.6252 4078.8184 -4043.4072 4079.0254 C
-4043.7217 4079.4854 -4044.1272 4079.3943 -4044.6543 4079.3809 C
-4044.8271 4078.9712 L
-4045.3577 4079.1934 L
-4045.1362 4078.9766 -4045.2695 4078.5479 -4044.7129 4078.4646 C
-4044.7839 4078.0791 -4045.2649 4078.5537 -4045.6057 4078.4236 C
-4045.78 4078.9683 L
-4045.7129 4078.6653 -4046.4424 4078.6062 -4045.9241 4078.1924 C
-4045.0808 4077.7471 L
-4045.3152 4077.3752 L
-4044.6023 4077.2705 L
-4044.7705 4077.5518 L
-4043.6252 4077.1753 -4044.4329 4078.6353 -4043.28 4077.9927 C
-4042.9192 4077.3333 -4042.5313 4077.2622 -4041.8247 4077.4229 C
-4042.3359 4077.5703 -4041.8772 4077.8877 -4042.0696 4078.2693 C
-4041.5481 4078.5447 -4041.3721 4078.0015 -4041.1016 4077.7437 C
-4040.9688 4078.0923 -4040.8743 4078.3772 -4041.3401 4078.3262 C
-4041.3984 4079.0557 -4040.7273 4078.1997 -4040.6848 4078.9512 C
-4039.1416 4078.9287 -4039.4482 4076.5254 -4037.6443 4077.4639 C
-4037.7119 4077.7661 L
-4036.5664 4077.3894 -4035.9055 4077.7515 -4034.8447 4077.5127 C
-4034.0095 4078.2832 L
-4034.1963 4078.4014 -4034.6985 4078.9771 -4034.4641 4079.3484 C
-4034.8704 4078.5686 -4035.3015 4078.8413 -4035.7393 4078.4236 C
-4035.7839 4078.6265 -4035.6057 4078.7725 -4035.5281 4078.8975 C
-4035.7922 4078.8894 -4035.9248 4078.5413 -4036.2737 4078.6763 C
-4036.2568 4078.8369 -4035.8762 4079.0303 -4036.1631 4079.1252 C
-4036.6377 4078.6455 L
-4037.2727 4078.8743 -4036.9504 4079.7935 -4037.6963 4079.573 C
-4037.5576 4079.1455 -4037.2744 4078.5264 -4036.9856 4078.4236 C
-4037.3264 4078.3311 -4036.5313 4078.1653 -4036.8423 4077.9092 C
-4037.3333 4078.5435 -4037.5703 4078.0413 -4038.2231 4078.4385 C
-4038.1465 4078.3496 -4038.1262 4078.2256 -4037.9656 4078.1863 C
-4038.9128 4077.9185 L
-4038.6785 4078.2896 -4039.6953 4078.3262 -4039.6072 4078.8772 C
-4038.5977 4079.1052 -4038.8943 4078.7725 -4037.7439 4079.0852 C
-4038.0696 4079.21 -4038.4895 4079.7705 -4038.6863 4080.2854 C
-4038.6963 4080.2644 -4038.7129 4080.2471 -4038.7483 4080.2373 C
-4038.9241 4080.782 -4038.7449 4080.9287 -4038.7483 4081.8809 C
-4038.2231 4081.2041 -4037.8721 4081.7617 -4037.2527 4081.3716 C
-4037.1362 4080.8496 -4037.6121 4080.7061 -4037.9199 4080.8406 C
-4037.3743 4080.4951 L
-4037.4817 4080.7349 L
-4036.0967 4080.9102 L
-4036.3591 4080.9385 -4036.4482 4081.2405 -4036.5852 4081.4688 C
-4036.4065 4081.4893 -4036.2295 4081.6272 -4036.0413 4081.7781 C
-4036.0808 4081.2803 -4036.0559 4080.9287 -4035.8816 4080.9385 C
-4034.9905 4081.0564 -4034.4951 4081.5039 -4034.1663 4082.0728 C
-4034.1321 4082.0613 -4034.0935 4082.0493 -4034.0625 4082.0376 C
-4034.2119 4081.5269 -4033.4297 4081.1201 -4033.1536 4080.5977 C
-4033.1672 4081.1265 -4032.6943 4080.9153 -4032.4375 4081.1846 C
-4032.3008 4080.5791 -4032.4832 4079.7432 -4032.7959 4079.2483 C
-4033.3984 4079.8013 -4033.1335 4079.8062 -4033.4182 4080.5923 C
-4034.3848 4081.1155 L
-4034.1687 4080.6328 L
-4034.6511 4080.4197 -4035.1145 4081.0576 -4035.0791 4080.4292 C
-4034.8242 4080.0103 -4034.4033 4080.2644 -4034.1504 4079.8438 C
-4034.4695 4079.6143 L
-4033.9065 4078.9966 -4034.1809 4080.2092 -4033.4993 4079.7781 C
-4033.75 4079.2437 -4033.4375 4079.7393 -4033.1455 4079.3809 C
-4033.3799 4079.0093 -4034.3457 4079.5342 -4034.1409 4078.6265 C
-4033.7864 4078.2295 -4032.9482 4079.6902 -4032.4792 4078.7876 C
-4032.5022 4078.8894 L
-4031.8103 4079.0078 -4031.5671 4078.4893 -4031.3081 4078.1631 C
-4031.0137 4078.4573 -4030.6072 4078.0435 -4030.2881 4078.0103 C
-4030.2959 4078.2744 L
-4029.8457 4078.1641 L
-4030.0601 4078.6455 -4030.3733 4078.1509 -4030.76 4078.2212 C
-4030.7119 4078.7119 L
-4031.1577 4078.1294 -4031.4551 4079.0142 -4031.8008 4079.4375 C
-4031.2976 4079.0127 -4030.3799 4079.5576 -4030.2617 4078.5977 C
-4029.9504 4079.094 L
-4029.8015 4078.9153 L
-4029.5696 4079.2871 -4029.8064 4079.8701 -4030.2561 4079.9812 C
-4030.3342 4079.8572 -4030.3733 4079.7959 -4030.3496 4079.6934 C
-4030.5583 4079.9126 -4030.75 4080.2935 -4031.2551 4080.1807 C
-4030.9856 4079.9209 L
-4031.6145 4079.8853 -4032.1863 4080.0752 -4032.4016 4080.5576 C
-4031.4937 4080.7622 -4030.6008 4080.8057 -4029.7483 4080.7832 C
-4029.4968 4079.6743 -4029.1985 4079.0518 -4029.0703 4078.0212 C
-4028.4983 4077.8311 -4027.7217 4077.6895 -4027.2249 4078.0664 C
-4027.2705 4078.2693 L
-4027.0281 4078.3752 -4026.8047 4078.3186 -4026.6184 4078.2017 C
-4026.3623 4078.4727 -4026.7937 4078.7471 -4026.6152 4078.8936 C
-4025.7959 4078.5479 L
-4025.8464 4079.0142 -4026.5359 4079.0166 -4026.8633 4079.0493 C
-4026.8015 4079.0103 -4026.6768 4078.9326 -4026.7168 4078.8701 C
-4027.0977 4078.678 -4027.8071 4079.4727 -4027.9736 4078.7979 C
-4028.1592 4078.9153 -4027.5967 4078.2998 -4028.2249 4078.2644 C
-4028.6455 4078.0103 -4028.7825 4078.6155 -4028.8264 4078.8184 C
-4028.8333 4079.0833 -4028.1663 4079.1807 -4028.3977 4079.4993 C
-4028.0703 4079.4646 -4027.9399 4079.1252 -4027.5212 4079.3799 C
-4027.8457 4079.4121 -4028.2864 4079.9478 -4028.4592 4079.5376 C
-4029.1008 4080.0303 -4029.0088 4081.2705 -4028.7063 4081.3389 C
-4028.7783 4080.9502 -4027.5359 4080.8599 -4028.3772 4080.3535 C
-4027.9993 4079.8535 -4027.3088 4079.8496 -4026.8145 4079.5376 C
-4026.8369 4079.6377 L
-4026.2231 4079.5127 L
-4026.3096 4079.6509 -4026.4951 4079.7693 -4026.5012 4080.0313 C
-4025.6511 4079.323 L
-4026.1296 4079.7998 -4025.3545 4079.6543 -4025.1367 4079.8643 C
-4025.0457 4079.46 -4024.7136 4079.1641 -4025.0322 4078.9326 C
-4025.3904 4078.6392 -4025.2407 4079.1509 -4025.5664 4079.1814 C
-4025.1052 4078.5447 L
-4025.0657 4078.6062 L
-4024.7881 4078.0852 L
-4024.1599 4078.1221 -4025.0625 4079.2979 -4024.2576 4078.7876 C
-4024.3623 4078.0767 L
-4023.4304 4078.1814 -4022.2336 4078.9812 -4021.5752 4078.6531 C
-4021.7568 4079.0576 -4021.8369 4079.7083 -4021.5872 4080.0933 C
-4021.8711 4079.9712 -4022.4417 4079.9966 -4022.8489 4080.0632 C
-4022.9272 4079.9385 -4022.3401 4079.2227 -4021.8977 4079.3765 C
-4022.1121 4078.2119 -4023.0105 4080.0791 -4023.0625 4078.8982 C
-4024.1897 4078.4873 -4023.9033 4080.0354 -4024.8601 4079.3433 C
-4024.8733 4079.8701 -4025.1321 4079.6006 -4025.1824 4080.0652 C
-4024.8992 4080.9253 -4023.9033 4080.0354 -4023.2825 4080.3369 C
-4023.3433 4080.3752 -4023.4656 4080.4541 -4023.4895 4080.5537 C
-4023.0457 4080.7083 -4022.8623 4080.5906 -4022.5522 4080.3955 C
-4022.5913 4080.3333 L
-4022.0496 4079.8184 -4022.2561 4080.7261 -4021.9373 4080.9583 C
-4021.8137 4080.8799 -4021.3704 4081.0313 -4021.4417 4080.6455 C
-4020.8643 4081.1465 L
-4020.8921 4080.5576 L
-4020.5664 4080.5225 -4020.4951 4080.9121 -4020.2 4080.5537 C
-4020.1863 4080.0269 L
-4020.9951 4079.8438 L
-4020.5852 4079.6719 -4020.8809 4079.3396 -4020.4304 4079.2295 C
-4020.9336 4079.8057 -4020.0745 4079.5215 -4020.0249 4080.0103 C
-4019.6936 4079.7139 L
-4019.7783 4079.8545 L
-4019.5183 4080.1252 -4019.4688 4079.6582 -4019.1653 4079.7271 C
-4019.5232 4079.4336 -4019.7576 4079.0632 -4020.2136 4079.4375 C
-4019.8816 4079.1416 -4019.2231 4078.8135 -4019.0615 4078.7959 C
-4018.7129 4078.5752 -4018.4695 4078.9766 -4018.1433 4079.0354 C
-4018.7693 4079.2471 -4017.9241 4080.6328 -4019.1785 4080.2544 C
-4019.1553 4080.1531 -4019.0537 4080.1763 -4019.0144 4080.2383 C
-4019.1816 4079.5652 -4019.7664 4080.2803 -4020.0383 4080.5376 C
-4019.9683 4080.9253 -4020.2527 4081.0212 -4019.7705 4081.2349 C
-4019.9287 4080.9873 -4019.3643 4080.3716 -4018.9055 4080.6895 C
-4018.9863 4081.5181 L
-4018.3184 4081.6155 L
-4018.3809 4081.6553 L
-4018.1296 4082.1895 -4017.6682 4081.5518 -4017.2083 4081.8662 C
-4016.8762 4081.5703 -4015.6023 4081.8057 -4016.1504 4080.9385 C
-4015.7375 4081.4573 -4015.3752 4080.7959 -4014.9248 4080.6846 C
-4015.4863 4080.3462 L
-4014.8225 4079.7522 -4015.0137 4080.1353 -4014.4824 4079.1924 C
-4014.4287 4079.4185 -4014.3103 4079.6052 -4014.4182 4079.8438 C
-4013.5264 4079.8877 -4012.2527 4080.1221 -4011.7295 4079.4429 C
-4011.1008 4079.4792 -4011.0022 4080.4561 -4010.1201 4080.0728 C
-4009.9343 4079.9561 -4010.2649 4079.2979 -4009.6809 4079.5354 C
-4009.6416 4079.5977 -4010.2432 4080.1504 -4009.5928 4080.0852 C
-4009.1296 4079.4473 -4008.5049 4080.4375 -4007.9023 4079.8843 C
-4007.5842 4080.1143 -4007.0322 4080.0269 -4007.1472 4080.5313 C
-4007.6511 4080.4172 -4008.3643 4080.5225 -4008.4729 4080.7644 C
-4008.4033 4080.46 -4008.8313 4080.469 -4008.46 4080.2349 C
-4009.2217 4079.8535 -4008.9543 4080.5479 -4009.6377 4080.2871 C
-4009.6848 4080.4893 -4009.2864 4080.8457 -4009.1399 4080.6653 C
-4009.1367 4081.3545 -4010.4873 4080.9983 -4009.8799 4081.8247 C
-4009.1497 4081.8843 -4008.9329 4080.4473 -4008.3 4081.1729 C
-4008.5537 4081.5923 -4008.9504 4081.2373 -4009.2727 4081.9602 C
-4008.7527 4082.2383 L
-4008.3752 4081.7393 L
-4008.3977 4081.8413 L
-4007.4792 4082.4727 -4007.5481 4081.1316 -4006.7263 4080.7854 C
-4007.2024 4080.3076 -4006.6162 4079.5906 -4006.9744 4079.2979 C
-4006.4248 4079.21 -4006.0212 4079.3013 -4006.0176 4079.9912 C
-4007.0457 4080.5537 -4006.0759 4080.7207 -4007.0264 4081.4077 C
-4006.8704 4081.6553 -4007.2527 4082.4172 -4006.6863 4082.4932 C
-4006.0481 4082.0015 -4006.8772 4081.9185 -4006.2407 4081.6909 C
-4006.2031 4081.7522 -4006.1641 4081.8145 -4006.1863 4081.9163 C
-4005.8936 4081.5576 -4005.8447 4082.0454 -4005.4905 4081.6494 C
-4005.5745 4081.7876 L
-4005.1377 4082.2061 -4005.0967 4081.3135 -4004.7207 4081.7693 C
-4004.8711 4081.2571 -4004.4683 4081.3496 -4004.2351 4081.0303 C
-4004.6162 4080.8369 -4004.8225 4080.1021 -4005.5745 4080.1431 C
-4005.6653 4080.5479 -4005.6104 4080.7725 -4005.9192 4080.9683 C
-4005.4304 4080.9185 L
-4005.5359 4080.9854 -4005.6162 4081.0894 -4005.7129 4081.1709 C
-4006.1824 4080.9602 L
-4005.5872 4080.6719 -4005.8601 4080.2393 -4005.6072 4079.8184 C
-4005.0625 4079.9951 -4005.1577 4079.7073 -4004.8152 4079.8389 C
-4004.8496 4080.4326 -4003.7649 4080.8535 -4003.1377 4081.2349 C
-4003.2351 4081.2119 -4003.3608 4081.2271 -4003.4287 4081.2119 C
-4003.8843 4081.5869 -4003.1152 4081.7073 -4003.0984 4081.8701 C
-4002.7664 4081.573 L
-4002.8289 4081.6143 -4002.9153 4081.7522 -4002.7737 4081.8369 C
-4002.3242 4081.7261 -4002.3503 4081.1377 -4001.9016 4081.0264 C
-4001.8679 4081.3535 -4002.2473 4081.8496 -4001.9683 4082.0212 C
-4001.8721 4082.3062 -4001.5657 4083.0652 -4000.9695 4082.7764 C
-4000.9272 4082.6509 -4000.7727 4082.5811 -4000.5935 4082.5269 C
-4000.6184 4082.5447 -4000.6497 4082.5576 -4000.6609 4082.5811 C
-4000.2649 4082.9375 L
-4000.6023 4083.4951 -4000.9473 4082.6743 -4001.2864 4083.2344 C
-4001.3152 4083.7644 L
-4001.5791 4083.7661 -4001.9375 4083.9956 -4002.1023 4084.2705 C
-4001.7 4084.3604 -4001.6152 4084.2212 -4001.1653 4084.1106 C
-4001.1023 4084.4463 -4001.4192 4084.6953 -4001.4648 4084.7312 C
-4001.3977 4084.4292 L
-4001.9343 4083.99 -4002.2 4084.9375 -4002.8679 4084.8389 C
-4002.9688 4084.8174 -4002.9072 4084.7781 -4002.8848 4084.677 C
-4003.4255 4085.1909 -4003.9561 4084.4873 -4004.4817 4085.1653 C
-4004.3103 4084.8853 L
-4004.6682 4085.1106 -4005.3679 4085.6328 -4006.0671 4086.1377 C
-4006.0728 4086.3438 L
-4005.9951 4086.4683 -4006.2576 4086.4602 -4006.3984 4086.3772 C
-4006.3977 4086.3743 L
-4006.7483 4086.6265 -4007.0852 4086.8584 -4007.3608 4087.0313 C
-4007.2727 4087.1592 -4007.1599 4087.2661 -4007.0305 4087.2959 C
-4006.9209 4087.0537 -4006.2783 4087.2522 -4006.3665 4086.7017 C
-4006.0696 4087.0342 -4005.5913 4086.5576 -4005.3733 4086.7661 C
-4005.7705 4086.4126 -4005.0967 4086.2471 -4005.0271 4085.9429 C
-4004.8936 4086.2913 -4004.4385 4085.9172 -4004.4905 4086.3843 C
-4004.4121 4086.5059 -4004.6855 4086.0742 -4004.8545 4086.3545 C
-4005.2705 4086.7896 -4004.0928 4086.7373 -4004.6111 4087.1509 C
-4003.9519 4086.823 -4003.0833 4086.9646 -4002.4033 4086.5352 C
-4002.7839 4086.3438 L
-4002.4817 4086.4126 -4001.7664 4086.3086 -4001.7129 4086.5342 C
-4001.9375 4086.5889 -4002.2 4086.5833 -4002.4873 4086.6768 C
-4002.5012 4087.2041 -4001.7969 4086.6729 -4001.7649 4086.9993 C
-4000.9304 4086.1265 L
-4001.2959 4086.0967 L
-4001.0657 4085.7764 -4000.3015 4086.1631 -3999.7351 4086.2373 C
-4000.0601 4086.9592 -4000.5896 4086.2559 -4001.1855 4086.5454 C
-4001.6184 4086.8186 -4000.9182 4087.2422 -4001.3279 4087.4153 C
-4001.2217 4087.5833 -4000.9543 4087.5632 -4000.8225 4087.3809 C
-4000.6609 4087.5127 L
-4001.0264 4088.1685 -4001.8457 4088.0225 -4002.3911 4088.5869 C
-4002.3433 4088.5166 -4002.3015 4088.4424 -4002.2864 4088.3662 C
-4002.7063 4088.1118 -4003.1328 4088.1221 -4003.5422 4088.2959 C
-4003.3257 4088.5022 -4003.24 4088.3623 -4003.1162 4088.2854 C
-4003.1008 4088.4478 -4003.4873 4088.5181 -4003.6335 4088.698 C
-4003.2527 4088.8894 -4003.5625 4089.0852 -4003.3215 4089.1934 C
-4003.5696 4089.3496 -4003.7705 4089.3037 -4004.0728 4089.2349 C
-4004.2295 4088.9873 -4003.9431 4088.8936 -4003.9751 4088.5686 C
-4004.2864 4088.7644 -4004.4287 4087.9873 -4004.8843 4088.3623 C
-4004.2783 4088.4993 -4005.0439 4089.0686 -4005.2527 4089.2876 C
-4005.1511 4089.3101 L
-4005.3433 4089.6909 -4005.5063 4089.7073 -4005.6392 4089.3584 C
-4005.3911 4089.2017 -4005.1511 4089.3101 -4005.2217 4088.9229 C
-4005.3855 4088.9395 -4005.5488 4088.9561 -4005.7344 4089.0728 C
-4005.5657 4088.7935 L
-4006.3799 4088.8743 L
-4006.5088 4089.2156 -4006.7241 4089.698 -4006.8369 4090.2017 C
-4007.0322 4089.8926 -4007.3042 4090.1504 -4007.4895 4090.2693 C
-4007.4033 4090.1272 L
-4007.7625 4089.8352 -4008.5615 4090.0791 -4008.6289 4090.3809 C
-4008.8855 4090.1118 -4006.8152 4088.4573 -4008.6289 4088.7373 C
-4009.3184 4088.7393 -4009.0583 4089.7017 -4009.4519 4090.0354 C
-4009.4297 4089.9375 -4009.4688 4089.8743 V
-4009.7705 4089.8037 -4009.8008 4090.1709 -4010.0488 4090.3262 C
-4009.8679 4090.4727 -4009.6057 4090.4792 -4009.5212 4090.3396 C
-4009.6121 4090.7432 -4010.1497 4090.3037 -4010.3809 4090.6221 C
-4010.0808 4090 -4010.9641 4090.3848 -4010.7312 4090.0652 C
-4011.3313 4089.6653 -4011.9729 4090.157 -4012.2881 4090.6155 C
-4012.6953 4089.8352 -4013.0022 4090.719 -4013.6631 4090.3584 C
-4013.5615 4090.3809 -4013.3772 4090.2644 -4013.2351 4090.3484 C
-4012.8584 4089.8535 -4013.9199 4090.0889 -4013.3401 4089.6353 C
-4013.4641 4089.7139 -4013.3489 4089.8982 -4013.2217 4089.8213 C
-4012.9993 4089.7654 -4012.7898 4089.5479 -4012.8457 4089.3223 C
-4013.3843 4088.8843 L
-4013.1963 4088.7644 L
-4014.0137 4088.1582 L
-4014.0359 4088.2571 -4013.9592 4088.3809 -4013.9199 4088.4429 C
-4014.8679 4088.1768 -4015.9519 4088.5142 -4016.7825 4088.4336 C
-4016.9385 4089.8311 -4018.8271 4089.0313 -4019.4983 4089.8894 C
-4019.3184 4089.4893 -4019.22 4088.782 -4019.3313 4088.4912 C
-4019.1816 4088.4326 -4018.8752 4087.8677 -4018.5359 4087.9854 C
-4018.4817 4088.21 -4018.0625 4088.4639 -4018.3323 4088.7207 C
-4017.3943 4088.5613 -4018.4592 4088.1079 -4018.1824 4087.5879 C
-4019.2217 4087.7234 -4019.8313 4088.5422 -4020.4873 4088.8711 C
-4020.5039 4088.7061 L
-4020.9993 4089.0181 L
-4020.5945 4089.1106 -4020.6145 4089.9031 -4021.1362 4089.6265 C
-4021.0728 4089.5869 L
-4021.3704 4089.2544 -4021.9895 4089.6455 -4022.4543 4089.594 C
-4022.7695 4090.0518 L
-4023.2351 4090 -4023.2551 4089.1475 -4023.4065 4088.6367 C
-4024.1362 4088.5767 -4024.5576 4089.2759 -4025.0759 4089.6909 C
-4025.3103 4089.3186 -4026.4033 4089.2312 -4025.8242 4088.7803 C
-4026.4824 4089.1079 -4026.3496 4091.1006 -4027.4785 4089.9966 C
-4027.1855 4089.6377 L
-4028.2649 4089.7124 -4029.8042 4090.4263 -4030.3015 4090.0486 C
-4029.9033 4088.7598 -4031.6497 4088.7373 -4031.8416 4087.4734 c
-4031.7881 4087.7622 -4032.1936 4087.8584 -4032.2527 4088.0127 C
-4032.3416 4087.8643 -4032.4895 4087.7207 -4032.6465 4087.9812 C
-4032.2256 4088.2349 -4032.9424 4089.2935 -4032.1377 4088.7832 C
-4032.5449 4089.6494 -4033.0696 4090.3262 -4033.9617 4090.2832 C
-4033.9482 4089.7559 L
-4033.2424 4089.9163 L
-4033.3137 4089.5269 -4032.9504 4089.5564 -4032.8015 4089.3772 C
-4034.1145 4089.0811 -4032.6296 4088.1431 -4033.9719 4088.2119 C
-4034.1016 4088.5537 -4034.0176 4088.4126 -4034.3665 4088.5479 C
-4034.2024 4088.5303 -4034.1729 4088.1672 -4034.4373 4088.1597 C
-4034.6912 4088.5811 L
-4035.1599 4087.7017 -4033.9153 4088.0088 -4034.3152 4087.3911 C
-4033.7969 4086.9771 -4032.8992 4086.7559 -4033.0664 4086.0833 C
-4033.9128 4085.8389 -4033.8279 4087.3433 -4034.7129 4087.0376 C
-4034.8071 4086.7515 L
-4035.1184 4086.9463 -4035.1687 4087.4102 -4035.3391 4087.6902 C
-4035.3545 4087.5269 -4035.4336 4087.4053 -4035.6335 4087.3584 C
-4036.1592 4088.0354 -4036.5081 4088.1685 -4036.9929 4088.9077 C
-4035.7024 4088.3535 -4035.8896 4089.4229 -4034.5576 4088.9287 C
-4034.7664 4089.1475 -4035.7041 4089.3076 -4035.7617 4090.0354 C
-4035.7493 4089.5078 L
-4036.1824 4089.782 -4036.6152 4090.0537 -4037.1592 4089.8799 C
-4036.8271 4089.5833 L
-4037.5481 4089.9502 -4038.0256 4088.782 -4038.5945 4089.6597 C
-4038.3936 4089.7073 -4038.2305 4089.6909 -4038.1064 4089.6106 c
-4038.4775 4089.8462 -4038.9431 4089.7935 -4039.3464 4089.7041 C
-4040.1809 4090.5752 L
-4040.1736 4090.3135 -4040.7024 4090.2979 -4040.4473 4089.8799 C
-4041.0481 4089.4785 -4041.3313 4090.2644 -4041.6785 4090.3955 C
-4042.2937 4089.8352 -4041.1455 4090.1455 -4041.0852 4089.4172 C
-4041.9329 4089.1729 -4042.8313 4089.3936 -4043.3096 4089.8677 C
-4043.1367 4089.9739 -4043.0527 4090.0652 -4043.0615 4090.1934 C
-4043.0872 4090.0269 -4043.4287 4090.0703 -4043.6191 4090.0652 C
-4043.75 4090.4077 L
-4044.0671 4090.1763 -4044.0225 4089.9739 -4043.7527 4089.7156 C
-4044.0559 4089.6494 -4044.4172 4090.3086 -4044.7295 4089.8145 C
-4044.2119 4089.4014 -4043.5522 4089.7617 -4043.2825 4089.5044 C
-4044.3643 4089.8423 -4044.3711 4088.4602 -4045.7424 4088.8955 C
-4045.7593 4088.7312 -4045.5271 4088.4126 -4045.7913 4088.4077 C
-4046.4033 4088.5342 -4045.9512 4089.1143 -4046.1423 4089.4951 C
-4045.6711 4089.282 -4045.4519 4089.4912 -4045.1785 4089.9236 C
-4045.3042 4090.2017 L
-4045.3232 4090.0576 -4045.6191 4090.0493 -4045.7063 4089.9102 C
-4045.7825 4090.4771 L
-4045.7473 4089.8496 -4046.2207 4089.3716 -4046.5928 4089.6062 C
-4046.2168 4090.0613 -4046.3184 4090.0376 -4046.2161 4090.7522 C
-4046.7393 4091.4292 -4046.8064 4090.0869 -4047.3928 4090.8037 C
-4047.3489 4090.6021 -4046.8369 4090.4517 -4047.2793 4090.2979 C
-4047.6455 4090.2705 -4047.5967 4090.7593 -4047.8423 4090.9153 C
-4047.5657 4090.3926 -4047.6367 4090.0044 -4047.3369 4089.3843 C
-4046.6863 4089.3184 -4047.0745 4089.3911 -4046.4385 4089.1631 C
-4046.9768 4088.7212 L
-4046.4255 4088.6353 -4046.5759 4088.1233 -4046.5305 4087.9229 C
-4047.4719 4087.3911 -4047.24 4088.7168 -4047.8457 4088.5796 C
-4048.1377 4088.9385 -4047.2783 4088.6553 -4047.7351 4089.0303 C
-4048.3015 4088.9541 -4047.8643 4089.3716 -4048.5 4089.5977 C
-4048.3936 4089.3584 L
-4048.5879 4089.0479 -4048.78 4089.4307 -4049.0049 4089.4829 C
-4049.2522 4089.6416 -4048.7249 4091.2998 -4049.7417 4091.3352 C
-4049.6919 4091.1895 -4049.6736 4091.0967 -4049.6736 4091.0354 C
-4048.6816 4086.6455 L
-4049.7119 4086.6563 -4050.8992 4086.5342 -4052.0923 4086.2393 C
-4052.3733 4085.3809 -4051.2407 4085.5313 -4051.3137 4085.1455 C
-4050.7695 4085.3213 L
-4050.8 4085.6851 -4051.9097 4085.4336 -4051.4182 4086.0767 C
-4050.4573 4085.8145 -4050.0212 4086.2334 -4049.1096 4085.4829 C
-4049.3928 4084.6233 -4050.3103 4085.6353 -4050.9033 4084.9712 C
-4050.6543 4085.0269 -4050.4441 4084.9326 -4050.24 4084.8096 C
-4050.7969 4084.6997 -4051.3928 4084.5811 -4052.0264 4084.4478 C
-4052.1687 4084.6563 L
-4051.7417 4084.7522 -4051.4463 4084.8262 -4051.4082 4084.8572 C
-4051.9744 4084.782 -4052.4519 4085.2583 -4052.4895 4085.8877 C
-4052.3889 4085.9102 L
-4052.5935 4086.1062 L
-4052.7263 4086.0664 -4052.8591 4086.0269 -4052.9912 4085.9854 C
f
-4089.6936 4085.8369 m
-4089.6592 4085.7764 -4089.6321 4085.7061 -4089.6121 4085.6182 c
-4089.6328 4085.71 -4089.6096 4085.7693 -4089.6936 4085.8369 C
f
0 D
-4041.9033 4083.8752 m
-4042.6584 4083.7832 -4043.4199 4083.6118 -4044.1455 4083.5354 C
-4042.8359 4084.7793 -4041.9153 4085.7207 -4044.1008 4085.6963 C
-4044.2439 4085.7854 L
-4043.9583 4085.9385 -4043.4656 4085.9573 -4043.0022 4085.8672 C
-4042.6272 4085.4263 -4041.4172 4083.8062 -4041.4304 4083.6631 C
-4041.5632 4083.3145 -4041.7568 4083.6953 -4041.9983 4083.5889 C
-4041.9033 4083.8752 L
f
-4041.3665 4085.9583 m
-4040.9385 4086.0967 -4041.0359 4085.8213 -4040.9695 4085.573 C
-4041.1201 4085.6052 -4041.2705 4085.6377 -4041.4192 4085.6672 C
-4041.3623 4085.7295 -4041.3342 4085.8174 -4041.3665 4085.9583 C
f
1 D
-4040.9951 4085.3252 m
-4041.0432 4085.3186 -4041.0842 4085.3076 -4041.1057 4085.2744 C
-4040.9951 4085.3252 L
f
0 D
-4049.3191 4085.0103 m
-4049.3 4085.0044 -4049.2932 4084.9993 -4049.2751 4084.9951 C
-4049.3762 4084.9751 -4049.4775 4084.9573 -4049.5833 4084.9375 C
-4049.5422 4084.9771 -4049.4641 4085.0078 -4049.3191 4085.0103 C
f
-4048.4504 4085.6182 m
-4048.3489 4085.1641 L
-4048.4431 4085.1475 -4048.5393 4085.1294 -4048.6377 4085.1118 C
-4048.6052 4085.3174 -4048.5713 4085.4966 -4048.4504 4085.6182 C
f
-4045.6584 4087.1118 m
-4045.4824 4086.5664 -4044.8928 4086.5422 -4044.8567 4085.9126 C
-4044.8191 4085.7515 -4044.9431 4085.6895 -4045.0823 4085.6377 C
-4045.2375 4085.6233 -4045.4033 4085.6055 -4045.5791 4085.5852 C
-4045.5852 4085.6768 -4045.6201 4085.7622 -4045.6785 4085.8438 C
-4045.5049 4085.9229 -4045.3889 4086.0791 -4045.4592 4086.4646 C
-4045.9055 4085.6233 -4045.8591 4087.0652 -4046.3416 4086.8496 C
-4046.4951 4087.2935 -4045.8047 4087.2896 -4045.6584 4087.1118 C
f
1 D
-4008.5752 4085.4727 m
-4008.5615 4085.5269 -4008.5144 4085.6685 -4008.4482 4085.8438 C
-4008.7881 4086.1553 L
-4009.3943 4086.0181 -4009.8799 4085.1143 -4010.4255 4085.8916 C
-4010.6809 4085.6963 -4010.8176 4085.2832 -4010.9482 4084.9429 C
-4010.8232 4084.9683 -4010.7063 4085.0015 -4010.6089 4085.0537 C
-4009.0791 4083.9153 -4009.8113 4086.2544 -4008.5752 4085.4727 C
f
0 D
-4015.5449 4084.3643 m
-4015.4824 4084.3252 -4015.46 4084.2227 Y
-4016.8145 4085.3772 -4017.9297 4085.7119 -4018.6599 4085.6672 C
-4018.5183 4086.1252 -4017.8633 4086.4792 -4017.5522 4086.6685 C
-4017.8279 4087.1902 L
-4018 4086.7803 L
-4018.4785 4087.2544 L
-4018.3447 4087.6052 -4017.9583 4087.5313 -4017.7 4087.8013 C
-4017.6775 4087.7017 -4016.8503 4087.0933 -4016.6191 4086.7725 C
-4017.28 4086.4121 L
-4017.1016 4086.5576 -4016.2249 4086.4375 -4015.8772 4086.3037 C
-4015.8704 4086.0422 -4016.4695 4085.6392 -4016.5449 4086.2073 C
-4016.6162 4085.8186 -4015.9255 4085.8145 -4016.3623 4085.3982 C
-4015.8447 4084.9854 -4015.0212 4085.3311 -4014.6392 4085.5225 C
-4014.5745 4086.1753 L
-4014.1553 4086.4287 -4014.2913 4085.3894 -4013.7932 4085.7661 C
-4014.4055 4085.8936 -4013.6897 4086.4812 -4014.1768 4086.5303 C
-4014.0212 4086.7764 -4014.1736 4087.219 -4013.6855 4087.1709 C
-4013.2793 4086.3076 -4013.1711 4087.7119 -4012.7871 4086.9502 C
-4012.5305 4087.219 -4013.0632 4087.469 -4012.5583 4087.5852 C
-4011.9792 4087.1316 -4012.0127 4086.8062 -4011.9768 4086.178 C
-4012.5183 4086.0022 -4012.5852 4086.9951 -4013.0281 4086.8423 C
-4012.1472 4085.7661 L
-4012.3096 4085.6143 -4012.4297 4085.5977 -4012.5305 4085.6416 C
-4012.3535 4085.5791 -4012.2031 4085.4197 -4012.0745 4085.1997 c
-4012.0012 4085.0767 -4011.9336 4084.9712 -4011.8711 4084.8809 C
-4012.3704 4084.8752 -4012.8137 4084.8599 -4012.8921 4084.5923 C
-4012.8232 4084.2876 L
-4013 4084.0078 -4013.2881 4084.2271 -4013.4209 4084.4502 C
-4013.8679 4084.4829 -4014.3145 4084.9077 -4014.4121 4084.5132 C
-4014.2424 4084.2344 L
-4014.7922 4084.3223 -4014.8535 4084.3604 -4015.5449 4084.3643 C
f
-4033.5625 4083.6709 m
-4033.2295 4084.7876 -4032.8623 4085.7744 -4031.3081 4085.5791 C
-4031.4304 4085.6563 L
-4030.6472 4086.3572 -4029.9033 4084.7295 -4028.9504 4085.5078 C
-4029.4128 4085.9287 -4029.3879 4085.8894 -4029.8984 4086.8535 C
-4029.4023 4086.5376 L
-4029.5398 4087.1455 -4029.0449 4086.8311 -4028.6809 4086.8599 C
-4029.0022 4087.5833 L
-4029.2207 4087.3752 -4029.7871 4087.2998 -4029.7705 4087.4646 C
-4029.6465 4087.3848 -4030.5183 4086.5518 -4030.9919 4086.7622 C
-4030.9431 4087.2522 -4029.9431 4087.0537 -4030.3896 4087.8545 C
-4029.9961 4087.5181 -4029.9473 4088.0066 -4029.5359 4087.8352 C
-4029.9304 4088.1709 -4029.6335 4088.5022 -4029.9272 4088.8599 C
-4029.2527 4088.6934 L
-4029.2351 4088.8562 -4030.2351 4089.0557 -4029.6824 4089.6582 C
-4029.4121 4089.4014 -4028.6904 4089.7234 -4028.6775 4089.1963 C
-4028.6609 4089.3584 L
-4028.1553 4089.4727 -4028.4385 4088.6118 -4027.8176 4088.9126 C
-4027.8103 4088.6475 -4027.9287 4088.4639 -4028.1511 4088.5181 C
-4028.3391 4088.6353 -4028.3679 4088.9993 -4028.7551 4089.0728 C
-4028.9287 4088.6597 -4028.2881 4089.1243 -4028.5569 4088.4263 c
-4028.6904 4088.0791 -4029.5791 4088.7261 -4029.2959 4087.9424 C
-4028.7913 4088.0557 L
-4028.7783 4087.5269 -4028.4128 4087.5576 -4028.4231 4087.1316 C
-4028.1145 4086.9375 -4027.8232 4087.5313 -4027.5081 4087.0728 C
-4027.3772 4086.7312 -4027.6057 4086.0967 -4027.0842 4086.3733 C
-4026.6768 4087.1543 -4025.4761 4087.0022 -4025.0264 4086.8894 C
-4024.6328 4086.5537 L
-4024.6663 4086.2295 -4025.3848 4086.5977 -4025.1321 4086.1768 C
-4024.5183 4086.0493 L
-4024.5657 4086.2522 L
-4024.3623 4086.2979 -4024.1543 4086.0796 -4023.9688 4085.9639 C
-4024.1599 4086.3438 -4024.6023 4086.1909 -4024.5144 4086.7412 C
-4024.2263 4086.8496 -4024.1824 4087.0537 -4023.9172 4086.9478 C
-4023.9751 4086.9873 -4024.0249 4087.0413 -4024.0176 4087.1182 C
-4023.4343 4087.3562 -4023.4543 4086.5022 -4023.3081 4086.323 c
-4022.7217 4085.6084 -4023.8992 4085.6597 -4023.8242 4085.0933 C
-4022.1121 4084.7913 L
-4022.2583 4084.969 -4022.4055 4085.1475 -4022.3503 4085.3733 C
-4021.9304 4085.6272 -4022.3408 4085.7998 -4021.7512 4085.7732 C
-4021.7932 4085.0215 -4021.0088 4085.3047 -4020.5923 4084.8701 C
-4020.3977 4085.178 -4020.3577 4085.2393 -4020.7832 4085.2493 C
-4020.7344 4085.7373 -4020.1631 4085.5493 -4019.96 4085.594 C
-4019.8423 4085.4727 -4019.6416 4085.4019 -4019.5144 4085.2935 C
-4019.6848 4085.0493 -4019.6121 4084.7437 -4019.2432 4084.5354 C
-4019.2217 4084.4336 L
-4019.8264 4084.2998 -4020.7664 4083.7661 -4021.1455 4084.2661 C
-4021.0383 4084.0244 L
-4021.7383 4083.6021 -4022.5615 4084.9014 -4022.8843 4083.9792 C
-4022.8545 4083.6143 -4023.0249 4083.8955 -4023.0127 4083.3677 C
-4023.5281 4083.7803 L
-4023.4209 4083.5413 L
-4024.2976 4083.6597 L
-4024.2744 4083.5613 L
-4024.6912 4084.0391 -4025.0176 4084.4287 -4025.2783 4084.7471 C
-4025.2793 4084.9771 -4025.2522 4085.0479 -4025.3911 4085.2173 C
-4025.5305 4085.3311 -4025.6362 4085.3484 -4025.7305 4085.3184 C
-4025.7312 4085.3186 -4025.7312 4085.3186 -4025.7312 4085.3213 C
-4025.7312 4085.3186 -4025.7312 4085.3186 -4025.7312 4085.3184 C
-4025.9463 4085.2515 -4026.0896 4084.9209 -4026.3545 4084.7854 C
-4025.5393 4084.7295 L
-4025.4729 4084.3389 -4025.5422 4083.9336 -4025.9417 4083.6597 C
-4025.7783 4083.6455 -4025.71 4083.3406 -4025.9121 4083.2959 C
-4025.9343 4083.3975 -4026.4463 4083.5454 -4026.2512 4083.8562 C
-4027.0256 4083.9993 -4028.2793 4082.9734 -4029.4551 4083.7156 C
-4028.6104 4083.2693 -4030.1321 4083.1924 -4029.1943 4083.0313 C
-4029.8489 4082.407 -4029.7576 4083.6475 -4030.4248 4083.5493 C
-4030.4817 4083.3252 -4030.0615 4083.5791 -4029.9082 4083.1353 C
-4031.0176 4082.8853 -4031.78 4084.1455 -4032.8533 4083.9561 C
-4032.8992 4083.4688 L
-4033.1023 4083.5313 -4033.3279 4083.6006 -4033.5625 4083.6709 C
f
-4035.6855 4084.2781 m
-4035.8921 4084.3333 -4036.1016 4084.3894 -4036.3145 4084.4463 C
-4036.2937 4084.4541 -4036.2744 4084.4541 -4036.2527 4084.4602 C
-4036.8733 4084.8535 L
-4036.4919 4085.0435 -4036.2407 4085.5791 -4036.7744 4085.8286 C
-4036.7295 4085.6272 -4036.8855 4085.3799 -4036.7 4085.2622 C
-4037.0576 4084.969 -4037.8423 4084.6863 -4037.6377 4085.4229 C
-4036.9504 4084.7271 -4037.4775 4086.3604 -4036.9375 4085.8438 C
-4037.2273 4086.323 -4037.5144 4086.1079 -4037.7881 4086.3223 C
-4037.5032 4085.9209 -4037.8545 4085.4126 -4038.2825 4085.2212 C
-4038.4688 4085.3396 -4038.9729 4085.2261 -4039.2825 4085.4209 C
-4039.1721 4085.8711 -4039.4417 4086.1289 -4038.9373 4086.2422 C
-4039.1223 4086.3604 -4039.4087 4086.4541 -4039.7295 4086.2227 C
-4039.6023 4086.1455 -4039.3799 4086.0894 -4039.3953 4085.927 C
-4039.6023 4085.5127 -4039.8447 4085.5313 -4039.9785 4085.3545 C
-4040.0852 4085.3799 -4040.1929 4085.4019 -4040.2976 4085.4263 C
-4040.2664 4085.4646 -4040.2393 4085.5166 -4040.22 4085.5811 C
-4040.5745 4085.9785 L
-4040.1023 4085.7661 -4040.3562 4086.1863 -4040.3623 4086.4502 c
-4040.3496 4085.9229 -4040.6663 4086.3809 -4040.8279 4086.3982 C
-4040.4768 4086.9561 L
-4040.6465 4087.2349 -4041.0759 4086.5537 -4040.9873 4087.1052 C
-4040.2424 4087.3262 -4039.9561 4087.2312 -4039.2825 4087.0652 C
-4039.5559 4086.6328 L
-4038.7959 4086.3267 -4039.0872 4087.3752 -4038.2344 4087.3545 C
-4037.8799 4086.9592 -4036.9519 4087.3267 -4036.9343 4086.5352 C
-4037.0413 4086.7764 -4036.4033 4087.2393 -4036.1111 4086.8809 C
-4035.7881 4086.157 -4034.8113 4086.0596 -4035.1072 4085.7295 C
-4035.3711 4085.7207 -4035.7263 4086.1182 -4035.9385 4085.6475 C
-4035.4265 4085.4966 L
-4035.7625 4085.1021 L
-4035.5889 4085.2437 -4035.6057 4084.8584 -4035.6855 4084.2781 C
f
1 D
-4047.1455 4079.8389 m
-4047.1511 4079.8352 -4047.1584 4079.8333 -4047.1653 4079.8286 C
-4047.1577 4079.8311 -4047.1504 4079.8311 -4047.1433 4079.8311 C
-4047.1455 4079.8389 L
f
*U
0 D
-4000.9968 4083.8311 m
-4000.8496 4083.6509 -4000.4856 4083.6807 -4000.5569 4083.2935 C
-4000.5481 4083.719 -4001.2073 4083.3584 -4000.9968 4083.8311 C
f
-4000.5615 4084.2483 m
-4000.5359 4084.1465 -4000.5537 4083.9829 -4000.3904 4083.9683 C
-4000.8401 4084.0767 L
-4000.5615 4084.2483 L
f
-4000.1052 4087.1597 m
-3999.8733 4086.8423 -3999.7263 4086.6631 -3999.3623 4086.6919 C
-3999.2256 4087.7312 -3999.9583 4086.9822 -4000.1233 4087.9517 C
-3999.4561 4088.0493 -3999.2512 4087.1416 -3998.7024 4087.0537 C
-3998.9744 4086.6201 -4000.0852 4086.3701 -4000.1052 4087.1597 C
f
-4000.4016 4088.4734 m
-4000.0305 4088.2393 L
-4000.0671 4088.178 L
-4000.4385 4088.4126 L
-4000.4016 4088.4734 L
f
-4008.4385 4079.4429 m
-4008.4719 4079.1182 -4008.7031 4079.4385 -4008.8271 4079.5166 C
-4008.7263 4079.5376 -4008.5852 4079.6233 -4008.4385 4079.4429 C
f
-4081.3503 4079.1052 m
-4084.1809 4079.4185 L
-4083.3665 4079.3369 -4082.6145 4079.2959 -4081.3503 4079.1052 C
f
-4017.8313 4081.5664 m
-4017.0713 4081.2603 -4016.7336 4080.6997 -4015.9592 4080.5576 C
-4016.9775 4079.9031 -4017.3042 4081.5796 -4018.1592 4080.9092 C
-4017.8313 4081.5664 L
f
-4017.5632 4078.9751 m
-4017.4373 4079.5869 -4018.1497 4079.6919 -4018.0393 4080.1404 C
-4017.5271 4079.9912 -4017.8008 4079.5576 -4017.3359 4079.6104 C
-4017.5632 4078.9751 L
f
-4014.1191 4089.0889 m
-4014.3496 4089.407 L
-4014.1641 4089.2913 L
-4014.1191 4089.0889 L
f
-4021.0271 4079.5181 m
-4020.9431 4079.3799 L
-4021.3242 4079.1863 L
-4021.0271 4079.5181 L
f
-4020.8591 4079.2393 m
-4020.9431 4079.3799 L
-4020.9431 4079.3799 L
-4020.8591 4079.2393 L
f
-4014.4153 4090.4014 m
-4014.0728 4090.5313 L
-4013.9033 4090.2515 L
-4014.4153 4090.4014 L
f
-4017.4385 4087.1187 m
-4017.1321 4086.9229 L
-4017.1929 4086.9602 -4017.6121 4086.7092 -4017.4385 4087.1187 C
f
-4023.3545 4079.2583 m
-4023.7273 4079.4932 L
-4023.6892 4079.5537 L
-4023.3176 4079.3186 L
-4023.3545 4079.2583 L
f
-4019.8369 4088.8057 m
-4019.6252 4089.2759 -4020.4482 4088.9326 -4020.0127 4089.3484 C
-4019.6252 4089.2759 -4019.7825 4089.0303 -4019.8369 4088.8057 C
f
-4024.3352 4085.6155 m
-4024.3855 4085.6155 -4024.4385 4085.6328 -4024.4895 4085.6851 C
-4024.4287 4085.6653 -4024.3777 4085.6404 -4024.3352 4085.6155 C
f
-4024.3352 4085.6155 m
-4024.1729 4085.6155 -4024.0105 4085.7959 -4023.8992 4085.6597 C
-4024.1016 4085.4473 -4024.1753 4085.5269 -4024.3352 4085.6155 C
f
-4026.1953 4085.7256 m
-4026.0481 4085.7593 L
-4026.1985 4085.9912 -4026.1272 4085.9573 -4025.9929 4085.7705 C
-4025.8369 4085.7544 -4025.8457 4085.6055 -4025.8271 4085.5039 C
-4025.7959 4085.4473 -4025.7649 4085.3853 -4025.7312 4085.3213 C
-4025.7793 4085.3809 -4025.8225 4085.4402 -4025.8591 4085.4912 C
-4026.1008 4085.4873 -4026.2483 4085.5103 -4026.1953 4085.7256 C
f
-4033.1052 4077.7998 m
-4032.5615 4077.9751 -4032.4209 4078.0596 -4032.4504 4078.4248 C
-4031.9343 4078.5413 -4032.0144 4077.9126 -4031.7031 4077.7661 C
-4032.2871 4077.8369 -4032.4065 4077.6685 -4033.1052 4077.7998 C
f
-4031.7031 4077.7661 m
-4031.6377 4077.7593 -4031.5752 4077.7515 -4031.4993 4077.7373 C
-4031.5842 4077.7261 -4031.6472 4077.7412 -4031.7031 4077.7661 C
f
-4024.0212 4089.7173 m
-4024.3591 4090.2759 L
-4024.2351 4090.198 L
-4024.0212 4089.7173 L
f
-4033.9121 4077.6155 m
-4033.8113 4077.6392 -4033.6497 4077.6233 -4033.5703 4077.7483 C
-4033.5413 4077.3809 -4034.0127 4077.5933 -4033.9121 4077.6155 c
f
-4031.8152 4084.7744 m
-4031.76 4084.9983 -4031.4121 4084.8643 -4031.2705 4084.9502 C
-4031.4736 4084.9031 -4031.6392 4084.23 -4031.8152 4084.7744 C
f
-4035.4719 4079.1221 m
-4035.3711 4079.1455 -4035.2161 4079.3911 -4035.2832 4079.6934 C
-4035.1367 4079.5142 -4034.9385 4078.8701 -4035.4719 4079.1221 C
f
-4032.8088 4084.7092 m
-4032.7312 4084.8333 L
-4032.3591 4084.5977 L
-4032.8088 4084.7092 L
f
-4031.4817 4090.1006 m
-4031.0632 4089.6653 -4032.1455 4089.0493 -4031.4248 4088.6807 C
-4032.3545 4088.2246 -4031.3535 4089.2979 -4032.0393 4089.2271 C
-4031.6377 4089.3743 -4031.4409 4089.9253 -4031.4817 4090.1006 C
f
-4032.0393 4089.2271 m
-4032.0977 4089.2041 -4032.1609 4089.1909 -4032.2295 4089.1895 C
-4032.1536 4089.21 -4032.0923 4089.2212 -4032.0393 4089.2271 C
f
-4037.9287 4086.469 m
-4037.8679 4086.4236 -4037.8264 4086.3743 -4037.7881 4086.3223 C
-4037.8359 4086.3584 -4037.8816 4086.4031 -4037.9287 4086.469 C
f
-4034.2295 4089.5869 m
-4033.6023 4088.9326 L
-4034.0212 4089.3677 -4035.0752 4089.3413 -4035.0095 4089.9927 C
-4034.6682 4090.1252 -4034.2576 4089.9517 -4034.0889 4089.6709 C
-4034.2295 4089.5869 L
f
-4041.4287 4077.7764 m
-4041.1577 4077.5181 L
-4041.4961 4077.4424 L
-4041.3992 4077.5398 -4041.5745 4078.0181 -4041.4287 4077.7764 C
f
-4041.5615 4077.4287 m
-4041.4961 4077.4424 L
-4041.5105 4077.4263 -4041.5313 4077.4197 -4041.5615 4077.4287 C
f
-4036.7424 4086.1543 m
-4036.5398 4086.1997 -4036.3777 4086.1814 -4036.1929 4086.0664 C
-4036.2695 4085.9429 -4036.7744 4085.8286 -4036.7424 4086.1543 C
f
-4043.3369 4078.7234 m
-4042.8896 4078.6118 L
-4043.3777 4078.6597 L
-4043.3369 4078.7234 L
f
-4045.4241 4077.6155 m
-4045.5012 4077.4932 L
-4045.8721 4077.7271 L
-4045.7937 4077.8496 L
-4045.4241 4077.6155 L
f
-4042.6943 4090.4326 m
-4042.3911 4090.5022 -4042.1543 4089.9172 -4042.2336 4089.7935 C
-4042.8215 4089.8186 L
-4042.6721 4090.3311 -4042.6584 4089.8037 -4042.3176 4089.9336 C
-4042.6943 4090.4326 L
f
-4060.9153 4078.573 m
-4060.7839 4078.2312 -4060.1409 4078.4292 -4060.1072 4078.7544 C
-4060.1936 4078.8955 -4060.5422 4079.0303 -4060.3232 4079.2373 C
-4059.8145 4078.3975 L
-4059.1377 4078.9209 -4060.3289 4079.5015 -4060.6631 4079.7979 C
-4059.9736 4079.9063 -4059.7693 4079.3545 -4059.0359 4079.3572 C
-4059.2522 4079.282 -4059.3889 4079.0728 -4059.5032 4078.8926 C
-4059.5281 4078.3013 -4058.8447 4078.5632 -4058.3562 4078.5166 C
-4058.6672 4078.2598 -4058.4873 4078.0435 -4058.2607 4077.8113 C
-4058.22 4077.7935 -4058.1929 4077.7593 -4058.1736 4077.719 C
-4058.1472 4077.6919 -4058.1223 4077.6653 -4058.0967 4077.6367 C
-4058.1553 4077.6377 L
-4058.1511 4077.5713 -4058.1641 4077.4912 -4058.2063 4077.3809 C
-4058.6162 4077.5537 -4058.9297 4077.0596 -4059.1936 4077.0518 C
-4058.9329 4078.0132 -4060.0923 4077.2744 -4060.4241 4077.5703 C
-4060.8071 4077.6653 L
-4060.9504 4077.6672 L
-4060.9792 4077.5613 -4060.9385 4077.4292 -4060.72 4077.2393 C
-4060.9023 4077.4287 -4061.5105 4077.3623 -4061.4543 4077.6709 C
-4062.8423 4077.6846 L
-4062.8855 4077.6455 -4062.9287 4077.5967 -4062.9607 4077.5269 C
-4063.0088 4077.5879 -4063.0168 4077.6377 -4063.0105 4077.6863 C
-4069.0576 4077.7483 L
-4068.7593 4077.823 -4068.5012 4078.0435 -4068.1936 4078.1494 C
-4068.6553 4078.7876 -4067.6892 4078.2644 -4067.8247 4078.8677 C
-4068.0322 4079.0869 -4068.3359 4079.0181 -4068.5168 4078.8716 C
-4068.5842 4079.1763 -4068.3264 4079.4463 -4068.3562 4079.8101 C
-4067.5935 4080.1934 -4067.4768 4078.7349 -4066.7312 4078.9573 C
-4066.7607 4079.3223 -4066.9912 4079.6416 -4066.5032 4079.5923 C
-4066.6272 4079.6709 L
-4065.8457 4079.2622 -4066.0183 4080.4966 -4065.5264 4079.4951 C
-4065.5393 4080.0225 L
-4065.1848 4079.6252 -4064.4951 4079.6221 -4064.1064 4079.5493 C
-4064.1296 4079.6509 L
-4063.0393 4079.0479 -4063.5176 4079.5225 -4062.2932 4079.2705 C
-4062.8567 4079.8853 L
-4062.4343 4080.1394 -4062.3391 4079.4712 -4062.0359 4079.5398 C
-4062.0576 4079.6416 -4061.9873 4080.0269 -4062.2737 4080.1233 C
-4060.7881 4079.1851 L
-4060.4336 4078.7876 -4060.8601 4078.7979 -4060.9153 4078.573 C
f
-4059.0359 4079.3572 m
-4058.9573 4079.3853 -4058.8679 4079.3975 -4058.7625 4079.3772 C
-4058.8643 4079.3604 -4058.9519 4079.3572 -4059.0359 4079.3572 C
f
-4069.4824 4077.7522 m
-4069.0576 4077.7483 L
-4069.1892 4077.7156 -4069.3264 4077.7061 -4069.4824 4077.7522 C
f
-4056.9065 4078.2061 m
-4057.1641 4077.9336 -4056.7136 4077.8247 -4056.6687 4077.6221 C
-4057.5913 4077.6316 L
-4057.5872 4077.8352 -4057.6785 4078.0625 -4057.6599 4078.2483 C
-4056.9065 4078.2061 L
f
-4057.8584 4077.2493 m
-4057.8896 4077.3894 -4057.9873 4077.5166 -4058.0967 4077.6367 C
-4057.5913 4077.6316 L
-4057.5945 4077.4792 -4057.6511 4077.3406 -4057.8584 4077.2493 C
f
-4057.7607 4088.0894 m
-4057.9241 4088.1079 L
-4058.1711 4088.2644 L
-4057.7607 4088.0894 L
f
-4060.3152 4087.1963 m
-4060.1201 4087.5044 -4059.75 4087.2705 -4059.6262 4087.1924 C
-4060.0527 4087.2017 -4059.8679 4087.0852 -4060.3152 4087.1963 C
f
-4059.7881 4090.4966 m
-4060.1992 4090.6709 L
-4060.1609 4090.7312 L
-4059.7881 4090.4966 L
f
-4072.6223 4079.8279 m
-4072.6897 4079.8396 -4072.7551 4079.8484 -4072.8232 4079.8623 C
-4072.7312 4079.8643 -4072.6711 4079.8496 -4072.6223 4079.8279 C
f
-4069.0945 4079.3252 m
-4070.0752 4078.7334 -4068.4519 4078.8333 -4068.76 4078.0752 C
-4069.2937 4078.3262 L
-4069.2483 4078.1233 L
-4069.8992 4078.1895 L
-4069.7656 4078.5376 -4069.6653 4078.5591 -4069.6943 4078.9248 C
-4070.5632 4078.782 -4069.9683 4078.4912 -4070.6057 4078.0303 C
-4071.5769 4078.0967 L
-4071.4983 4077.9873 L
-4071.5801 4077.9951 -4071.6162 4078.0413 -4071.6443 4078.1006 C
-4074.9172 4078.3279 L
-4075.5127 4078.6182 -4074.5879 4078.9854 -4075.0271 4079.5225 C
-4074.3369 4079.5212 -4073.3113 4079.9102 -4073.2527 4079.1814 C
-4073.2759 4079.282 -4073.3215 4079.4829 -4073.1816 4079.5686 C
-4072.7825 4078.969 L
-4073.1631 4078.7781 L
-4072.7617 4078.1807 -4071.4656 4078.3135 -4071.2312 4078.6846 C
-4071.9683 4078.8887 -4071.5984 4079.6084 -4072.6252 4079.2173 C
-4072.5791 4079.4019 -4072.3911 4079.7271 -4072.6223 4079.8279 C
-4071.4192 4079.6155 -4070.3408 4079.9478 -4069.0945 4079.3252 C
f
-4081.1631 4079.6763 m
-4081.1536 4079.6104 L
-4081.1753 4079.6455 -4081.1824 4079.6719 -4081.1631 4079.6763 C
f
-4080.7593 4079.7661 m
-4080.1729 4079.0518 L
-4081.0872 4079.1094 L
-4081.1536 4079.6104 L
-4081.0728 4079.4829 -4080.7522 4079.2295 -4080.6279 4079.4253 C
-4080.7593 4079.7661 L
f
-4079.4919 4078.6201 m
-4079.9641 4078.8333 -4079.9385 4079.4229 -4079.6809 4079.6919 C
-4080.1145 4079.9646 -4079.9097 4079.0576 -4080.2083 4079.6807 C
-4080.1985 4080.1062 -4079.6641 4079.8562 -4079.5413 4079.7781 C
-4079.4919 4078.6201 L
f
-4076.0081 4078.9307 m
-4076.1409 4079.1753 L
-4075.8137 4079.2393 L
-4076.0081 4078.9307 L
f
-4076.1409 4079.1753 m
-4076.4656 4079.1094 L
-4076.4431 4079.2913 -4076.4209 4079.4683 -4076.3679 4079.5923 C
-4076.1409 4079.1753 L
f
-4077.3176 4078.9395 m
-4077.4551 4078.8955 -4077.6072 4078.8623 -4077.7922 4078.8462 C
-4077.3176 4078.9395 L
f
-4076.9463 4079.0894 m
-4076.9573 4079.0127 L
-4077.3176 4078.9395 L
-4077.1848 4078.9854 -4077.0657 4079.0354 -4076.9463 4079.0894 C
f
-4076.4656 4079.1094 m
-4076.5183 4078.6963 -4076.5801 4078.2622 -4077.0496 4078.3772 C
-4076.9573 4079.0127 L
-4076.4656 4079.1094 L
f
-4062.7783 4089.8743 m
-4063.1497 4090.1079 L
-4063.1104 4090.1719 L
-4062.7393 4089.9375 L
-4062.7783 4089.8743 L
f
-4064.9209 4089.4966 m
-4065.0127 4089.5686 -4065.0823 4089.6455 -4065.1455 4089.7234 C
-4065.0488 4089.678 -4064.9719 4089.6094 -4064.9209 4089.4966 C
f
-4066.5137 4092.3186 m
-4066.9504 4091.9031 -4065.9111 4091.7693 -4066.72 4091.5852 C
-4066.7913 4091.198 -4066.4121 4090.699 -4066.0313 4090.8916 C
-4066.0615 4091.2559 -4066.4023 4091.1252 -4066.1682 4091.4966 C
-4065.9153 4091.0752 -4065.8191 4091.3623 -4065.9072 4090.8135 C
-4065.4817 4090.4712 -4065.4343 4090.0811 -4065.1455 4089.7234 C
-4065.6599 4089.9646 -4066.74 4089.4019 -4067.3928 4090.1062 C
-4067.7527 4090.7661 -4067.5344 4091.6672 -4067.5359 4092.6201 C
-4067.4817 4092.8438 -4066.5488 4092.9502 -4066.5137 4092.3186 C
f
-4065.8264 4093.2705 m
-4065.6243 4093.3174 -4065.5625 4093.2793 -4065.4385 4093.1997 C
-4065.4719 4092.8743 -4065.6631 4093.2559 -4065.8264 4093.2705 C
f
-4070.4719 4086.094 m
-4070.5105 4086.2295 -4070.8762 4086.3975 -4070.7976 4086.6316 C
-4070.2432 4086.4602 L
-4070.3733 4086.4385 -4070.4192 4086.2725 -4070.4719 4086.094 C
f
-4070 4086.3877 m
-4070.2432 4086.4602 L
-4070.1824 4086.4727 -4070.1072 4086.4541 -4070 4086.3877 C
f
-4070.4983 4086.0093 m
-4070.4895 4086.0376 -4070.4817 4086.0664 -4070.4719 4086.094 C
-4070.4641 4086.0652 -4070.4656 4086.0354 -4070.4983 4086.0093 C
f
-4078.6631 4078.7017 m
-4078.6553 4078.4402 -4078.9023 4078.5967 -4079.0264 4078.6743 C
-4078.9255 4078.6963 -4078.7839 4078.782 -4078.6631 4078.7017 C
f
-4087.9641 4079.7312 m
-4088.1824 4079.5225 L
-4088.1052 4079.6475 -4088.0657 4079.7092 -4087.9641 4079.7312 C
f
-4091.3279 4086.8765 m
-4091.3342 4086.927 -4091.3503 4086.969 -4091.3721 4087.0093 C
-4091.3503 4086.9771 -4091.3352 4086.9336 -4091.3279 4086.8765 c
f
-4091.3721 4087.0093 m
-4091.5212 4087.2271 -4091.9817 4086.8887 -4092.1472 4087.219 C
-4092.1262 4087.1187 L
-4092.4343 4087.3145 L
-4092.1455 4087.2854 -4091.5393 4087.3267 -4091.3721 4087.0093 C
f
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7963.4521 7964.5977 m
-7571.6909 7964.5977 L
-7571.6909 7872.9082 L
-7963.4521 7872.9082 L
-7963.4521 7964.5977 L
n
0 O
0 0 0 1 0 0 0 Xa
1 XR
-7576.3535 7906.9209 m
-7578.1113 7906.9209 -7697.7817 7909.0918 -7773.6519 7910.4717 C
-7794.4663 7909.5352 -7815.2529 7908.2227 -7836.0547 7906.5024 C
-7838.5327 7906.1514 -7841.3472 7905.7949 -7842.8584 7905.6006 c
-7843.7114 7905.4863 -7844.5732 7905.3857 -7845.4375 7905.2935 C
-7844.9829 7905.0601 -7844.54 7904.7998 -7844.1167 7904.4941 C
-7843.25 7903.7324 -7842.3955 7902.8325 -7841.8735 7901.4541 C
-7841.8979 7901.1685 -7841.6997 7900.8193 -7841.6523 7900.5293 c
-7841.5532 7899.9121 -7841.6382 7899.1631 -7841.7319 7898.6274 c
-7841.7939 7898.2725 -7841.9551 7898.0254 -7842.0259 7897.731 c
-7842.0488 7897.6348 -7841.9785 7897.5762 -7842.0059 7897.5024 c
-7842.1396 7897.1484 -7842.5313 7896.5518 -7842.7539 7896.2266 c
-7842.8579 7896.0762 -7842.9873 7895.9775 -7843.1035 7895.8193 c
-7843.1196 7895.7969 -7843.0669 7895.7354 -7843.0928 7895.7061 c
-7843.6484 7895.0664 -7844.4312 7894.5415 -7845.3955 7894.0762 c
-7845.4546 7894.0508 -7845.4639 7894.1445 -7845.5366 7894.0869 C
-7845.8213 7893.9658 -7846.1143 7893.8535 -7846.3945 7893.7915 c
-7847.8965 7893.4629 -7849.7163 7893.8477 -7850.8027 7894.6328 c
-7851.7998 7895.3555 -7852.5308 7896.8623 -7852.4678 7898.0742 c
-7852.4126 7899.1094 -7851.6665 7900.2578 -7850.4458 7901.0352 c
-7849.3604 7901.7295 -7848.0479 7901.9834 -7847.2373 7901.3594 C
-7847.6499 7901.2295 -7847.9688 7901.0332 -7848.0811 7900.7529 C
-7848.0908 7900.4766 -7848.0967 7900.1992 -7847.8755 7899.8594 C
-7847.4517 7899.4863 -7846.7925 7899.2485 -7846.1235 7899.7158 c
-7845.1846 7900.3701 -7845.0728 7901.7891 -7846.0342 7902.5361 C
-7846.3086 7902.6406 -7846.5586 7902.8789 -7846.75 7902.9834 c
-7847.1826 7903.2188 -7847.5586 7903.3857 -7847.9751 7903.5435 c
-7849.0938 7903.9595 -7850.4839 7904.4185 -7851.5327 7904.5977 c
-7851.7114 7904.6289 -7851.8989 7904.6475 -7852.0806 7904.6738 C
-7855.4038 7904.3789 -7858.54 7904.0693 -7861.1416 7903.5264 C
-7861.1138 7903.5234 -7861.0908 7903.5244 -7861.0586 7903.5205 c
-7860.2378 7903.4199 -7859.6309 7903.2529 -7858.9043 7903.0137 c
-7858.6328 7902.9238 -7858.3184 7902.9121 -7858.0825 7902.8154 c
-7857.9985 7902.7852 -7857.9409 7902.6602 -7857.8472 7902.6133 c
-7857.5371 7902.4609 -7857.2129 7902.3662 -7856.8999 7902.1602 c
-7855.9097 7901.5059 -7854.8774 7900.3359 -7854.7617 7898.8682 C
-7854.9463 7897.8262 -7855.3643 7896.8525 -7856.5938 7896.0781 c
-7856.7217 7895.9961 -7856.8662 7895.96 -7856.9995 7895.8828 C
-7858.8516 7895.2168 -7860.5913 7896.3135 -7860.8066 7898.2061 C
-7860.7119 7898.3755 -7860.6499 7898.5527 -7860.6616 7898.7524 C
-7860.2939 7899.4492 -7858.9033 7900.0557 -7858.3057 7899.6143 C
-7858.6133 7899.5566 -7858.7495 7899.5254 -7858.8638 7899.2637 C
-7858.8892 7898.6074 -7858.0679 7898.4336 -7857.6528 7899.0176 C
-7857.4966 7899.7017 -7857.7676 7900.2529 -7858.2939 7900.8101 c
-7858.5068 7901.0361 -7858.7837 7901.1685 -7859.0566 7901.3545 c
-7859.4199 7901.6016 -7859.7495 7901.8828 -7860.1118 7902.0332 c
-7860.4385 7902.1685 -7860.8115 7902.2012 -7861.1445 7902.2891 c
-7861.2349 7902.3101 -7861.2969 7902.3613 -7861.3706 7902.3789 c
-7861.6274 7902.4336 -7861.8359 7902.5142 -7862.0879 7902.5469 c
-7862.4209 7902.5854 -7862.7739 7902.5488 -7863.1528 7902.5854 c
-7863.3398 7902.6055 -7863.5195 7902.6953 -7863.7144 7902.7109 c
-7863.8413 7902.7207 -7863.9722 7902.7207 -7864.1025 7902.7227 C
-7866.8135 7901.8213 -7869.0957 7900.6094 -7870.9814 7898.2793 c
-7874.6704 7893.7227 -7869.0415 7889.5566 -7867.9902 7893.5977 C
-7869.9668 7895.0361 -7873.5874 7898.1201 -7865.8892 7898.2471 C
-7857.6045 7896.7549 -7864.6982 7881.4922 -7874.6509 7885.5576 c
-7883.0151 7888.9746 -7879.1328 7897.6387 -7873.4658 7901.2935 c
-7864.9902 7906.7559 -7855.5376 7907.4922 -7845.7012 7907.5845 C
-7856.3862 7912.0488 -7870.9243 7909.4033 -7878.9897 7901.3809 c
-7883.1011 7897.2935 -7887.0435 7890.9912 -7885.8193 7884.8892 c
-7884.5742 7878.6816 -7878.1616 7884.4238 -7883.0957 7884.4424 C
-7882.8896 7890.0059 -7869.6387 7883.9648 -7875.9307 7875.8281 c
-7881.6011 7868.4922 -7891.5698 7876.5225 -7893.3242 7882.9482 c
-7899.0239 7903.8359 -7869.3545 7909.7129 -7855.3813 7910.4238 C
-7867.1143 7913.7754 -7883.3892 7911.2734 -7894.5547 7906.7852 c
-7898.9663 7905.0098 -7903.9707 7901.8926 -7906.5479 7897.7773 c
-7910.4619 7891.5264 -7903.4268 7887.2842 -7902.8955 7889.4033 c
-7902.4697 7891.0957 -7908.3765 7891.6235 -7903.8267 7894.6992 c
-7899.8091 7897.4185 -7896.2759 7891.2095 -7895.4619 7888.0781 c
-7891.6782 7873.5322 -7913.0601 7875.4609 -7915.3667 7889.1982 c
-7920.5103 7919.8267 -7874.3071 7913.4575 -7858.4902 7912.5928 C
-7858.7124 7912.7617 -7858.9331 7912.9185 -7859.1543 7913.0825 C
-7864.4346 7914.5854 -7869.6416 7916.7861 -7874.46 7919.5469 C
-7888.9546 7921.2813 -7901.7495 7910.8906 -7917.5913 7905.6152 c
-7926.5635 7902.6289 -7937.0933 7906.9277 -7945.2778 7902.3145 c
-7949.6235 7899.8545 -7952.6982 7897.2656 -7954.2959 7892.0518 C
-7955.9092 7883.1104 -7946.2979 7881.9717 -7948.1396 7886.6416 C
-7949.8428 7886.9688 -7949.1772 7885.8345 -7950.3354 7885.8418 C
-7954.2861 7889.5479 -7946.0244 7894.731 -7942.1606 7891.4316 c
-7935.4497 7885.7031 -7940.2563 7877.3325 -7947.0864 7875.0557 C
-7965.5703 7875.25 -7966 7897.8613 -7960.0474 7910.3594 c
-7944.2217 7943.5854 -7910.1445 7931.5825 -7882.5376 7924.5479 C
-7886.2817 7927.0732 -7888.8975 7930.6426 -7891.5747 7934.2158 c
-7896.2197 7940.4165 -7898.6694 7949.8545 -7890.0024 7953.8613 C
-7889.1616 7957.9834 -7887.6392 7961.8857 -7883.5669 7963.7695 c
-7878.7471 7966 -7873.8457 7963.5586 -7872.5508 7958.4512 C
-7872.4766 7955.6729 -7873.1968 7953.8262 -7875.5938 7952.3887 c
-7877.1733 7951.4414 -7882.5176 7951.5313 -7879.8574 7954.5342 C
-7877.9663 7953.0415 -7878.1323 7955.4873 -7879.0112 7956.6006 C
-7881.8823 7956.5693 -7882.5771 7954.4873 -7882.5156 7951.5186 c
-7882.5151 7951.4961 -7882.5142 7951.4697 -7882.5146 7951.4434 C
-7882.3574 7944.1367 -7881.1343 7938.3242 -7879.0718 7933.7285 C
-7879.0713 7933.7305 -7879.0708 7933.731 -7879.0698 7933.7324 c
-7878.8242 7934.2158 -7878.4819 7934.5 -7878.2485 7934.8945 c
-7878.1729 7935.0234 -7878.2495 7935.1387 -7878.1753 7935.2334 c
-7877.8262 7935.6851 -7876.9971 7936.3701 -7876.5313 7936.7402 c
-7876.3135 7936.9121 -7876.0835 7936.9985 -7875.8477 7937.1729 c
-7875.8125 7937.1973 -7875.8613 7937.3101 -7875.8115 7937.3418 c
-7874.7256 7938.0176 -7873.3638 7938.4277 -7871.7661 7938.6709 C
-7871.6699 7938.6816 -7871.6978 7938.5435 -7871.5669 7938.5938 C
-7871.1035 7938.6406 -7870.6309 7938.6738 -7870.1982 7938.6387 c
-7867.8862 7938.4453 -7865.4316 7937.0845 -7864.2129 7935.4668 c
-7863.0942 7933.9854 -7862.7095 7931.4854 -7863.3379 7929.7642 c
-7863.8774 7928.2949 -7865.4629 7926.9697 -7867.5684 7926.3906 c
-7869.4419 7925.8735 -7871.4492 7926.0845 -7872.3408 7927.3477 C
-7871.6875 7927.3535 -7871.1406 7927.4941 -7870.8545 7927.8477 C
-7870.7178 7928.2422 -7870.5859 7928.6387 -7870.7539 7929.2266 C
-7871.2002 7929.9541 -7872.0469 7930.5898 -7873.2178 7930.2129 c
-7874.4604 7929.8135 -7875.2119 7928.5781 -7875.0532 7927.3486 C
-7869.7505 7921.2031 -7862.0386 7918.6465 -7853.2539 7918.0537 C
-7853.2886 7918.0684 -7853.3218 7918.0801 -7853.3604 7918.0977 c
-7854.5015 7918.606 -7855.3027 7919.1143 -7856.2437 7919.7832 c
-7856.5957 7920.0332 -7857.0439 7920.1914 -7857.3428 7920.4316 c
-7857.4492 7920.5166 -7857.4766 7920.7227 -7857.5913 7920.8301 c
-7857.9707 7921.1895 -7858.3975 7921.4688 -7858.7563 7921.9063 c
-7859.8945 7923.2891 -7860.8662 7925.4346 -7860.3809 7927.6016 C
-7859.6523 7929.0234 -7858.6162 7930.2441 -7856.4995 7930.8145 c
-7856.2788 7930.8755 -7856.0542 7930.8633 -7855.8276 7930.9185 C
-7852.8613 7931.0537 -7850.8369 7928.7017 -7851.3667 7925.8755 C
-7851.5781 7925.6738 -7851.7471 7925.4434 -7851.8184 7925.1514 C
-7852.6582 7924.3101 -7854.9336 7924.0508 -7855.5996 7924.9517 C
-7855.1309 7924.9004 -7854.9199 7924.8848 -7854.6387 7925.2109 C
-7854.3105 7926.1475 -7855.4189 7926.7617 -7856.2759 7926.1045 C
-7856.8052 7925.1865 -7856.6587 7924.2695 -7856.1479 7923.231 c
-7855.9409 7922.8101 -7855.5991 7922.5 -7855.2881 7922.1104 c
-7854.8735 7921.5938 -7854.5239 7921.0415 -7854.0669 7920.6621 c
-7853.6563 7920.3232 -7853.1318 7920.1094 -7852.6899 7919.8369 c
-7852.5708 7919.7642 -7852.5039 7919.6641 -7852.4043 7919.6074 c
-7852.0596 7919.4121 -7851.7935 7919.2031 -7851.4438 7919.0469 c
-7850.9819 7918.8418 -7850.4561 7918.7373 -7849.9253 7918.5142 c
-7849.6636 7918.4063 -7849.4443 7918.1953 -7849.1709 7918.0854 c
-7849.0063 7918.0215 -7848.8311 7917.9688 -7848.6592 7917.9141 C
-7847.2695 7917.9185 -7845.8613 7917.9575 -7844.4375 7918.0342 c
-7842.7285 7918.0801 -7840.4653 7918.0938 -7838.5728 7918.1665 C
-7806.4688 7914.6533 -7773.98 7913.7305 -7741.4746 7913.2822 C
-7668.0664 7914.6152 -7577.8774 7916.2485 -7576.3535 7916.2485 c
-7573.7773 7916.2485 -7571.6909 7914.1602 -7571.6909 7911.5845 c
-7571.6909 7909.0078 -7573.7773 7906.9209 -7576.3535 7906.9209 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -
(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -
(ush Tool/ Decorative Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Chalk - Scribble)
(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Decorative Border)
(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -
(157 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0.000092 0 0.000031 0 1 1 1 Xa
(White)
Pc
0 0 0 1 0 0 0 Xa
(Black)
Pc
0.013123 0.959808 0.914061 0.001068 1 0 0 Xa
(CMYK Red)
Pc
0.030335 0.019226 0.913237 0.000061 1 1 0 Xa
(CMYK Yellow)
Pc
0.926909 0.072663 0.937499 0.01178 0 0.533333 0.215686 Xa
(CMYK Green)
Pc
0.912901 0.060243 0.043732 0.002228 0 0.627451 0.776471 Xa
(CMYK Cyan)
Pc
0.977386 0.986633 0.019257 0.002472 0.07451 0 0.486275 Xa
(CMYK Blue)
Pc
0.008362 0.986633 0.033204 0.000549 0.941176 0.015686 0.498039 Xa
(CMYK Magenta)
Pc
0.189456 0.967407 0.895293 0.058503 0.760784 0 0.043137 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.023499 0.910948 0.849149 0.001953 0.992157 0.101961 0.086275 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.024689 0.806485 0.905608 0.002045 0.996078 0.2 0.039216 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.024598 0.492958 0.924529 0.00177 1 0.501961 0 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.020233 0.343511 0.859129 0.001709 0.996078 0.65098 0.129412 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.058839 0.024933 0.886473 0.000153 0.94902 0.976471 0.109804 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.199252 0.016754 0.976318 0.001526 0.8 0.905882 0.043137 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.498512 0.02417 0.981048 0.002075 0.501961 0.768627 0.109804 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.757961 0.033112 0.979858 0.002564 0.25098 0.65098 0.160784 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.85922 0.151431 0.966491 0.033783 0.137255 0.490196 0.14902 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.899321 0.346319 0.928283 0.249363 0.070588 0.286275 0.113725 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.752834 0.019898 0.752804 0.001251 0.254902 0.666667 0.329412 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.818204 0.091829 0.452705 0.015045 0.203922 0.6 0.501961 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.703914 0.146548 0.043702 0.006348 0.309804 0.627451 0.792157 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.86218 0.487861 0.041352 0.007294 0.180392 0.345098 0.65098 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.966339 0.951415 0.049378 0.009644 0.066667 0.043137 0.47451 Xa
(C=100 M=95 Y=5 K=0)
Pc
0.970733 0.978363 0.305272 0.200473 0.043137 0.003922 0.27451 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.750057 0.948669 0.052125 0.004913 0.290196 0 0.490196 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.496315 0.968627 0.025269 0.003815 0.509804 0.007843 0.494118 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.285222 0.943023 0.316106 0.178836 0.576471 0.003922 0.290196 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.090974 0.93521 0.521172 0.015015 0.878431 0.003922 0.247059 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.016754 0.948882 0.183474 0.002014 0.956863 0.07451 0.419608 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.207126 0.220188 0.37586 0.057404 0.745098 0.67451 0.513726 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.322637 0.40528 0.448157 0.158968 0.568627 0.435294 0.364706 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.448646 0.468238 0.560693 0.320531 0.376471 0.294118 0.231373 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.487007 0.558373 0.603571 0.477211 0.270588 0.184314 0.152941 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.199588 0.371038 0.626001 0.066926 0.745098 0.537255 0.290196 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.269261 0.484138 0.737118 0.140017 0.627451 0.392157 0.184314 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.337316 0.591516 0.799374 0.266697 0.486275 0.254902 0.117647 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.37882 0.635676 0.878477 0.376379 0.388235 0.188235 0.058824 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.411627 0.707393 0.955566 0.488075 0.301961 0.121569 0.011765 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.493172 0.695521 0.818112 0.708034 0.14902 0.070588 0.043137 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Yellow, Orange)
Pc
Bb
0 0 0 0 Bh
2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple Radial)
Pc
(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laguna)
Pc
0 0 0 1 0 0 0 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.684077 0.544915 0.559564 0.685817 0.101961 0.101961 0.101961 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.623896 0.484779 0.487892 0.478065 0.2 0.2 0.2 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.557305 0.422431 0.413428 0.325475 0.301961 0.301961 0.301961 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.491157 0.364691 0.345281 0.218082 0.4 0.4 0.4 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.425696 0.31046 0.283452 0.127047 0.501961 0.501961 0.501961 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.35465 0.254185 0.222782 0.068421 0.6 0.6 0.6 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.271763 0.191531 0.160128 0.03241 0.701961 0.701961 0.701961 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.186465 0.129366 0.102846 0.012604 0.8 0.8 0.8 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.096803 0.066072 0.049866 0.00293 0.898039 0.898039 0.898039 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.048371 0.032868 0.024475 0.001099 0.94902 0.94902 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.013123 0.959808 0.914061 0.001068 1 0 0 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.016724 0.74963 0.915312 0.001556 1 0.25098 0 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.026703 0.085451 0.909056 0.001862 1 0.901961 0.062745 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.856413 0.095521 0.95642 0.015839 0.152941 0.541176 0.164706 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.962707 0.916777 0.021241 0.002441 0.066667 0.066667 0.513726 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.599145 0.901762 0.040986 0.007385 0.419608 0.086275 0.529412 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0.267185 0.235203 0.489631 0.072297 0.678431 0.631373 0.415686 Xa
0 J 0 j 1 w 10 M []0 d0 XR
450 -450 m
0 -450 L
0 0 L
450 0 L
450 -450 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Layer 2) Ln
0 A
q
0 J 0 j 1 w 10 M []0 d0 XR
450 -450 m
0 -450 L
0 0 L
450 0 L
450 -450 L
h
W
n
u
u
u
0 Ap
0 O
0.691096 0.3906 0.960449 0.28986 0.219608 0.294118 0.078431 Xa
-7.5 -252.5 m
-6.0708 -233.5537 17.5 -213.5 29.5 -229 c
41.5 -244.5 64.5 -239.4219 70.5 -223.4609 c
76.5 -207.5 92 -176.5 76.5 -166.5 c
61 -156.5 63.5 -138.5 73.5 -140.5 c
83.5 -142.5 91.5 -180 109.5 -181.5 c
127.5 -183 150.5 -183 158 -194 c
165.5 -205 166.5 -210.5 149 -221 c
140.4722 -226.1172 122.0117 -205.9053 110 -210 c
97.3628 -214.3076 91.4365 -243.0156 94 -252.5 c
99 -271 72.5 -260 83.5 -284 c
94.5 -308 65.5 -319.5 58 -299.5 c
50.5 -279.5 62.5 -255.5 40 -259 c
17.5 -262.5 28 -268.5 3.5 -272.5 c
-21 -276.5 -7.75098 -255.8281 -7.5 -252.5 c
f
U
u
222 -233 m
220.54 -257.0859 251 -243 239 -272.5 c
227 -302 222 -319.5 199.5 -306.5 c
177 -293.5 169 -270 157.5 -256 c
146 -242 122.5 -244.5 113.5 -260 c
104.5 -275.5 94.5 -280.5 106.5 -284 c
118.5 -287.5 125.5 -296.5 132 -278.5 c
138.5 -260.5 152 -261.9805 152 -275.7402 c
152 -289.5 170.5 -302.5 159.5 -320.5 c
148.5 -338.5 140 -352.5 166.5 -352.5 c
193 -352.5 218 -352.5 214.5 -337 c
211 -321.5 241.5 -303.5 252 -317.5 c
262.5 -331.5 283.5 -311 283.5 -333 c
283.5 -355 296 -337 297.5 -321 c
299 -305 309 -269.9805 324 -275.7402 c
339 -281.5 317 -235.5 302.5 -253.5 c
288 -271.5 285 -302 272 -292.75 c
259 -283.5 273 -276.5 262.5 -260 c
252 -243.5 241.5 -247 240.5 -233 c
239.5 -219 223 -216.5 222 -233 c
f
U
u
195 -115 m
197.3369 -130.7729 219 -110 245 -119.5 c
271 -129 278 -127.5 265.5 -143 c
253 -158.5 214.5 -162 225 -178.5 c
235.5 -195 228 -200 248.5 -200 c
269 -200 280 -198.0869 279.5 -220.0435 c
279 -242 263.0332 -246.5869 279.5166 -250.543 c
296 -254.5 289 -240.5 305.5 -227 c
322 -213.5 321 -190 337.5 -194 c
354 -198 323.5 -171.5 301 -176 c
278.5 -180.5 259 -185 262 -170 c
265 -155 305 -165.5 312.5 -145 c
320 -124.5 328 -125.5 311 -109 c
294 -92.5 286 -75.5 293.5 -68.5 c
301 -61.5 267 -54.5 272 -88.5 c
277 -122.5 256.5 -116.5 249 -103 c
241.5 -89.5 233 -63 215.5 -75 c
198 -87 193 -101.5 195 -115 c
f
U
u
-16.3003 -345.5 m
-4.25049 -359.2861 1 -340.5 1 -315.5 c
1 -290.5 27.5 -279.5 39 -292 c
50.5 -304.5 32.5 -308.5 43 -337 c
53.5 -365.5 56.5 -377.5 76 -361.5 c
95.5 -345.5 105 -336 112.5 -352.5 c
120 -369 97 -358.5 94.5 -374 c
92 -389.5 49 -399 67.5 -412 c
86 -425 90 -431 64 -423.5 c
38 -416 34 -412.5 42 -395 c
50 -377.5 56 -357.5 41.5 -362 c
27 -366.5 8 -359 9.5 -381 c
11 -403 14.5 -414.5 -2.5 -411 c
-19.5 -407.5 -40.5 -396 -25 -382.5 c
-9.5 -369 -15.3311 -352 -30.4155 -350 c
-45.5 -348 -28.1006 -332 -16.3003 -345.5 c
f
U
u
4 -85.3335 m
11.2363 -112.2173 15.333 -137.3335 -7.3335 -149.3335 c
-30 -161.3335 -50 -171.3335 -24 -191.3335 c
2 -211.3335 23.333 -214.6665 30.6665 -188 c
38 -161.3335 56.667 -112.6665 77.3335 -122.6665 c
98 -132.6665 60.667 -69.3335 47.3335 -102 c
34 -134.6665 36.7329 -168.6665 17.6997 -168.6665 c
-1.3335 -168.6665 17.8335 -150.6665 23.5835 -122.6665 c
29.3335 -94.6665 17.3335 -76.0005 42 -75.3335 c
66.6665 -74.6665 18.6665 -43.333 6.6665 -58.6665 c
-5.3335 -74 0.67041 -72.9634 4 -85.3335 c
f
U
u
253 -369.334 m
260.2363 -396.2168 264.333 -421.334 241.666 -433.334 c
219 -445.334 199 -455.334 225 -475.334 c
251 -495.334 277.667 -472.666 285 -446 c
292.334 -419.334 329.667 -479.666 350.334 -489.666 c
371 -499.666 365.667 -466.667 329 -433 c
303.0107 -409.1367 332.0332 -384 313 -384 c
293.9668 -384 266.834 -434.666 272.584 -406.666 c
278.334 -378.666 272.293 -393.3418 276.333 -369 c
282.999 -328.8398 233.667 -333.0127 221.667 -348.3457 c
209.667 -363.6797 249.6699 -356.9629 253 -369.334 c
f
U
u
123 -84.3335 m
106.6221 -82.6392 93.6665 -106.3335 115.6665 -122.3335 c
137.6665 -138.3335 146 -134.333 157 -157.6665 c
168 -181 185 -194.3335 199 -167 c
213 -139.6665 169.667 -145 177.667 -115 c
185.667 -85 205.9082 -79.667 173.1211 -66.3335 c
140.3335 -53 107.667 -33.7642 110.3335 -54.7153 c
113 -75.6665 151 -54.9995 149 -67.6665 c
147 -80.3335 142.3335 -86.3335 123 -84.3335 c
f
U
u
102.981 -461.667 m
86.2773 -451.4736 117.3335 -432.334 99.3335 -421.667 c
81.3335 -411 77.9995 -405.001 92.6665 -397.667 c
107.3335 -390.333 128.667 -390.999 131.3335 -368.333 c
134 -345.667 155.3335 -347.666 160 -368.333 c
164.6665 -389 188.5063 -408.334 196.5864 -389.667 c
204.6665 -371 220.667 -384.333 221.3335 -373 c
222 -361.667 253.334 -388.333 240.667 -392.333 c
228 -396.333 200.9478 -387.667 203.8071 -401 c
206.6665 -414.333 212.667 -431.001 223.3335 -421.667 c
234 -412.333 226.7891 -440.999 214.728 -442.333 c
202.6665 -443.667 174.667 -441.8936 173.3335 -427.7803 c
172 -413.667 159.3335 -386.999 152 -394.333 c
144.6665 -401.667 123.9995 -398.333 132.6665 -412.333 c
141.3335 -426.333 164.4722 -449.667 154.9028 -457.667 c
145.3335 -465.667 130 -481.667 128 -465.667 c
126 -449.667 110.6284 -466.334 102.981 -461.667 c
f
U
u
442.5 -252.5 m
443.9297 -233.5537 467.5 -213.5 479.5 -229 c
491.5 -244.5 514.5 -239.4219 520.5 -223.4609 c
526.5 -207.5 542 -176.5 526.5 -166.5 c
511 -156.5 513.5 -138.5 523.5 -140.5 c
533.5 -142.5 541.5 -180 559.5 -181.5 c
577.5 -183 600.5 -183 608 -194 c
615.5 -205 616.5 -210.5 599 -221 c
590.4727 -226.1172 572.0117 -205.9053 560 -210 c
547.3633 -214.3076 541.4365 -243.0156 544 -252.5 c
549 -271 522.5 -260 533.5 -284 c
544.5 -308 515.5 -319.5 508 -299.5 c
500.5 -279.5 512.5 -255.5 490 -259 c
467.5 -262.5 478 -268.5 453.5 -272.5 c
429 -276.5 442.249 -255.8281 442.5 -252.5 c
f
U
u
433.6992 -345.5 m
445.75 -359.2861 451 -340.5 451 -315.5 c
451 -290.5 477.5 -279.5 489 -292 c
500.5 -304.5 482.5 -308.5 493 -337 c
503.5 -365.5 506.5 -377.5 526 -361.5 c
545.5 -345.5 555 -336 562.5 -352.5 c
570 -369 547 -358.5 544.5 -374 c
542 -389.5 499 -399 517.5 -412 c
536 -425 540 -431 514 -423.5 c
488 -416 484 -412.5 492 -395 c
500 -377.5 506 -357.5 491.5 -362 c
477 -366.5 458 -359 459.5 -381 c
461 -403 464.5 -414.5 447.5 -411 c
430.5 -407.5 409.5 -396 425 -382.5 c
440.5 -369 434.6689 -352 419.584 -350 c
404.5 -348 421.8994 -332 433.6992 -345.5 c
f
U
u
454 -85.3335 m
461.2363 -112.2173 465.333 -137.3335 442.666 -149.3335 c
420 -161.3335 400 -171.3335 426 -191.3335 c
452 -211.3335 473.333 -214.6665 480.666 -188 c
488 -161.3335 506.667 -112.6665 527.334 -122.6665 c
548 -132.6665 510.667 -69.3335 497.334 -102 c
484 -134.6665 486.7324 -168.6665 467.6992 -168.6665 c
448.666 -168.6665 467.834 -150.6665 473.584 -122.6665 c
479.334 -94.6665 467.334 -76.0005 492 -75.3335 c
516.666 -74.6665 468.666 -43.333 456.666 -58.6665 c
444.666 -74 450.6699 -72.9634 454 -85.3335 c
f
U
u
68 -463 m
92.1147 -449.6025 64 -434 48 -433 c
32 -432 22 -413.5605 15 -426.7803 c
8 -440 6.39941 -440.0254 -11.3003 -442.5127 c
-29 -445 26.167 -472.9668 23.5835 -491.4834 c
21 -510 39.8789 -487 52.4395 -515 c
65 -543 105.8057 -540 106.9028 -527 c
108 -514 94.9932 -521 82.9966 -510 c
71 -499 77 -468.9043 66 -472.9521 c
55 -477 59 -468 68 -463 c
f
U
u
319 -352.5 m
324.4111 -333.3438 338.0449 -319 329.0225 -304 c
320 -289 367 -296 368 -282 c
369 -268 374 -296 391 -300 c
408 -304 447.4004 -305.6113 438.7002 -315.3057 c
430 -325 409 -309 388 -321 c
367 -333 375 -351 390 -361 c
405 -371 393 -386 387 -406 c
381 -426 387.4551 -444 413.7275 -444 c
440 -444 463 -448 458 -459 c
453 -470 410.4551 -484 413.7275 -501 c
417 -518 386.6875 -501 388.8438 -479 c
391 -457 367.6758 -453 362.3379 -435 c
357 -417 369 -414 369 -386 c
369 -358 366.4004 -369 342.2002 -369 c
318 -369 316.8174 -360.2266 319 -352.5 c
f
U
u
253 80.666 m
260.2363 53.7832 264.333 28.666 241.666 16.666 c
219 4.66602 199 -5.33398 225 -25.334 c
251 -45.334 277.667 -22.666 285 4 c
292.334 30.666 329.667 -29.666 350.334 -39.666 c
371 -49.666 365.667 -16.667 329 17 c
303.0107 40.8633 332.0332 66 313 66 c
293.9668 66 266.834 15.334 272.584 43.334 c
278.334 71.334 272.293 56.6582 276.333 81 c
282.999 121.1602 233.667 116.9873 221.667 101.6543 c
209.667 86.3203 249.6699 93.0371 253 80.666 c
f
U
u
102.981 -11.667 m
86.2773 -1.47363 117.3335 17.666 99.3335 28.333 c
81.3335 39 77.9995 44.999 92.6665 52.333 c
107.3335 59.667 128.667 59.001 131.3335 81.667 c
134 104.333 155.3335 102.334 160 81.667 c
164.6665 61 188.5063 41.666 196.5864 60.333 c
204.6665 79 220.667 65.667 221.3335 77 c
222 88.333 253.334 61.667 240.667 57.667 c
228 53.667 200.9478 62.333 203.8071 49 c
206.6665 35.667 212.667 18.999 223.3335 28.333 c
234 37.667 226.7891 9.00098 214.728 7.66699 c
202.6665 6.33301 174.667 8.10645 173.3335 22.2197 c
172 36.333 159.3335 63.001 152 55.667 c
144.6665 48.333 123.9995 51.667 132.6665 37.667 c
141.3335 23.667 164.4722 0.333008 154.9028 -7.66699 c
145.3335 -15.667 130 -31.667 128 -15.667 c
126 0.333008 110.6284 -16.334 102.981 -11.667 c
f
U
u
68 -13 m
92.1147 0.397461 64 16 48 17 c
32 18 22 36.4395 15 23.2197 c
8 10 6.39941 9.97461 -11.3003 7.4873 c
-29 5 26.167 -22.9668 23.5835 -41.4834 c
21 -60 39.8789 -37 52.4395 -65 c
65 -93 105.8057 -90 106.9028 -77 c
108 -64 94.9932 -71 82.9966 -60 c
71 -49 77 -18.9043 66 -22.9521 c
55 -27 59 -18 68 -13 c
f
U
u
319 97.5 m
324.4111 116.6563 338.0449 131 329.0225 146 c
320 161 367 154 368 168 c
369 182 374 154 391 150 c
408 146 447.4004 144.3887 438.7002 134.6943 c
430 125 409 141 388 129 c
367 117 375 99 390 89 c
405 79 393 64 387 44 c
381 24 387.4551 6 413.7275 6 c
440 6 463 2 458 -9 c
453 -20 410.4551 -34 413.7275 -51 c
417 -68 386.6875 -51 388.8438 -29 c
391 -7 367.6758 -3 362.3379 15 c
357 33 369 36 369 64 c
369 92 366.4004 81 342.2002 81 c
318 81 316.8174 89.7734 319 97.5 c
f
U
u
318.251 -57.9214 m
333.459 -74.5928 339.4004 -76 342.2002 -92 c
345 -108 337.4512 -137 330.2256 -146 c
323 -155 340.1064 -166.2896 362.3379 -182.2451 c
388.4697 -201 362.9395 -161 388.4697 -152 c
414 -143 425 -143.3994 422 -123.6997 c
419 -104 398.9395 -79 388.4697 -92 c
378 -105 380.7324 -138 370.3662 -119 c
360 -100 373.7324 -79.4307 370.3662 -62.7153 c
367 -46 347.4004 -67.8926 342.2002 -54.4463 c
337 -41 311.6221 -50.6543 318.251 -57.9214 c
f
U
u
333.0225 -227 m
336.5537 -211.3945 374 -232.0869 384 -218.5435 c
394 -205 416.9629 -205 426.4814 -214 c
436 -223 411 -236 413 -256 c
415 -276 379 -251 361 -268 c
343 -285 328.0449 -249 333.0225 -227 c
f
U
U
u
u
0.410071 0.547478 0.878263 0.383581 0.364706 0.227451 0.066667 Xa
-10.4165 -174 m
7.19922 -166.9624 54.9355 -205 72.9678 -186 c
91 -167 110 -169.8184 113 -180.4092 c
116 -191 81.584 -194.4902 51.292 -207.2451 c
21 -220 -20 -194 -34 -200 c
-48 -206 -69 -195.9395 -65 -181.9697 c
-61 -168 -38.001 -185.0195 -10.4165 -174 c
f
U
u
50.979 -356.0391 m
15.7593 -363.6436 15.8135 -346.6855 -3.04004 -350.5166 c
-21.8936 -354.3477 -47.9824 -347.0693 -31.4951 -325.3438 c
-15.0073 -303.6172 23.2046 -327.2148 49.2114 -314.3848 c
75.2188 -301.5537 102.1294 -312.2129 112.2358 -299.2695 c
122.3418 -286.3252 161.814 -315.2002 167.5723 -334.3535 c
173.3301 -353.5068 139.7725 -349.1689 120.1543 -335.8613 c
100.5366 -322.5537 68.9971 -352.1494 50.979 -356.0391 c
f
U
u
130 -426.7803 m
121.9307 -404.2129 188.1729 -408.8398 194.5864 -372.9199 c
201 -337 230.6748 -376.0771 264 -384 c
297.3252 -391.9229 317.8799 -388.3135 312 -405 c
306 -422.0264 291 -401.0527 274 -422.0264 c
257 -443 229.8955 -430.5879 222.4478 -412.2939 c
215 -394 184.667 -413.5605 173.3335 -427.7803 c
162 -442 136 -443.5605 130 -426.7803 c
f
U
u
123.8022 -236.2207 m
131.8145 -216.7061 147.21 -242.8613 167.4248 -233.0449 c
187.6396 -223.228 236.4043 -254.9521 246.9238 -223.9819 c
257.4404 -193.0117 306.834 -223.6362 309.458 -233.9063 c
312.083 -244.1748 276.8574 -226.2402 263.2148 -240.2686 c
249.5732 -254.2969 214.6646 -254.4219 207.8701 -268.7559 c
201.0757 -283.0898 179.7813 -256.124 164.9771 -263.9629 c
150.1719 -271.8037 94.4072 -264.5791 94.9141 -251.3291 c
95.4204 -238.0811 115.5078 -256.4248 123.8022 -236.2207 c
f
U
u
72.354 -100.7026 m
75.0381 -84.5796 90.9355 -100 106.9678 -106 c
123 -112 115.3716 -123.0015 128.9326 -130.8066 c
142.4937 -138.6118 169.9072 -134.3257 177.667 -115 c
185.4268 -95.6743 189 -136.9834 207 -134.4917 c
225 -132 233 -148.9395 225 -156.9697 c
217 -165 156.8208 -152.2129 146 -168 c
135.1792 -183.7871 110.9619 -178.9395 100.981 -156.9697 c
91 -135 68.0718 -134.2212 59 -117.4531 c
46.0796 -93.5718 69.6685 -116.8345 72.354 -100.7026 c
f
U
u
309.5967 -365 m
288 -353 296.9824 -344 324.9912 -337 c
353 -330 360.7051 -369 380.3525 -365 c
400 -361 415.3027 -392 428.6514 -384 c
442 -376 453 -437.5605 433 -426.7803 c
413 -416 417 -386.0332 406 -393.0166 c
395 -400 357 -383.877 349 -398.4385 c
341 -413 332.0449 -382 329.0225 -372 c
326 -362 309.5967 -365 y
f
U
u
178.8467 -21.4824 m
194.3657 -29.2935 217.6587 -5.86572 232.6191 -23.6084 c
247.5791 -41.3511 269.4063 -25.5483 271.7529 -11.4473 c
274.0996 2.65381 292.2881 -34.2637 274.1592 -45.7275 c
256.0293 -57.1914 246.8672 -37.8555 230.1563 -38.4043 c
213.4463 -38.9531 186.1626 -60.8999 171.9395 -52.8921 c
157.7163 -44.8848 160.042 -37.0024 150.6543 -20.3135 c
141.2666 -3.62451 174.1719 -19.1294 178.8467 -21.4824 c
f
U
u
-21.3003 -21.2949 m
-21.3003 -11.7197 7.61279 -12.1807 36.0796 -21.2949 c
64.5464 -30.4092 78.9854 -19.5762 93.999 -17.8433 c
124.8286 -14.2852 93.5103 -59.6572 65.9106 -54.7153 c
38.311 -49.7734 9 -40.8926 -17 -46.4463 c
-43 -52 -21.3003 -33.4834 -21.3003 -21.2949 c
f
U
u
458.584 -174 m
476.1992 -166.9624 523.9355 -205 541.9678 -186 c
560 -167 579 -169.8184 582 -180.4092 c
585 -191 550.584 -194.4902 520.292 -207.2451 c
490 -220 449 -194 435 -200 c
421 -206 400 -195.9395 404 -181.9697 c
408 -168 430.999 -185.0195 458.584 -174 c
f
U
u
519.9785 -356.0391 m
484.7598 -363.6436 484.8135 -346.6855 465.96 -350.5166 c
447.1064 -354.3477 421.0176 -347.0693 437.5049 -325.3438 c
453.9922 -303.6172 492.2051 -327.2148 518.2109 -314.3848 c
544.2188 -301.5537 571.1289 -312.2129 581.2363 -299.2695 c
591.3418 -286.3252 630.8145 -315.2002 636.5723 -334.3535 c
642.3301 -353.5068 608.7725 -349.1689 589.1543 -335.8613 c
569.5371 -322.5537 537.9971 -352.1494 519.9785 -356.0391 c
f
U
u
447.6992 -21.2949 m
447.6992 -11.7197 476.6133 -12.1807 505.0801 -21.2949 c
533.5469 -30.4092 547.9854 -19.5762 562.999 -17.8433 c
593.8281 -14.2852 562.5098 -59.6572 534.9102 -54.7153 c
507.3105 -49.7734 478 -40.8926 452 -46.4463 c
426 -52 447.6992 -33.4834 447.6992 -21.2949 c
f
U
u
319.5898 -139 m
331.7559 -144.8242 337.0586 -122.9937 339.1543 -100 c
341.25 -77.0063 402.3525 -87 425.502 -95 c
440.3037 -100.1152 432.2344 -134.8091 410.4697 -125 c
388.7051 -115.1909 344 -104.564 370.334 -148.8066 c
382.4346 -169.1362 361.3086 -179.9395 339.1543 -174.9697 c
317 -170 295.5791 -160.0269 273.5459 -162.6807 c
255.4932 -164.855 288.5898 -124.1587 319.5898 -139 c
f
U
U
u
u
0.547753 0.576623 0.844755 0.620478 0.172549 0.121569 0.05098 Xa
115 -73 m
109.5508 -89.3481 142.4946 -81.084 138.9785 -96.5718 c
133.5566 -120.4531 180.4355 -90.1079 171.1875 -73 c
161.9395 -55.8921 139.2588 -26.5898 131.6294 -32.2949 c
124 -38 106.498 -34.875 96.749 -48.4375 c
87 -62 118 -64 115 -73 c
f
U
u
11.5835 -283 m
-3.99316 -280.9453 -24 -257 -31 -269 c
-38 -281 -50 -230.0869 -31 -226.043 c
-12 -222 28.8672 -236.8418 34.0796 -222.5435 c
39.292 -208.2451 47.1592 -243 34.0796 -247 c
21 -251 13 -267.8379 22 -273.4189 c
31 -279 19.1655 -284 11.5835 -283 c
f
U
u
323.7285 -300 m
308.79 -293.1357 333.459 -290.1152 335.3379 -273.0752 c
337.2168 -256.0352 353.7578 -245.8789 376.502 -252.1113 c
399.2461 -258.3447 396.9307 -259.5391 405.2744 -275.1309 c
413.6182 -290.7227 415.9629 -309.0605 395.4814 -306.0303 c
375 -303 373.9395 -282.582 361.4697 -295.291 c
349 -308 336.626 -305.9268 323.7285 -300 c
f
U
u
394 -14.2852 m
381.2617 -26.6597 405.5449 -56.4316 370.7725 -47.7158 c
336 -39 291.1797 -39.8428 297.5898 -57.9214 c
304 -76 344.0283 -58.7939 357 -68.4795 c
369.9717 -78.165 415.7461 -90 421.373 -76 c
427 -62 423.3701 -49.0005 428.6514 -38 c
433.9326 -26.9995 404 -4.57031 394 -14.2852 c
f
U
u
201.8071 -327.0322 m
208.3364 -317.5098 220.252 -322.6709 234 -296.3613 c
253 -260 261 -320.4805 278 -309.7402 c
295 -299 298.833 -325.2637 291 -327.0322 c
283.167 -328.8008 271 -308 261 -320 c
251 -332 216.8906 -315.0059 214.5 -337 c
212.1094 -358.9941 190 -357 182 -352.5 c
174 -348 195.6143 -336.0645 201.8071 -327.0322 c
f
U
u
67.1567 -398.4385 m
57.4976 -376.4531 43.5454 -378.4746 46.0796 -398.4385 c
48.6138 -418.4023 37.2759 -432.3047 23.8428 -412.2939 c
10.4097 -392.2832 10 -415.0527 5 -422.0264 c
0 -429 -28.5732 -410.1035 -29.7866 -428.0518 c
-31 -446 9.01904 -443.6074 20.1064 -435 c
31.1938 -426.3926 66.9722 -426.3955 75.9106 -426.3955 c
94.9106 -426.3955 71.1567 -407.543 67.1567 -398.4385 c
f
U
u
242 -167 m
245.4463 -154.832 289.0664 -150 281.5332 -127 c
274 -104 289.2129 -110.7285 306 -118 c
322.7871 -125.2715 298.5 -149 324.2256 -146 c
339.0342 -144.2729 344.7285 -130.8066 352 -135.4185 c
358.3213 -139.4277 377.5059 -155.1992 352.0508 -156.9697 c
326.5957 -158.7402 303.4219 -153.9395 291.7109 -156.9697 c
280 -160 250.0137 -170.6094 268.0068 -180.3047 c
286 -190 258 -201.8975 246 -191.4487 c
234 -181 238.0352 -180.9976 242 -167 c
f
U
u
158.2793 -180.6973 m
158.1812 -194.1875 191.5024 -207.3867 174.5 -210.8135 c
157.4976 -214.2407 175.3931 -228.8809 191.2085 -224.207 c
207.0244 -219.5332 204.999 -213.1895 220.1289 -218.0825 c
235.2578 -222.9766 222.3105 -179.7676 212.728 -182.2451 c
201.8184 -185.0664 212.7793 -189.269 200.1553 -193.561 c
195.2671 -195.2231 187.4419 -196.0977 180.2466 -191.4487 c
168.8599 -184.0913 158.355 -170.3584 158.2793 -180.6973 c
f
U
u
296.9727 -428.0518 m
292.8076 -457.8047 281.5225 -447.4316 261 -438.9063 c
240.4775 -430.3809 243.832 -389.9492 221.1602 -388 c
198.4888 -386.0508 203.2871 -381.9072 201.8071 -371 c
200.3271 -360.0928 226.4229 -385.7832 232 -382.1045 c
237.5771 -378.4258 265.498 -412.9453 276 -408.0576 c
286.502 -403.1699 316.25 -393.0166 312 -405 c
307.6191 -417.3535 297.9453 -421.1035 296.9727 -428.0518 c
f
U
u
26.6865 -327.0322 m
31.751 -323.3135 59.5068 -332.0117 65.751 -319.9863 c
71.9951 -307.9609 108.667 -296.8135 116.667 -309.7402 c
124.667 -322.667 99.3335 -318.7305 91.3335 -327.0322 c
83.3335 -335.334 63.9668 -342.7891 52.667 -337.3896 c
41.3672 -331.9902 37.3335 -343 30.6665 -344.4551 c
23.5552 -346.0068 13.7256 -336.5488 26.6865 -327.0322 c
f
U
u
-14.8081 -161 m
-20.8726 -141.7202 -2.00391 -158.6768 5.99609 -143.3306 c
13.9961 -127.9844 14.2837 -140.3462 23.8428 -153.1743 c
36.7559 -170.5034 51.3164 -163.3486 55.1582 -153.1743 c
59 -143 74.502 -178.3286 65.751 -182.2451 c
57 -186.1616 25.2549 -184.167 20.1274 -172.0835 c
15 -160 9 -156 4 -161 c
-1 -166 -12.748 -167.5493 -14.8081 -161 c
f
U
u
233 -8.28223 m
214.6938 -3.66016 162.437 -29.7148 192.6714 -34.6885 c
222.9058 -39.6621 228.3594 -37.959 243.6797 -68.4795 c
259 -99 276.2344 -65.4316 282.1172 -47.7158 c
288 -30 261 -27.5898 251 -29.2949 c
241 -31 246 -11.5645 233 -8.28223 c
f
U
u
461.5977 -283 m
446.0215 -280.9453 426.0146 -257 419.0146 -269 c
412.0146 -281 400.0146 -230.0869 419.0146 -226.043 c
438.0146 -222 478.8818 -236.8418 484.0938 -222.5435 c
489.3066 -208.2451 497.1738 -243 484.0938 -247 c
471.0146 -251 463.0146 -267.8379 472.0146 -273.4189 c
481.0146 -279 469.1797 -284 461.5977 -283 c
f
U
u
517.1719 -398.4385 m
507.5117 -376.4531 493.5605 -378.4746 496.0938 -398.4385 c
498.6289 -418.4023 487.291 -432.3047 473.8574 -412.2939 c
460.4238 -392.2832 460.0146 -415.0527 455.0146 -422.0264 c
450.0146 -429 421.4414 -410.1035 420.2285 -428.0518 c
419.0146 -446 459.0332 -443.6074 470.1211 -435 c
481.209 -426.3926 516.9863 -426.3955 525.9258 -426.3955 c
544.9258 -426.3955 521.1719 -407.543 517.1719 -398.4385 c
f
U
u
435.207 -161 m
429.1426 -141.7202 448.0107 -158.6768 456.0107 -143.3306 c
464.0107 -127.9844 464.2988 -140.3462 473.8574 -153.1743 c
486.7705 -170.5034 501.3311 -163.3486 505.1729 -153.1743 c
509.0146 -143 524.5166 -178.3286 515.7656 -182.2451 c
507.0146 -186.1616 475.2695 -184.167 470.1426 -172.0835 c
465.0146 -160 459.0146 -156 454.0146 -161 c
449.0146 -166 437.2666 -167.5493 435.207 -161 c
f
U
U
U
Q
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
